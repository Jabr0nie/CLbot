{
	"id": "9498808f81539dec1cbe82253aa7af5f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"slipstream-main/contracts/core/VeloBot.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity =0.7.6;\r\n\r\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\r\n\r\n// Pool interfaces\r\ninterface ICLPoolActions {\r\n    function swap(\r\n        address recipient,\r\n        bool zeroForOne,\r\n        int256 amountSpecified,\r\n        uint160 sqrtPriceLimitX96,\r\n        bytes calldata data\r\n    ) external returns (int256 amount0, int256 amount1);\r\n}\r\n\r\ninterface ICLPoolState {\r\n    function slot0() external\r\n        view\r\n        returns (\r\n            uint160 sqrtPriceX96,\r\n            int24 tick,\r\n            uint16 observationIndex,\r\n            uint16 observationCardinality,\r\n            uint16 observationCardinalityNext,\r\n            bool unlocked\r\n        );\r\n}\r\n\r\ninterface ICLPoolConstants {\r\n    function factory() external view returns (address);\r\n    function token0() external view returns (address);\r\n    function token1() external view returns (address);\r\n    function gauge() external view returns (address);\r\n    function nft() external view returns (address);\r\n    function factoryRegistry() external view returns (address);\r\n    function tickSpacing() external view returns (int24);\r\n\r\n    function maxLiquidityPerTick() external view returns (uint128);\r\n}\r\n\r\ninterface ICLSwapCallback {\r\n    function uniswapV3SwapCallback(int256 amount0Delta, int256 amount1Delta, bytes calldata data) external;\r\n}\r\n\r\ninterface IERC20 {\r\n    function balanceOf(address account) external view returns (uint256);\r\n    function transfer(address recipient, uint256 amount) external returns (bool);\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\r\n}\r\n\r\ncontract V3Bot is ICLSwapCallback {\r\n    address public pool; // token0/token1 pool address\r\n    address public token0; // token0 on Optimism\r\n    address public token1; // token1 on Optimism\r\n\r\n    address public admin;\r\n\r\n    event SwapExecuted(address indexed user, uint256 amountIn, uint256 amountOut);\r\n\r\n    constructor() {\r\n        admin = msg.sender;\r\n    }\r\n\r\n    function _newAdmin(address newAdmin) external {\r\n        require(msg.sender == admin, \"Only owner can do this\");\r\n        admin = newAdmin;\r\n    }\r\n\r\n    function transferToAdmin(address Token) external {\r\n        uint256 value = IERC20(Token).balanceOf(address(this));\r\n        IERC20(Token).transfer(admin, value);\r\n    }\r\n\r\n    function V3Swap0for1() external {\r\n        uint256 amountIn = IERC20(token0).balanceOf(address(this));\r\n        require(amountIn > 0, \"Invalid input amount\");\r\n\r\n        // Get current sqrtPriceX96 from the pool\r\n        (uint160 sqrtPriceX96, , , , , ) = ICLPoolState(pool).slot0();\r\n        uint160 sqrtPriceLimitX96 = uint160(sqrtPriceX96 * 99 / 100); // 1% slippage\r\n\r\n        // Ensure valid range\r\n        if (sqrtPriceLimitX96 <= TickMath.MIN_SQRT_RATIO) {\r\n            sqrtPriceLimitX96 = TickMath.MIN_SQRT_RATIO + 1;\r\n        }\r\n\r\n        // Approve pool to spend token0\r\n        IERC20(token0).approve(pool, amountIn);\r\n\r\n        // Prepare data for callback (not strictly needed here, but included for completeness)\r\n        bytes memory data = abi.encode(address(this));\r\n\r\n        // Call the pool's swap function\r\n        ICLPoolActions(pool).swap(\r\n            address(this),     // recipient\r\n            true,              // zeroForOne: token0 -> token1\r\n            int256(amountIn),  // exact input\r\n            sqrtPriceLimitX96, // price limit\r\n            data               // callback data\r\n        );\r\n    }\r\n\r\n    // This is the required callback for the pool to call after swap\r\n    function uniswapV3SwapCallback(\r\n        int256 amount0Delta,\r\n        int256 amount1Delta,\r\n        bytes calldata /* data */\r\n    ) external override {\r\n        require(msg.sender == pool, \"Callback only from pool\");\r\n\r\n        // If amount0Delta > 0, we must pay that amount of token0 to the pool\r\n        if (amount0Delta > 0) {\r\n            IERC20(token0).transfer(pool, uint256(amount0Delta));\r\n        }\r\n        // If amount1Delta > 0, we must pay that amount of token1 to the pool (not expected in token0->token1 swap)\r\n        if (amount1Delta > 0) {\r\n            IERC20(token1).transfer(pool, uint256(amount1Delta));\r\n        }\r\n    }\r\n}"
			},
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0 <0.8.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":313:8644  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c514f986628190018bc9297fa68433fbba17061473c629c0d985757de6fd75fd64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c514f986628190018bc9297fa68433fbba17061473c629c0d985757de6fd75fd64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 EQ 0xF9 DUP7 PUSH3 0x819001 DUP12 0xC9 0x29 PUSH32 0xA68433FBBA17061473C629C0D985757DE6FD75FD64736F6C6343000706003300 ",
							"sourceMap": "313:8331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c514f986628190018bc9297fa68433fbba17061473c629c0d985757de6fd75fd64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC5 EQ 0xF9 DUP7 PUSH3 0x819001 DUP12 0xC9 0x29 PUSH32 0xA68433FBBA17061473C629C0D985757DE6FD75FD64736F6C6343000706003300 ",
							"sourceMap": "313:8331:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 313,
									"end": 8644,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c514f986628190018bc9297fa68433fbba17061473c629c0d985757de6fd75fd64736f6c63430007060033",
									".code": [
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 313,
											"end": 8644,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			},
			"slipstream-main/contracts/core/VeloBot.sol": {
				"ICLPoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"slipstream-main/contracts/core/VeloBot.sol\":\"ICLPoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x8cd340fa806d84208a7ae698ba54bb70e6598471b73a4b459238dad77d640870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28460327c1d254c312ae13f192841d82306cad0e15efaac0c2c60a0e57f806b6\",\"dweb:/ipfs/QmTopw58qEuUVh3KjCCM1hsAfaoQxmBhd2vuFnG2KEBXqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICLPoolConstants": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factoryRegistry",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"factoryRegistry()": "3bf0c9fb",
							"gauge()": "a6f19c84",
							"maxLiquidityPerTick()": "70cf754a",
							"nft()": "47ccca02",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factoryRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"slipstream-main/contracts/core/VeloBot.sol\":\"ICLPoolConstants\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x8cd340fa806d84208a7ae698ba54bb70e6598471b73a4b459238dad77d640870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28460327c1d254c312ae13f192841d82306cad0e15efaac0c2c60a0e57f806b6\",\"dweb:/ipfs/QmTopw58qEuUVh3KjCCM1hsAfaoQxmBhd2vuFnG2KEBXqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICLPoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"slot0()": "3850c7bd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"slipstream-main/contracts/core/VeloBot.sol\":\"ICLPoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x8cd340fa806d84208a7ae698ba54bb70e6598471b73a4b459238dad77d640870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28460327c1d254c312ae13f192841d82306cad0e15efaac0c2c60a0e57f806b6\",\"dweb:/ipfs/QmTopw58qEuUVh3KjCCM1hsAfaoQxmBhd2vuFnG2KEBXqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ICLSwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"slipstream-main/contracts/core/VeloBot.sol\":\"ICLSwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x8cd340fa806d84208a7ae698ba54bb70e6598471b73a4b459238dad77d640870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28460327c1d254c312ae13f192841d82306cad0e15efaac0c2c60a0e57f806b6\",\"dweb:/ipfs/QmTopw58qEuUVh3KjCCM1hsAfaoQxmBhd2vuFnG2KEBXqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"slipstream-main/contracts/core/VeloBot.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x8cd340fa806d84208a7ae698ba54bb70e6598471b73a4b459238dad77d640870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28460327c1d254c312ae13f192841d82306cad0e15efaac0c2c60a0e57f806b6\",\"dweb:/ipfs/QmTopw58qEuUVh3KjCCM1hsAfaoQxmBhd2vuFnG2KEBXqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"V3Bot": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "SwapExecuted",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "V3Swap0for1",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "_newAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "admin",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pool",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "Token",
									"type": "address"
								}
							],
							"name": "transferToAdmin",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"slipstream-main/contracts/core/VeloBot.sol\":1834:4397  contract V3Bot is ICLSwapCallback {\r... */\n  mstore(0x40, 0x80)\n    /* \"slipstream-main/contracts/core/VeloBot.sol\":2148:2199  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"slipstream-main/contracts/core/VeloBot.sol\":2173:2178  admin */\n  0x03\n    /* \"slipstream-main/contracts/core/VeloBot.sol\":2173:2191  admin = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"slipstream-main/contracts/core/VeloBot.sol\":2181:2191  msg.sender */\n  caller\n    /* \"slipstream-main/contracts/core/VeloBot.sol\":2173:2191  admin = msg.sender */\n  or\n  swap1\n  sstore\n    /* \"slipstream-main/contracts/core/VeloBot.sol\":1834:4397  contract V3Bot is ICLSwapCallback {\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1834:4397  contract V3Bot is ICLSwapCallback {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xd21220a7\n      gt\n      tag_11\n      jumpi\n      dup1\n      0xd21220a7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xe6f4d0aa\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf851a440\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfa461e33\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x0dfe1681\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16f0115b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x48d32466\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8cbc5cff\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1931:1952  address public token0 */\n    tag_3:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1875:1894  address public pool */\n    tag_4:\n      tag_12\n      tag_15\n      jump\t// in\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2538:3671  function V3Swap0for1() external {\r... */\n    tag_5:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      stop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2361:2530  function transferToAdmin(address Token) external {\r... */\n    tag_6:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_20\n      jump\t// in\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1981:2002  address public token1 */\n    tag_7:\n      tag_12\n      tag_22\n      jump\t// in\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2207:2353  function _newAdmin(address newAdmin) external {\r... */\n    tag_8:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_25\n      jump\t// in\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2033:2053  address public admin */\n    tag_9:\n      tag_12\n      tag_27\n      jump\t// in\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3749:4394  function uniswapV3SwapCallback(\r... */\n    tag_10:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_29\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_29:\n      dup2\n      calldataload\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap2\n      dup2\n      add\n      swap1\n      0x60\n      dup2\n      add\n      0x40\n      dup3\n      add\n      calldataload\n      0x0100000000\n      dup2\n      gt\n      iszero\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_30:\n      dup3\n      add\n      dup4\n      0x20\n      dup3\n      add\n      gt\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap2\n      dup5\n      0x01\n      dup4\n      mul\n      dup5\n      add\n      gt\n      0x0100000000\n      dup4\n      gt\n      or\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n      tag_33\n      jump\t// in\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1931:1952  address public token0 */\n    tag_13:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x01))\n      dup2\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1875:1894  address public pool */\n    tag_15:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n      dup2\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2538:3671  function V3Swap0for1() external {\r... */\n    tag_17:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2607:2613  token0 */\n      sload(0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2600:2639  IERC20(token0).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2633:2637  this */\n      address\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2600:2639  IERC20(token0).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2581:2597  uint256 amountIn */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2607:2613  token0 */\n      and\n      swap2\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2600:2624  IERC20(token0).balanceOf */\n      0x70a08231\n      swap2\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2600:2639  IERC20(token0).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2607:2613  token0 */\n      dup7\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2600:2639  IERC20(token0).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_37\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_37:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_38\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      pop\n      mload\n      swap1\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2658:2670  amountIn > 0 */\n      dup1\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2650:2695  require(amountIn > 0, \"Invalid input amount\") */\n      tag_39\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x62, 0x125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_39:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2760:2780  uint160 sqrtPriceX96 */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2807:2811  pool */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2794:2818  ICLPoolState(pool).slot0 */\n      and\n      0x3850c7bd\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2794:2820  ICLPoolState(pool).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xc0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_42\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_42:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0xc0\n      dup2\n      lt\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      mload\n      swap1\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2831:2856  uint160 sqrtPriceLimitX96 */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2887:2890  100 */\n      0x64\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2882:2884  99 */\n      0x63\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2867:2884  sqrtPriceX96 * 99 */\n      dup5\n      mul\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2867:2890  sqrtPriceX96 * 99 / 100 */\n      and\n      div\n      swap1\n      pop\n        /* \"@uniswap/v3-core/contracts/libraries/TickMath.sol\":824:834  4295128739 */\n      0x01000276a3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2954:2998  sqrtPriceLimitX96 <= TickMath.MIN_SQRT_RATIO */\n      dup3\n      and\n      gt\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2950:3074  if (sqrtPriceLimitX96 <= TickMath.MIN_SQRT_RATIO) {\r... */\n      tag_45\n      jumpi\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3035:3062  TickMath.MIN_SQRT_RATIO + 1 */\n      0x01000276a4\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2950:3074  if (sqrtPriceLimitX96 <= TickMath.MIN_SQRT_RATIO) {\r... */\n    tag_45:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3134:3140  token0 */\n      sload(0x01)\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3150:3154  pool */\n      dup1\n      sload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3127:3165  IERC20(token0).approve(pool, amountIn) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3150:3154  pool */\n      swap3\n      dup4\n      and\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3127:3165  IERC20(token0).approve(pool, amountIn) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3134:3140  token0 */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3127:3149  IERC20(token0).approve */\n      0x095ea7b3\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3127:3165  IERC20(token0).approve(pool, amountIn) */\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      0x20\n      swap4\n      swap1\n      swap3\n      swap1\n      dup4\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup3\n      swap1\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3134:3140  token0 */\n      dup8\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3127:3165  IERC20(token0).approve(pool, amountIn) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_48\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_48:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3294:3319  abi.encode(address(this)) */\n      0x40\n      dup1\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3313:3317  this */\n      address\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3127:3165  IERC20(token0).approve(pool, amountIn) */\n      0x20\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3294:3319  abi.encode(address(this)) */\n      dup3\n      dup2\n      add\n      dup3\n      swap1\n      mstore\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      dup3\n      add\n      dup2\n      mstore\n      dup4\n      dup6\n      add\n      swap5\n      dup6\n      swap1\n      mstore\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3274:3291  bytes memory data */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3389:3393  pool */\n      dup1\n      sload\n      shl(0xe3, 0x02515961)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3374:3663  ICLPoolActions(pool).swap(\r... */\n      swap1\n      swap7\n      mstore\n      0x44\n      dup6\n      add\n      dup5\n      dup2\n      mstore\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3389:3393  pool */\n      0x01\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3374:3663  ICLPoolActions(pool).swap(\r... */\n      0x64\n      dup8\n      add\n      dup2\n      swap1\n      mstore\n      0x84\n      dup8\n      add\n      dup12\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup10\n      dup2\n      and\n      0xa4\n      dup10\n      add\n      mstore\n      0xa0\n      0xc4\n      dup10\n      add\n      swap1\n      dup2\n      mstore\n      dup6\n      mload\n      0xe4\n      dup11\n      add\n      mstore\n      dup6\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3294:3319  abi.encode(address(this)) */\n      swap6\n      swap10\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3389:3393  pool */\n      swap1\n      swap2\n      and\n      swap8\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3374:3399  ICLPoolActions(pool).swap */\n      0x128acb08\n      swap8\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3313:3317  this */\n      swap7\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3389:3393  pool */\n      swap3\n      swap6\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3530:3538  amountIn */\n      dup14\n      swap6\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3570:3587  sqrtPriceLimitX96 */\n      dup13\n      swap6\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3294:3319  abi.encode(address(this)) */\n      dup13\n      swap6\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3374:3663  ICLPoolActions(pool).swap(\r... */\n      swap1\n      swap5\n      swap4\n      0x0104\n      add\n      swap3\n      swap1\n      dup7\n      add\n      swap2\n      dup2\n      swap1\n      dup5\n      swap1\n      dup5\n      swap1\n    tag_50:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_52\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_50)\n    tag_52:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_53:\n      pop\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_56:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x40\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2538:3671  function V3Swap0for1() external {\r... */\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2361:2530  function transferToAdmin(address Token) external {\r... */\n    tag_20:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2421:2434  uint256 value */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2444:2449  Token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2437:2460  IERC20(Token).balanceOf */\n      and\n      0x70a08231\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2469:2473  this */\n      address\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2437:2475  IERC20(Token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_61\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_61:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2509:2514  admin */\n      sload(0x03)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2522  IERC20(Token).transfer(admin, value) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2509:2514  admin */\n      swap3\n      dup4\n      and\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2522  IERC20(Token).transfer(admin, value) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup5\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2437:2475  IERC20(Token).balanceOf(address(this)) */\n      swap3\n      swap4\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2508  IERC20(Token).transfer */\n      swap1\n      dup5\n      and\n      swap2\n      0xa9059cbb\n      swap2\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2522  IERC20(Token).transfer(admin, value) */\n      0x44\n      dup1\n      dup3\n      add\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2437:2475  IERC20(Token).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2522  IERC20(Token).transfer(admin, value) */\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2509:2514  admin */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2508  IERC20(Token).transfer */\n      dup8\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2486:2522  IERC20(Token).transfer(admin, value) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_65\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_65:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2361:2530  function transferToAdmin(address Token) external {\r... */\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":1981:2002  address public token1 */\n    tag_22:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x02))\n      dup2\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2207:2353  function _newAdmin(address newAdmin) external {\r... */\n    tag_25:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2286:2291  admin */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2272:2282  msg.sender */\n      caller\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2272:2291  msg.sender == admin */\n      eq\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2264:2318  require(msg.sender == admin, \"Only owner can do this\") */\n      tag_68\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x16\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x50, 0x4f6e6c79206f776e65722063616e20646f2074686973)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_68:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2329:2334  admin */\n      0x03\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2329:2345  admin = newAdmin */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2207:2353  function _newAdmin(address newAdmin) external {\r... */\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":2033:2053  address public admin */\n    tag_27:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3749:4394  function uniswapV3SwapCallback(\r... */\n    tag_33:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3934:3938  pool */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3920:3930  msg.sender */\n      caller\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3920:3938  msg.sender == pool */\n      eq\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":3912:3966  require(msg.sender == pool, \"Callback only from pool\") */\n      tag_70\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x17\n      0x24\n      dup3\n      add\n      mstore\n      0x43616c6c6261636b206f6e6c792066726f6d20706f6f6c000000000000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_70:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4077:4078  0 */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4062:4074  amount0Delta */\n      dup5\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4062:4078  amount0Delta > 0 */\n      sgt\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4058:4159  if (amount0Delta > 0) {\r... */\n      iszero\n      tag_71\n      jumpi\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4102:4108  token0 */\n      sload(0x01)\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4119:4123  pool */\n      dup1\n      sload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4095:4147  IERC20(token0).transfer(pool, uint256(amount0Delta)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4119:4123  pool */\n      swap3\n      dup4\n      and\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4095:4147  IERC20(token0).transfer(pool, uint256(amount0Delta)) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup10\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4102:4108  token0 */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4095:4118  IERC20(token0).transfer */\n      0xa9059cbb\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4095:4147  IERC20(token0).transfer(pool, uint256(amount0Delta)) */\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      0x20\n      swap4\n      swap1\n      swap3\n      swap1\n      dup4\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup3\n      swap1\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4102:4108  token0 */\n      dup8\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4095:4147  IERC20(token0).transfer(pool, uint256(amount0Delta)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_74:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      pop\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4058:4159  if (amount0Delta > 0) {\r... */\n    tag_71:\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4305:4306  0 */\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4290:4302  amount1Delta */\n      dup4\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4290:4306  amount1Delta > 0 */\n      sgt\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4286:4387  if (amount1Delta > 0) {\r... */\n      iszero\n      tag_66\n      jumpi\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4330:4336  token1 */\n      sload(0x02)\n      0x00\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4347:4351  pool */\n      dup1\n      sload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4323:4375  IERC20(token1).transfer(pool, uint256(amount1Delta)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4347:4351  pool */\n      swap3\n      dup4\n      and\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4323:4375  IERC20(token1).transfer(pool, uint256(amount1Delta)) */\n      0x04\n      dup3\n      add\n      mstore\n      0x24\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      swap1\n      mload\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4330:4336  token1 */\n      swap2\n      swap1\n      swap4\n      and\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4323:4346  IERC20(token1).transfer */\n      0xa9059cbb\n      swap3\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4323:4375  IERC20(token1).transfer(pool, uint256(amount1Delta)) */\n      0x44\n      dup1\n      dup4\n      add\n      swap4\n      0x20\n      swap4\n      swap1\n      swap3\n      swap1\n      dup4\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      dup3\n      swap1\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4330:4336  token1 */\n      dup8\n        /* \"slipstream-main/contracts/core/VeloBot.sol\":4323:4375  IERC20(token1).transfer(pool, uint256(amount1Delta)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_77\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_77:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_79\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_79:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fc28bab020475831f26f62a6fb03f28f772fd2684cba5b7d383d6612246b35d964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600380546001600160a01b0319163317905561082c806100326000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063d21220a71161005b578063d21220a7146100e9578063e6f4d0aa146100f1578063f851a44014610117578063fa461e331461011f57610088565b80630dfe16811461008d57806316f0115b146100b157806348d32466146100b95780638cbc5cff146100c3575b600080fd5b61009561019b565b604080516001600160a01b039092168252519081900360200190f35b6100956101aa565b6100c16101b9565b005b6100c1600480360360208110156100d957600080fd5b50356001600160a01b03166104d8565b6100956105dc565b6100c16004803603602081101561010757600080fd5b50356001600160a01b03166105eb565b610095610665565b6100c16004803603606081101561013557600080fd5b81359160208101359181019060608101604082013564010000000081111561015c57600080fd5b82018360208201111561016e57600080fd5b8035906020019184600183028401116401000000008311171561019057600080fd5b509092509050610674565b6001546001600160a01b031681565b6000546001600160a01b031681565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561020457600080fd5b505afa158015610218573d6000803e3d6000fd5b505050506040513d602081101561022e57600080fd5b505190508061027b576040805162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b604482015290519081900360640190fd5b60008060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156102ca57600080fd5b505afa1580156102de573d6000803e3d6000fd5b505050506040513d60c08110156102f457600080fd5b50519050600060646001600160a01b0360638402160490506401000276a36001600160a01b0382161161032957506401000276a45b600154600080546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018890529051919093169263095ea7b39260448083019360209390929083900390910190829087803b15801561038657600080fd5b505af115801561039a573d6000803e3d6000fd5b505050506040513d60208110156103b057600080fd5b5050604080513060208281018290528351808403820181528385019485905260008054630251596160e31b90965260448501848152600160648701819052608487018b90526001600160a01b0389811660a489015260a060c48901908152855160e48a0152855195999091169763128acb08979692958d958c958c959094936101040192908601918190849084905b8381101561045757818101518382015260200161043f565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b505050506040513d60408110156104d057600080fd5b505050505050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d602081101561055157600080fd5b50516003546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810184905290519293509084169163a9059cbb916044808201926020929091908290030181600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b505050506040513d60208110156105d657600080fd5b50505050565b6002546001600160a01b031681565b6003546001600160a01b03163314610643576040805162461bcd60e51b81526020600482015260166024820152754f6e6c79206f776e65722063616e20646f207468697360501b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6000546001600160a01b031633146106d3576040805162461bcd60e51b815260206004820152601760248201527f43616c6c6261636b206f6e6c792066726f6d20706f6f6c000000000000000000604482015290519081900360640190fd5b600084131561076657600154600080546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018990529051919093169263a9059cbb9260448083019360209390929083900390910190829087803b15801561073957600080fd5b505af115801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50505b60008313156105d657600254600080546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018890529051919093169263a9059cbb9260448083019360209390929083900390910190829087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b505050506040513d60208110156104d057600080fdfea2646970667358221220fc28bab020475831f26f62a6fb03f28f772fd2684cba5b7d383d6612246b35d964736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x82C DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD21220A7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE6F4D0AA EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x11F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x48D32466 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x8CBC5CFF EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x95 PUSH2 0x665 JUMP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x218 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x27B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081A5B9C1D5D08185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x63 DUP5 MUL AND DIV SWAP1 POP PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND GT PUSH2 0x329 JUMPI POP PUSH5 0x1000276A4 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP3 ADD DUP2 MSTORE DUP4 DUP6 ADD SWAP5 DUP6 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x2515961 PUSH1 0xE3 SHL SWAP1 SWAP7 MSTORE PUSH1 0x44 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x64 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0xA4 DUP10 ADD MSTORE PUSH1 0xA0 PUSH1 0xC4 DUP10 ADD SWAP1 DUP2 MSTORE DUP6 MLOAD PUSH1 0xE4 DUP11 ADD MSTORE DUP6 MLOAD SWAP6 SWAP10 SWAP1 SWAP2 AND SWAP8 PUSH4 0x128ACB08 SWAP8 SWAP7 SWAP3 SWAP6 DUP14 SWAP6 DUP13 SWAP6 DUP13 SWAP6 SWAP1 SWAP5 SWAP4 PUSH2 0x104 ADD SWAP3 SWAP1 DUP7 ADD SWAP2 DUP2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x457 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP SWAP1 DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x643 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4F6E6C79206F776E65722063616E20646F2074686973 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6261636B206F6E6C792066726F6D20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SGT ISZERO PUSH2 0x766 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x28 0xBA 0xB0 KECCAK256 SELFBALANCE PC BALANCE CALLCODE PUSH16 0x62A6FB03F28F772FD2684CBA5B7D383D PUSH7 0x12246B35D96473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "1834:2563:1:-:0;;;2148:51;;;;;;;;;-1:-1:-1;2173:5:1;:18;;-1:-1:-1;;;;;;2173:18:1;2181:10;2173:18;;;1834:2563;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c8063d21220a71161005b578063d21220a7146100e9578063e6f4d0aa146100f1578063f851a44014610117578063fa461e331461011f57610088565b80630dfe16811461008d57806316f0115b146100b157806348d32466146100b95780638cbc5cff146100c3575b600080fd5b61009561019b565b604080516001600160a01b039092168252519081900360200190f35b6100956101aa565b6100c16101b9565b005b6100c1600480360360208110156100d957600080fd5b50356001600160a01b03166104d8565b6100956105dc565b6100c16004803603602081101561010757600080fd5b50356001600160a01b03166105eb565b610095610665565b6100c16004803603606081101561013557600080fd5b81359160208101359181019060608101604082013564010000000081111561015c57600080fd5b82018360208201111561016e57600080fd5b8035906020019184600183028401116401000000008311171561019057600080fd5b509092509050610674565b6001546001600160a01b031681565b6000546001600160a01b031681565b600154604080516370a0823160e01b815230600482015290516000926001600160a01b0316916370a08231916024808301926020929190829003018186803b15801561020457600080fd5b505afa158015610218573d6000803e3d6000fd5b505050506040513d602081101561022e57600080fd5b505190508061027b576040805162461bcd60e51b8152602060048201526014602482015273125b9d985b1a59081a5b9c1d5d08185b5bdd5b9d60621b604482015290519081900360640190fd5b60008060009054906101000a90046001600160a01b03166001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160c06040518083038186803b1580156102ca57600080fd5b505afa1580156102de573d6000803e3d6000fd5b505050506040513d60c08110156102f457600080fd5b50519050600060646001600160a01b0360638402160490506401000276a36001600160a01b0382161161032957506401000276a45b600154600080546040805163095ea7b360e01b81526001600160a01b039283166004820152602481018890529051919093169263095ea7b39260448083019360209390929083900390910190829087803b15801561038657600080fd5b505af115801561039a573d6000803e3d6000fd5b505050506040513d60208110156103b057600080fd5b5050604080513060208281018290528351808403820181528385019485905260008054630251596160e31b90965260448501848152600160648701819052608487018b90526001600160a01b0389811660a489015260a060c48901908152855160e48a0152855195999091169763128acb08979692958d958c958c959094936101040192908601918190849084905b8381101561045757818101518382015260200161043f565b50505050905090810190601f1680156104845780820380516001836020036101000a031916815260200191505b5096505050505050506040805180830381600087803b1580156104a657600080fd5b505af11580156104ba573d6000803e3d6000fd5b505050506040513d60408110156104d057600080fd5b505050505050565b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561052757600080fd5b505afa15801561053b573d6000803e3d6000fd5b505050506040513d602081101561055157600080fd5b50516003546040805163a9059cbb60e01b81526001600160a01b0392831660048201526024810184905290519293509084169163a9059cbb916044808201926020929091908290030181600087803b1580156105ac57600080fd5b505af11580156105c0573d6000803e3d6000fd5b505050506040513d60208110156105d657600080fd5b50505050565b6002546001600160a01b031681565b6003546001600160a01b03163314610643576040805162461bcd60e51b81526020600482015260166024820152754f6e6c79206f776e65722063616e20646f207468697360501b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b6000546001600160a01b031633146106d3576040805162461bcd60e51b815260206004820152601760248201527f43616c6c6261636b206f6e6c792066726f6d20706f6f6c000000000000000000604482015290519081900360640190fd5b600084131561076657600154600080546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018990529051919093169263a9059cbb9260448083019360209390929083900390910190829087803b15801561073957600080fd5b505af115801561074d573d6000803e3d6000fd5b505050506040513d602081101561076357600080fd5b50505b60008313156105d657600254600080546040805163a9059cbb60e01b81526001600160a01b039283166004820152602481018890529051919093169263a9059cbb9260448083019360209390929083900390910190829087803b1580156107cc57600080fd5b505af11580156107e0573d6000803e3d6000fd5b505050506040513d60208110156104d057600080fdfea2646970667358221220fc28bab020475831f26f62a6fb03f28f772fd2684cba5b7d383d6612246b35d964736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xD21220A7 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0xE9 JUMPI DUP1 PUSH4 0xE6F4D0AA EQ PUSH2 0xF1 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x11F JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x16F0115B EQ PUSH2 0xB1 JUMPI DUP1 PUSH4 0x48D32466 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x8CBC5CFF EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0x1AA JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x1B9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xD9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4D8 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x5DC JUMP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x107 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5EB JUMP JUMPDEST PUSH2 0x95 PUSH2 0x665 JUMP JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x135 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP2 DUP2 ADD SWAP1 PUSH1 0x60 DUP2 ADD PUSH1 0x40 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x15C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x16E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0x190 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x674 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x218 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP DUP1 PUSH2 0x27B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B9D985B1A59081A5B9C1D5D08185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xC0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0xC0 DUP2 LT ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH1 0x63 DUP5 MUL AND DIV SWAP1 POP PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND GT PUSH2 0x329 JUMPI POP PUSH5 0x1000276A4 JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0x95EA7B3 SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x39A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x3B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD ADDRESS PUSH1 0x20 DUP3 DUP2 ADD DUP3 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB DUP3 ADD DUP2 MSTORE DUP4 DUP6 ADD SWAP5 DUP6 SWAP1 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0x2515961 PUSH1 0xE3 SHL SWAP1 SWAP7 MSTORE PUSH1 0x44 DUP6 ADD DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x64 DUP8 ADD DUP2 SWAP1 MSTORE PUSH1 0x84 DUP8 ADD DUP12 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND PUSH1 0xA4 DUP10 ADD MSTORE PUSH1 0xA0 PUSH1 0xC4 DUP10 ADD SWAP1 DUP2 MSTORE DUP6 MLOAD PUSH1 0xE4 DUP11 ADD MSTORE DUP6 MLOAD SWAP6 SWAP10 SWAP1 SWAP2 AND SWAP8 PUSH4 0x128ACB08 SWAP8 SWAP7 SWAP3 SWAP6 DUP14 SWAP6 DUP13 SWAP6 DUP13 SWAP6 SWAP1 SWAP5 SWAP4 PUSH2 0x104 ADD SWAP3 SWAP1 DUP7 ADD SWAP2 DUP2 SWAP1 DUP5 SWAP1 DUP5 SWAP1 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x457 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x43F JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x484 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP7 POP POP POP POP POP POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x527 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x53B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 MLOAD SWAP3 SWAP4 POP SWAP1 DUP5 AND SWAP2 PUSH4 0xA9059CBB SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x643 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x4F6E6C79206F776E65722063616E20646F2074686973 PUSH1 0x50 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D3 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616C6C6261636B206F6E6C792066726F6D20706F6F6C000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP5 SGT ISZERO PUSH2 0x766 JUMPI PUSH1 0x1 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP10 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x74D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x763 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMPDEST PUSH1 0x0 DUP4 SGT ISZERO PUSH2 0x5D6 JUMPI PUSH1 0x2 SLOAD PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP9 SWAP1 MSTORE SWAP1 MLOAD SWAP2 SWAP1 SWAP4 AND SWAP3 PUSH4 0xA9059CBB SWAP3 PUSH1 0x44 DUP1 DUP4 ADD SWAP4 PUSH1 0x20 SWAP4 SWAP1 SWAP3 SWAP1 DUP4 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP3 SWAP1 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x7CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x7E0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xFC 0x28 0xBA 0xB0 KECCAK256 SELFBALANCE PC BALANCE CALLCODE PUSH16 0x62A6FB03F28F772FD2684CBA5B7D383D PUSH7 0x12246B35D96473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "1834:2563:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1931:21;;;:::i;:::-;;;;-1:-1:-1;;;;;1931:21:1;;;;;;;;;;;;;;1875:19;;;:::i;2538:1133::-;;;:::i;:::-;;2361:169;;;;;;;;;;;;;;;;-1:-1:-1;2361:169:1;-1:-1:-1;;;;;2361:169:1;;:::i;1981:21::-;;;:::i;2207:146::-;;;;;;;;;;;;;;;;-1:-1:-1;2207:146:1;-1:-1:-1;;;;;2207:146:1;;:::i;2033:20::-;;;:::i;3749:645::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3749:645:1;;-1:-1:-1;3749:645:1;-1:-1:-1;3749:645:1;:::i;1931:21::-;;;-1:-1:-1;;;;;1931:21:1;;:::o;1875:19::-;;;-1:-1:-1;;;;;1875:19:1;;:::o;2538:1133::-;2607:6;;2600:39;;;-1:-1:-1;;;2600:39:1;;2633:4;2600:39;;;;;;2581:16;;-1:-1:-1;;;;;2607:6:1;;2600:24;;:39;;;;;;;;;;;;;;2607:6;2600:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2600:39:1;;-1:-1:-1;2658:12:1;2650:45;;;;;-1:-1:-1;;;2650:45:1;;;;;;;;;;;;-1:-1:-1;;;2650:45:1;;;;;;;;;;;;;;;2760:20;2807:4;;;;;;;;;-1:-1:-1;;;;;2807:4:1;-1:-1:-1;;;;;2794:24:1;;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2794:26:1;;-1:-1:-1;2831:25:1;2887:3;-1:-1:-1;;;;;2882:2:1;2867:17;;:23;;;-1:-1:-1;824:10:0;-1:-1:-1;;;;;2954:44:1;;;2950:124;;-1:-1:-1;3035:27:1;2950:124;3134:6;;;3150:4;;3127:38;;;-1:-1:-1;;;3127:38:1;;-1:-1:-1;;;;;3150:4:1;;;3127:38;;;;;;;;;;;;3134:6;;;;;3127:22;;:38;;;;;;;;;;;;;;;;;;;3134:6;3127:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3294:25:1;;;3313:4;3127:38;3294:25;;;;;;;;;;;;;;;;;;;;;;3274:17;3389:4;;-1:-1:-1;;;3374:289:1;;;;;;;;;3389:4;3374:289;;;;;;;;;;;;-1:-1:-1;;;;;3374:289:1;;;;;;;;;;;;;;;;;;;;;;3294:25;;3389:4;;;;3374:25;;3313:4;3389;;3530:8;;3570:17;;3294:25;;3374:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2538:1133:1:o;2361:169::-;2421:13;2444:5;-1:-1:-1;;;;;2437:23:1;;2469:4;2437:38;;;;;;;;;;;;;-1:-1:-1;;;;;2437:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2437:38:1;2509:5;;2486:36;;;-1:-1:-1;;;2486:36:1;;-1:-1:-1;;;;;2509:5:1;;;2486:36;;;;;;;;;;;;2437:38;;-1:-1:-1;2486:22:1;;;;;;:36;;;;;2437:38;;2486:36;;;;;;;;2509:5;2486:22;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2361:169:1:o;1981:21::-;;;-1:-1:-1;;;;;1981:21:1;;:::o;2207:146::-;2286:5;;-1:-1:-1;;;;;2286:5:1;2272:10;:19;2264:54;;;;;-1:-1:-1;;;2264:54:1;;;;;;;;;;;;-1:-1:-1;;;2264:54:1;;;;;;;;;;;;;;;2329:5;:16;;-1:-1:-1;;;;;;2329:16:1;-1:-1:-1;;;;;2329:16:1;;;;;;;;;;2207:146::o;2033:20::-;;;-1:-1:-1;;;;;2033:20:1;;:::o;3749:645::-;3934:4;;-1:-1:-1;;;;;3934:4:1;3920:10;:18;3912:54;;;;;-1:-1:-1;;;3912:54:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;4077:1;4062:12;:16;4058:101;;;4102:6;;;4119:4;;4095:52;;;-1:-1:-1;;;4095:52:1;;-1:-1:-1;;;;;4119:4:1;;;4095:52;;;;;;;;;;;;4102:6;;;;;4095:23;;:52;;;;;;;;;;;;;;;;;;;4102:6;4095:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4058:101:1;4305:1;4290:12;:16;4286:101;;;4330:6;;;4347:4;;4323:52;;;-1:-1:-1;;;4323:52:1;;-1:-1:-1;;;;;4347:4:1;;;4323:52;;;;;;;;;;;;4330:6;;;;;4323:23;;:52;;;;;;;;;;;;;;;;;;;4330:6;4323:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "418400",
								"executionCost": "21290",
								"totalCost": "439690"
							},
							"external": {
								"V3Swap0for1()": "infinite",
								"_newAdmin(address)": "21935",
								"admin()": "1081",
								"pool()": "1060",
								"token0()": "1038",
								"token1()": "1037",
								"transferToAdmin(address)": "infinite",
								"uniswapV3SwapCallback(int256,int256,bytes)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1834,
									"end": 4397,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2148,
									"end": 2199,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2173,
									"end": 2178,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2173,
									"end": 2191,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2191,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2173,
									"end": 2191,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2181,
									"end": 2191,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2191,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2173,
									"end": 2191,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1834,
									"end": 4397,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fc28bab020475831f26f62a6fb03f28f772fd2684cba5b7d383d6612246b35d964736f6c63430007060033",
									".code": [
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "D21220A7"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "D21220A7"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "E6F4D0AA"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "F851A440"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "FA461E33"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "DFE1681"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "16F0115B"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "48D32466"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "8CBC5CFF"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1834,
											"end": 4397,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "100000000"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1952,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1894,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2633,
											"end": 2637,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2581,
											"end": 2597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2581,
											"end": 2597,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 2600,
											"end": 2624,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2600,
											"end": 2639,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2658,
											"end": 2670,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "125B9D985B1A59081A5B9C1D5D08185B5BDD5B9D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 2650,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2760,
											"end": 2780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2807,
											"end": 2811,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2818,
											"name": "PUSH",
											"source": 1,
											"value": "3850C7BD"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2831,
											"end": 2856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2887,
											"end": 2890,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2882,
											"end": 2884,
											"name": "PUSH",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2867,
											"end": 2884,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2884,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2867,
											"end": 2890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 824,
											"end": 834,
											"name": "PUSH",
											"source": 0,
											"value": "1000276A3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2954,
											"end": 2998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2954,
											"end": 2998,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2950,
											"end": 3074,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2950,
											"end": 3074,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3035,
											"end": 3062,
											"name": "PUSH",
											"source": 1,
											"value": "1000276A4"
										},
										{
											"begin": 2950,
											"end": 3074,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2950,
											"end": 3074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3150,
											"end": 3154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3149,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 3127,
											"end": 3149,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3165,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3274,
											"end": 3291,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2515961"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "A4"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "C4"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "E4"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "128ACB08"
										},
										{
											"begin": 3374,
											"end": 3399,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 3313,
											"end": 3317,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3393,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3538,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 3530,
											"end": 3538,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3587,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 3294,
											"end": 3319,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3374,
											"end": 3663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2538,
											"end": 3671,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2434,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2444,
											"end": 2449,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2437,
											"end": 2460,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2460,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 2469,
											"end": 2473,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "STATICCALL",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2437,
											"end": 2475,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2509,
											"end": 2514,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2508,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 2486,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2361,
											"end": 2530,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1981,
											"end": 2002,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2286,
											"end": 2291,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2282,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2291,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4F6E6C79206F776E65722063616E20646F2074686973"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 2264,
											"end": 2318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2334,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2329,
											"end": 2345,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2353,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2033,
											"end": 2053,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 3749,
											"end": 4394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3934,
											"end": 3938,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3930,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 3920,
											"end": 3938,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "43616C6C6261636B206F6E6C792066726F6D20706F6F6C000000000000000000"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 3912,
											"end": 3966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4077,
											"end": 4078,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4062,
											"end": 4074,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4062,
											"end": 4078,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4159,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4058,
											"end": 4159,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4058,
											"end": 4159,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4118,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 4095,
											"end": 4118,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4108,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 4095,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4058,
											"end": 4159,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 4058,
											"end": 4159,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4305,
											"end": 4306,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4290,
											"end": 4302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4290,
											"end": 4306,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4387,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4286,
											"end": 4387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 4286,
											"end": 4387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4351,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4346,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 4323,
											"end": 4346,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4330,
											"end": 4336,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "GAS",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "CALL",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4323,
											"end": 4375,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"V3Swap0for1()": "48d32466",
							"_newAdmin(address)": "e6f4d0aa",
							"admin()": "f851a440",
							"pool()": "16f0115b",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"transferToAdmin(address)": "8cbc5cff",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"SwapExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"V3Swap0for1\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"_newAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"Token\",\"type\":\"address\"}],\"name\":\"transferToAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"slipstream-main/contracts/core/VeloBot.sol\":\"V3Bot\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"keccak256\":\"0xda8c2c0b12d2976acfd364453ba5f5bf0117ba3c91175ee9e1067d3fb26944d9\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://3f3d2d7c2723c91830c74d96292f28fc1cfe28d388cdb9c1a5ebadb4c2b96f81\",\"dweb:/ipfs/QmYU4wk8MEm33wVWR38LoncvR7b8PP1mLuGBKX3dUpYJVE\"]},\"slipstream-main/contracts/core/VeloBot.sol\":{\"keccak256\":\"0x8cd340fa806d84208a7ae698ba54bb70e6598471b73a4b459238dad77d640870\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28460327c1d254c312ae13f192841d82306cad0e15efaac0c2c60a0e57f806b6\",\"dweb:/ipfs/QmTopw58qEuUVh3KjCCM1hsAfaoQxmBhd2vuFnG2KEBXqp\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 672,
								"contract": "slipstream-main/contracts/core/VeloBot.sol:V3Bot",
								"label": "pool",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 674,
								"contract": "slipstream-main/contracts/core/VeloBot.sol:V3Bot",
								"label": "token0",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 676,
								"contract": "slipstream-main/contracts/core/VeloBot.sol:V3Bot",
								"label": "token1",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 678,
								"contract": "slipstream-main/contracts/core/VeloBot.sol:V3Bot",
								"label": "admin",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@uniswap/v3-core/contracts/libraries/TickMath.sol": {
				"ast": {
					"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
					"exportedSymbols": {
						"TickMath": [
							534
						]
					},
					"id": 535,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "78:235:0",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "336:108:0",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 7,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "449:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 4,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "449:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "484:7:0",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 5,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "485:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "497:107:0",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 12,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "609:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 9,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "609:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 11,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "644:9:0",
										"subExpression": {
											"id": 10,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 7,
											"src": "645:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "660:116:0",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 16,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "781:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 14,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "781:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 15,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "824:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "840:116:0",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 20,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 534,
									"src": "961:92:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 18,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "961:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 19,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1004:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 393,
										"nodeType": "Block",
										"src": "1447:2495:0",
										"statements": [
											{
												"assignments": [
													29
												],
												"declarations": [
													{
														"constant": false,
														"id": 29,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "1457:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 28,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1457:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 49,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1475:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 31,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1482:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1475:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 45,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "1526:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 44,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1519:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 43,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1519:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1519:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 42,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1511:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 41,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1511:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 47,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1511:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1475:57:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "1494:13:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 37,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 23,
																			"src": "1502:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 36,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1495:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 35,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "1495:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 38,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1495:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 33,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1486:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 40,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1486:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1457:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 51,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1550:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 54,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 12,
																		"src": "1569:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 53,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 52,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1550:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 57,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1580:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 50,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1542:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1542:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "1542:42:0"
											},
											{
												"assignments": [
													61
												],
												"declarations": [
													{
														"constant": false,
														"id": 61,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 393,
														"src": "1595:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 60,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1595:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 70,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 66,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 62,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "1611:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 63,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1621:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "1611:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1628:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1611:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 68,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1669:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1611:93:0",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 67,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1632:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1595:109:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 71,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 72,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1728:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "1718:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1735:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1718:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 85,
												"nodeType": "IfStatement",
												"src": "1714:83:0",
												"trueBody": {
													"expression": {
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 76,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 79,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 77,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1747:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1755:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "1747:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 80,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1746:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1794:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1746:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1738:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 84,
													"nodeType": "ExpressionStatement",
													"src": "1738:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 86,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1811:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 87,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1821:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "1811:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1828:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1811:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 100,
												"nodeType": "IfStatement",
												"src": "1807:83:0",
												"trueBody": {
													"expression": {
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 91,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1831:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 94,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 92,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1840:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 93,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1848:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "1840:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 95,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1839:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1887:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1839:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1831:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 99,
													"nodeType": "ExpressionStatement",
													"src": "1831:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 101,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1904:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1914:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "1904:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1921:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1904:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 115,
												"nodeType": "IfStatement",
												"src": "1900:83:0",
												"trueBody": {
													"expression": {
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 106,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "1924:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 107,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "1933:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 108,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1941:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "1933:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 110,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1932:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1980:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "1932:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1924:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 114,
													"nodeType": "ExpressionStatement",
													"src": "1924:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 116,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "1997:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "1997:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2015:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1997:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 130,
												"nodeType": "IfStatement",
												"src": "1993:84:0",
												"trueBody": {
													"expression": {
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 121,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2018:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 124,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 122,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2027:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2035:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "2027:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 125,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2026:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2074:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2026:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2018:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 129,
													"nodeType": "ExpressionStatement",
													"src": "2018:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 131,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2101:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "2091:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2109:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2091:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 145,
												"nodeType": "IfStatement",
												"src": "2087:84:0",
												"trueBody": {
													"expression": {
														"id": 143,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 136,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2112:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 137,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2121:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "2121:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2120:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 141,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2168:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2120:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2112:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 144,
													"nodeType": "ExpressionStatement",
													"src": "2112:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 146,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2185:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2195:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "2185:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2203:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2185:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 160,
												"nodeType": "IfStatement",
												"src": "2181:84:0",
												"trueBody": {
													"expression": {
														"id": 158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 151,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2206:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 157,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 152,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2215:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 153,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2223:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "2215:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 155,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2214:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 156,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2262:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2214:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2206:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 159,
													"nodeType": "ExpressionStatement",
													"src": "2206:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 163,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 161,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2289:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "2279:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2279:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 175,
												"nodeType": "IfStatement",
												"src": "2275:84:0",
												"trueBody": {
													"expression": {
														"id": 173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 166,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2300:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 167,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2309:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 168,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2317:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "2309:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 170,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2308:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2356:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2308:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2300:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 174,
													"nodeType": "ExpressionStatement",
													"src": "2300:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 176,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2373:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2383:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "2373:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 179,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2392:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2373:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 190,
												"nodeType": "IfStatement",
												"src": "2369:85:0",
												"trueBody": {
													"expression": {
														"id": 188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 181,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2395:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 184,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 182,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2404:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 183,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2412:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "2404:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 185,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2403:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 186,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2451:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2403:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2395:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 189,
													"nodeType": "ExpressionStatement",
													"src": "2395:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 193,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 191,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2478:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "2468:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 194,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2487:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2468:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 205,
												"nodeType": "IfStatement",
												"src": "2464:85:0",
												"trueBody": {
													"expression": {
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 196,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2490:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 197,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2499:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2507:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "2499:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 200,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2498:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2546:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2498:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2490:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 204,
													"nodeType": "ExpressionStatement",
													"src": "2490:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 206,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "2563:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 209,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2582:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2563:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 220,
												"nodeType": "IfStatement",
												"src": "2559:85:0",
												"trueBody": {
													"expression": {
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 211,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2585:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 214,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 212,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2594:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2602:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "2594:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 215,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2593:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2641:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2593:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2585:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 219,
													"nodeType": "ExpressionStatement",
													"src": "2585:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 221,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2668:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "2658:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2658:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 235,
												"nodeType": "IfStatement",
												"src": "2654:85:0",
												"trueBody": {
													"expression": {
														"id": 233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 226,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2680:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 232,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 229,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 227,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2689:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2697:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "2689:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 230,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2688:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 231,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2736:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2688:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2680:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 234,
													"nodeType": "ExpressionStatement",
													"src": "2680:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 236,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 237,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2763:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "2753:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 239,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2773:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2753:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 250,
												"nodeType": "IfStatement",
												"src": "2749:86:0",
												"trueBody": {
													"expression": {
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 241,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2776:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 242,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2785:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 243,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2793:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "2785:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2784:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2832:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2784:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2776:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 249,
													"nodeType": "ExpressionStatement",
													"src": "2776:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 253,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 251,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2859:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "2849:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2869:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2849:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 265,
												"nodeType": "IfStatement",
												"src": "2845:86:0",
												"trueBody": {
													"expression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 256,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2872:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 257,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2881:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 258,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2889:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "2881:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 260,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2880:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 261,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2928:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2880:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2872:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 264,
													"nodeType": "ExpressionStatement",
													"src": "2872:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 266,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "2945:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "2945:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2965:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2945:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 280,
												"nodeType": "IfStatement",
												"src": "2941:86:0",
												"trueBody": {
													"expression": {
														"id": 278,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 271,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2968:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 272,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "2977:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2985:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "2977:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 275,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2976:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3024:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "2976:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2968:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 279,
													"nodeType": "ExpressionStatement",
													"src": "2968:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 283,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 281,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3051:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "3041:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3041:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 295,
												"nodeType": "IfStatement",
												"src": "3037:86:0",
												"trueBody": {
													"expression": {
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 286,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3064:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 292,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 289,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 287,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3073:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3081:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "3073:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 290,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3072:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 291,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3120:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3072:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3064:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 294,
													"nodeType": "ExpressionStatement",
													"src": "3064:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 298,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 296,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3137:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3147:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "3137:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 299,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3137:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 310,
												"nodeType": "IfStatement",
												"src": "3133:86:0",
												"trueBody": {
													"expression": {
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 301,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 302,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3170:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3178:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "3170:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 305,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3169:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 306,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3216:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3169:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3161:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 309,
													"nodeType": "ExpressionStatement",
													"src": "3161:58:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 311,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "3233:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 314,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3254:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 325,
												"nodeType": "IfStatement",
												"src": "3229:85:0",
												"trueBody": {
													"expression": {
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 316,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3257:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 319,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 317,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3266:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 318,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3274:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "3266:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 320,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3265:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3311:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3265:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3257:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 324,
													"nodeType": "ExpressionStatement",
													"src": "3257:57:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 326,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3338:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "3328:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 329,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3349:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3328:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 340,
												"nodeType": "IfStatement",
												"src": "3324:83:0",
												"trueBody": {
													"expression": {
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 331,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3352:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 337,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 332,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3361:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 333,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3369:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "3361:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 335,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3360:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 336,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3404:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3360:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3352:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 339,
													"nodeType": "ExpressionStatement",
													"src": "3352:55:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 341,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "3421:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3431:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "3421:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 344,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3442:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3421:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 355,
												"nodeType": "IfStatement",
												"src": "3417:78:0",
												"trueBody": {
													"expression": {
														"id": 353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 346,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3445:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 352,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 347,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 61,
																			"src": "3454:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 348,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "3454:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 350,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3453:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3492:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "3453:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3445:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 354,
													"nodeType": "ExpressionStatement",
													"src": "3445:50:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 356,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "3510:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 357,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3517:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3510:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 369,
												"nodeType": "IfStatement",
												"src": "3506:47:0",
												"trueBody": {
													"expression": {
														"id": 367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 359,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "3520:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3533:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 361,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "3533:7:0",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 360,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "3528:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3528:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 364,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "3528:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 365,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 61,
																"src": "3548:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3528:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3520:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 368,
													"nodeType": "ExpressionStatement",
													"src": "3520:33:0"
												}
											},
											{
												"expression": {
													"id": 391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 370,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "3863:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 375,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 373,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 61,
																				"src": "3887:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3896:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "3887:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 376,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3886:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 384,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 377,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 61,
																						"src": "3903:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 380,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 378,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3912:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 379,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "3917:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "3912:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 381,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "3911:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "3903:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 383,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3924:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3903:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 386,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3932:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "3903:30:0",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 385,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3928:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 388,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3902:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "3886:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 371,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "3878:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 390,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3878:57:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "3863:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 392,
												"nodeType": "ExpressionStatement",
												"src": "3863:72:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "1060:297:0",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 394,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1390:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 22,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1390:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1389:12:0"
									},
									"returnParameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 394,
												"src": "1425:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 25,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "1425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1424:22:0"
									},
									"scope": 534,
									"src": "1362:2580:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "4446:4196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 409,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 403,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "4563:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 404,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "4579:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4563:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 406,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "4597:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 407,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "4612:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "4597:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "4563:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4628:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 402,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4555:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "ExpressionStatement",
												"src": "4555:77:0"
											},
											{
												"assignments": [
													414
												],
												"declarations": [
													{
														"constant": false,
														"id": 414,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "4642:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 413,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4642:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 421,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 417,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "4666:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 415,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4658:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 418,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4658:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4683:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "4658:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4642:43:0"
											},
											{
												"assignments": [
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "4696:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 422,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4696:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 425,
												"initialValue": {
													"id": 424,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 414,
													"src": "4708:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4696:17:0"
											},
											{
												"assignments": [
													427
												],
												"declarations": [
													{
														"constant": false,
														"id": 427,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "4723:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 426,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4723:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"hexValue": "30",
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4737:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4723:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4758:139:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4772:58:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4785:1:0",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4791:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4794:34:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4788:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4788:41:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4781:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4781:49:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4776:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4843:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4853:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4858:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4850:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4843:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4873:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4882:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "4885:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "4873:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "4843:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "4853:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "4791:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "4873:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "4885:1:0",
														"valueSize": 1
													}
												],
												"id": 430,
												"nodeType": "InlineAssembly",
												"src": "4749:148:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "4915:123:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4929:42:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:1:0",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "4948:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4951:18:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4945:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4945:25:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "4938:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4938:33:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "4933:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4984:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "4994:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "4999:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4991:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "4991:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "4984:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5014:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5023:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5026:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5019:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5019:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5014:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "4984:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "4994:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "4948:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5014:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5026:1:0",
														"valueSize": 1
													}
												],
												"id": 431,
												"nodeType": "InlineAssembly",
												"src": "4906:132:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5056:115:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5070:34:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5083:1:0",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5089:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5092:10:0",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5086:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5086:17:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5079:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5079:25:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5074:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5117:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5127:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5132:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5124:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5124:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5117:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5147:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5156:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5159:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5152:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5152:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5147:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5117:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5127:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5089:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5147:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5159:1:0",
														"valueSize": 1
													}
												],
												"id": 432,
												"nodeType": "InlineAssembly",
												"src": "5047:124:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5189:111:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5203:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5216:1:0",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5222:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5225:6:0",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5219:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5219:13:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5212:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5212:21:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5207:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5246:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5256:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5261:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5253:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5253:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5246:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5276:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5285:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5288:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5281:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5281:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5276:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5246:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5256:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5222:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5276:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5288:1:0",
														"valueSize": 1
													}
												],
												"id": 433,
												"nodeType": "InlineAssembly",
												"src": "5180:120:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5318:109:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5332:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5345:1:0",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5351:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5354:4:0",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5348:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5348:11:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5341:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5341:19:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5336:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5373:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5383:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5388:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5380:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5380:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5373:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5403:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5412:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5415:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5408:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5408:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5403:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5373:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5383:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5351:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5403:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5415:1:0",
														"valueSize": 1
													}
												],
												"id": 434,
												"nodeType": "InlineAssembly",
												"src": "5309:118:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5445:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5459:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5472:1:0",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5478:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5481:3:0",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5475:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5475:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5468:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5468:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5463:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5499:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5509:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5514:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5506:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5506:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5499:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5529:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5538:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5541:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5534:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5534:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5529:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5499:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5509:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5478:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5529:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5541:1:0",
														"valueSize": 1
													}
												],
												"id": 435,
												"nodeType": "InlineAssembly",
												"src": "5436:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5571:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5585:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5598:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5604:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5607:3:0",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "5601:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5601:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "5594:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5594:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5589:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5625:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5635:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5640:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5632:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5632:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5625:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5655:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5664:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5667:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5660:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5660:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5655:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5625:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5635:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5604:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5655:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5667:1:0",
														"valueSize": 1
													}
												],
												"id": 436,
												"nodeType": "InlineAssembly",
												"src": "5562:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5697:73:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5711:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5723:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5726:3:0",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5720:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5720:10:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5715:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5743:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "5753:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "5758:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "5750:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5750:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "5743:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5743:3:0",
														"valueSize": 1
													},
													{
														"declaration": 427,
														"isOffset": false,
														"isSlot": false,
														"src": "5753:3:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5723:1:0",
														"valueSize": 1
													}
												],
												"id": 437,
												"nodeType": "InlineAssembly",
												"src": "5688:82:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "5784:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5791:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "5784:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 457,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 450,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5835:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 451,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "5839:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 452,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5849:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 453,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "5855:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5849:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 455,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5848:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5839:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5835:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 458,
													"nodeType": "ExpressionStatement",
													"src": "5835:24:0"
												},
												"id": 459,
												"nodeType": "IfStatement",
												"src": "5780:79:0",
												"trueBody": {
													"expression": {
														"id": 448,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 441,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "5796:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 442,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 414,
																"src": "5800:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 445,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 443,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "5810:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 444,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5816:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "5810:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 446,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5809:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5800:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5796:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 449,
													"nodeType": "ExpressionStatement",
													"src": "5796:24:0"
												}
											},
											{
												"assignments": [
													461
												],
												"declarations": [
													{
														"constant": false,
														"id": 461,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "5870:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 460,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "5870:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 471,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 464,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 427,
																			"src": "5893:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5886:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 462,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5886:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5886:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 466,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5900:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "5886:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 468,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5885:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 469,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5908:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "5885:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5870:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5930:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5944:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5953:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5962:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "5965:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5958:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5949:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5949:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "5944:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5981:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5994:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "5999:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "5990:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5990:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "5985:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6014:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6026:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6037:2:0",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6041:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6033:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6033:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6023:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6023:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6014:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6057:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6066:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6069:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6062:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6062:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6057:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6014:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6026:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5944:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5962:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5965:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "5999:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6057:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6069:1:0",
														"valueSize": 1
													}
												],
												"id": 472,
												"nodeType": "InlineAssembly",
												"src": "5921:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6099:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6113:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6122:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6131:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6134:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6127:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6127:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6118:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6118:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6113:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6150:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6163:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6168:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6159:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6159:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6154:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6183:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6206:2:0",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6210:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6202:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6202:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6192:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6192:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6183:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6226:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6235:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6238:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6231:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6231:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6226:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6183:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6195:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6113:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6131:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6134:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6168:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6226:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6238:1:0",
														"valueSize": 1
													}
												],
												"id": 473,
												"nodeType": "InlineAssembly",
												"src": "6090:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6268:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6282:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6291:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6300:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6303:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6296:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6296:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6287:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6282:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6319:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6332:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6328:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6323:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6352:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6364:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6375:2:0",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6379:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6371:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6361:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6361:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6352:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6395:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6404:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6407:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6400:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6400:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6395:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6352:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6364:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6282:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6300:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6303:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6337:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6395:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6407:1:0",
														"valueSize": 1
													}
												],
												"id": 474,
												"nodeType": "InlineAssembly",
												"src": "6259:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6437:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6451:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6460:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6469:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6472:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6465:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6465:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6456:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6456:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6451:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6488:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6501:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6506:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6497:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6497:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6492:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6521:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6533:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6544:2:0",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6548:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6540:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6540:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6530:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6530:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6521:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6564:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6573:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6576:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6569:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6564:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6521:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6533:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6451:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6469:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6472:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6506:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6564:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6576:1:0",
														"valueSize": 1
													}
												],
												"id": 475,
												"nodeType": "InlineAssembly",
												"src": "6428:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6606:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6620:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6629:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6638:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6641:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6634:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6634:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6620:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6657:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6670:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6675:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6666:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6666:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6661:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6690:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6702:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6713:2:0",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6717:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6709:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6709:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6699:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6699:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6690:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6733:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6742:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6745:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6738:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6738:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6733:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6690:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6702:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6620:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6638:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6641:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6675:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6733:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6745:1:0",
														"valueSize": 1
													}
												],
												"id": 476,
												"nodeType": "InlineAssembly",
												"src": "6597:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6775:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6789:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6798:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6807:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6810:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6803:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6803:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6794:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6794:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6789:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6826:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6844:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6835:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6835:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6830:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6859:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "6871:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6882:2:0",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "6886:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "6878:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6878:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6868:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6868:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "6859:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6902:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "6911:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "6914:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6907:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6907:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6902:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6859:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "6871:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6789:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6807:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6810:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6844:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6902:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6914:1:0",
														"valueSize": 1
													}
												],
												"id": 477,
												"nodeType": "InlineAssembly",
												"src": "6766:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "6944:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6967:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6976:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "6979:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6972:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6972:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "6963:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "6963:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "6958:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6995:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7008:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7013:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7004:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "6999:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7028:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7040:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7051:2:0",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7055:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7047:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7047:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7037:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7028:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7071:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7080:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7083:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7076:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7076:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7071:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7028:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7040:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6958:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6976:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "6979:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7013:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7071:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7083:1:0",
														"valueSize": 1
													}
												],
												"id": 478,
												"nodeType": "InlineAssembly",
												"src": "6935:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7113:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7127:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7136:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7145:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7148:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7141:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7141:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7132:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7132:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7127:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7164:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7177:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7182:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7173:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7173:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7168:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7197:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7209:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7220:2:0",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7224:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7216:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7206:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7206:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7197:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7240:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7252:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7245:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7245:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7240:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7197:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7209:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7127:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7145:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7148:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7182:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7240:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7252:1:0",
														"valueSize": 1
													}
												],
												"id": 479,
												"nodeType": "InlineAssembly",
												"src": "7104:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7282:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7296:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7305:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7314:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7317:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7310:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7310:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7301:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7301:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7296:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7333:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7346:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7351:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7342:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7342:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7337:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7366:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7378:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7389:2:0",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7393:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7385:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7385:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7375:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7375:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7366:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7409:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7418:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7421:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7414:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7414:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7409:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7366:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7378:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7296:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7314:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7317:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7351:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7409:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7421:1:0",
														"valueSize": 1
													}
												],
												"id": 480,
												"nodeType": "InlineAssembly",
												"src": "7273:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7451:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7465:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7474:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7483:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7486:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7479:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7479:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7470:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7470:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7465:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7502:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7515:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7520:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7511:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7511:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7506:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7535:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7547:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7558:2:0",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7562:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7554:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7554:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7544:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7544:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7535:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7578:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7587:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7590:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7583:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7583:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7578:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7535:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7547:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7465:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7483:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7486:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7520:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7578:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7590:1:0",
														"valueSize": 1
													}
												],
												"id": 481,
												"nodeType": "InlineAssembly",
												"src": "7442:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7620:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7634:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7643:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7652:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7655:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7648:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7648:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7639:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7639:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7634:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7671:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7684:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7689:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7680:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7675:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7704:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7716:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7727:2:0",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7731:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7723:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7723:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7713:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7713:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7704:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7747:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7756:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7759:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7752:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7752:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7747:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7704:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7716:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7634:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7652:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7655:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7689:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7747:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7759:1:0",
														"valueSize": 1
													}
												],
												"id": 482,
												"nodeType": "InlineAssembly",
												"src": "7611:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7789:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7803:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7812:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7821:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7824:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7817:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7817:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7808:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7808:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7803:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7840:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7853:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7858:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7849:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7849:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "7844:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7873:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "7885:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7896:2:0",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "7900:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7882:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7882:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "7873:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7916:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "7925:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "7928:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7921:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7921:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7916:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7873:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "7885:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7803:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7821:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7824:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7858:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7916:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7928:1:0",
														"valueSize": 1
													}
												],
												"id": 483,
												"nodeType": "InlineAssembly",
												"src": "7780:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "7958:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7972:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7981:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7990:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "7993:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "7986:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7986:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "7977:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "7977:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "7972:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8009:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8022:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8027:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8018:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8018:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8013:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8042:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8054:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8065:2:0",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8069:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8061:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8061:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8051:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8051:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8042:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8085:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "8094:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8097:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8090:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8090:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8085:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "8042:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "8054:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7972:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7990:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "7993:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8027:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8085:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8097:1:0",
														"valueSize": 1
													}
												],
												"id": 484,
												"nodeType": "InlineAssembly",
												"src": "7949:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "8127:124:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8141:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8150:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8159:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "8162:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "8155:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8155:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8146:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8146:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "8141:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8191:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "8196:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8187:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8187:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "8182:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8211:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "8223:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8234:2:0",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "8238:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8230:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8230:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8220:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "8220:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "8211:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "8211:5:0",
														"valueSize": 1
													},
													{
														"declaration": 461,
														"isOffset": false,
														"isSlot": false,
														"src": "8223:5:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8141:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8159:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8162:1:0",
														"valueSize": 1
													},
													{
														"declaration": 423,
														"isOffset": false,
														"isSlot": false,
														"src": "8196:1:0",
														"valueSize": 1
													}
												],
												"id": 485,
												"nodeType": "InlineAssembly",
												"src": "8118:133:0"
											},
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "8261:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 486,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "8261:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 491,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 488,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "8284:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 489,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8292:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "8284:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8261:55:0"
											},
											{
												"assignments": [
													493
												],
												"declarations": [
													{
														"constant": false,
														"id": 493,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "8345:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 492,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8345:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 496,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "8368:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 497,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8384:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "8368:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 499,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8367:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8426:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8367:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8361:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 494,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8361:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8361:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8345:85:0"
											},
											{
												"assignments": [
													505
												],
												"declarations": [
													{
														"constant": false,
														"id": 505,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 532,
														"src": "8440:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 504,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8440:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 515,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 508,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "8462:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 509,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8478:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "8462:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 511,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8461:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8522:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "8461:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8455:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 506,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "8455:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8455:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8440:86:0"
											},
											{
												"expression": {
													"id": 530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 516,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 400,
														"src": "8537:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 519,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 517,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "8544:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 518,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "8555:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "8544:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 525,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 522,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 505,
																			"src": "8593:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 521,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 394,
																		"src": "8574:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 523,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8574:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 524,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 397,
																	"src": "8604:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "8574:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 527,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "8628:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "8574:61:0",
															"trueExpression": {
																"id": 526,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 505,
																"src": "8619:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "8544:91:0",
														"trueExpression": {
															"id": 520,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 493,
															"src": "8564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "8537:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 531,
												"nodeType": "ExpressionStatement",
												"src": "8537:98:0"
											}
										]
									},
									"documentation": {
										"id": 395,
										"nodeType": "StructuredDocumentation",
										"src": "3948:408:0",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4389:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 396,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "4389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4388:22:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "4434:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 399,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "4434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4433:12:0"
									},
									"scope": 534,
									"src": "4361:4281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 535,
							"src": "313:8331:0"
						}
					],
					"src": "45:8600:0"
				},
				"id": 0
			},
			"slipstream-main/contracts/core/VeloBot.sol": {
				"ast": {
					"absolutePath": "slipstream-main/contracts/core/VeloBot.sol",
					"exportedSymbols": {
						"ICLPoolActions": [
							555
						],
						"ICLPoolConstants": [
							612
						],
						"ICLPoolState": [
							571
						],
						"ICLSwapCallback": [
							622
						],
						"IERC20": [
							668
						],
						"TickMath": [
							534
						],
						"V3Bot": [
							881
						]
					},
					"id": 882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 536,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"absolutePath": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"file": "@uniswap/v3-core/contracts/libraries/TickMath.sol",
							"id": 537,
							"nodeType": "ImportDirective",
							"scope": 882,
							"sourceUnit": 535,
							"src": "60:59:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 555,
							"linearizedBaseContracts": [
								555
							],
							"name": "ICLPoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "128acb08",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "199:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "227:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 540,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "227:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "253:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 542,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "253:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "286:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 544,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "286:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "322:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 546,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "322:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "188:160:1"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "367:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 549,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "383:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 551,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "383:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:32:1"
									},
									"scope": 555,
									"src": "175:224:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "143:259:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 571,
							"linearizedBaseContracts": [
								571
							],
							"name": "ICLPoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3850c7bd",
									"id": 570,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "450:2:1"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "508:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 557,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "508:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "543:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 559,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "543:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "568:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 561,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "568:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "606:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 563,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "606:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "650:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 565,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "650:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "698:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 567,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "698:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "493:229:1"
									},
									"scope": 571,
									"src": "436:287:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "406:320:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "ICLPoolConstants",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "c45a0155",
									"id": 576,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "780:2:1"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "806:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "806:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "805:9:1"
									},
									"scope": 612,
									"src": "764:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "836:2:1"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "862:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:1"
									},
									"scope": 612,
									"src": "821:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 586,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:1"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "918:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "917:9:1"
									},
									"scope": 612,
									"src": "877:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a6f19c84",
									"id": 591,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "gauge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 587,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:1"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "973:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:9:1"
									},
									"scope": 612,
									"src": "933:49:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "47ccca02",
									"id": 596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nft",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1000:2:1"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "1026:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1026:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1025:9:1"
									},
									"scope": 612,
									"src": "988:47:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3bf0c9fb",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factoryRegistry",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1065:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "1091:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1090:9:1"
									},
									"scope": 612,
									"src": "1041:59:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d0c93a7c",
									"id": 606,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:1"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1152:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 603,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1152:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1151:7:1"
									},
									"scope": 612,
									"src": "1106:53:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70cf754a",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1195:2:1"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "1221:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 608,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:9:1"
									},
									"scope": 612,
									"src": "1167:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "730:503:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 622,
							"linearizedBaseContracts": [
								622
							],
							"name": "ICLSwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fa461e33",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1301:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 613,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1301:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1322:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 615,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1322:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 621,
												"src": "1343:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 617,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1343:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1300:63:1"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1372:0:1"
									},
									"scope": 622,
									"src": "1270:103:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "1237:139:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 668,
							"linearizedBaseContracts": [
								668
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "70a08231",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 625,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1423:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:17:1"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "1463:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1463:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1462:9:1"
									},
									"scope": 668,
									"src": "1404:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1496:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1496:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1515:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1515:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:35:1"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "1549:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 635,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1549:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1548:6:1"
									},
									"scope": 668,
									"src": "1478:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1580:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1595:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 641,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1595:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:32:1"
									},
									"returnParameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 647,
												"src": "1635:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1635:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1634:9:1"
									},
									"scope": 668,
									"src": "1561:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1667:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1684:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1666:33:1"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "1718:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 653,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1718:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1717:6:1"
									},
									"scope": 668,
									"src": "1650:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 667,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1752:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1768:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1787:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1787:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:51:1"
									},
									"returnParameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "1821:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 664,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1821:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:6:1"
									},
									"scope": 668,
									"src": "1730:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "1380:450:1"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 669,
										"name": "ICLSwapCallback",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 622,
										"src": "1852:15:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ICLSwapCallback_$622",
											"typeString": "contract ICLSwapCallback"
										}
									},
									"id": 670,
									"nodeType": "InheritanceSpecifier",
									"src": "1852:15:1"
								}
							],
							"contractDependencies": [
								622
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 881,
							"linearizedBaseContracts": [
								881,
								622
							],
							"name": "V3Bot",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "16f0115b",
									"id": 672,
									"mutability": "mutable",
									"name": "pool",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1875:19:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 671,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1875:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0dfe1681",
									"id": 674,
									"mutability": "mutable",
									"name": "token0",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1931:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 673,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1931:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d21220a7",
									"id": 676,
									"mutability": "mutable",
									"name": "token1",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "1981:21:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 675,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1981:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f851a440",
									"id": 678,
									"mutability": "mutable",
									"name": "admin",
									"nodeType": "VariableDeclaration",
									"scope": 881,
									"src": "2033:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 677,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2033:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 686,
									"name": "SwapExecuted",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 680,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2081:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2081:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2103:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 684,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 686,
												"src": "2121:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2121:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2080:59:1"
									},
									"src": "2062:78:1"
								},
								{
									"body": {
										"id": 694,
										"nodeType": "Block",
										"src": "2162:37:1",
										"statements": [
											{
												"expression": {
													"id": 692,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 689,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2173:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 690,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2181:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 691,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2181:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "2173:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 693,
												"nodeType": "ExpressionStatement",
												"src": "2173:18:1"
											}
										]
									},
									"id": 695,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2159:2:1"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2162:0:1"
									},
									"scope": 881,
									"src": "2148:51:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 712,
										"nodeType": "Block",
										"src": "2253:100:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 704,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 701,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2272:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 702,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2272:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 703,
																"name": "admin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 678,
																"src": "2286:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2272:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e20646f2074686973",
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2293:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa",
																"typeString": "literal_string \"Only owner can do this\""
															},
															"value": "Only owner can do this"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fd24def08b0888543800c4127fd6d1aa58919ac12b49d8f20efd315c642cdfa",
																"typeString": "literal_string \"Only owner can do this\""
															}
														],
														"id": 700,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2264:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2264:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 707,
												"nodeType": "ExpressionStatement",
												"src": "2264:54:1"
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 708,
														"name": "admin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "2329:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "2337:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2329:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "2329:16:1"
											}
										]
									},
									"functionSelector": "e6f4d0aa",
									"id": 713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_newAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "newAdmin",
												"nodeType": "VariableDeclaration",
												"scope": 713,
												"src": "2226:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2226:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2225:18:1"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2253:0:1"
									},
									"scope": 881,
									"src": "2207:146:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "2410:120:1",
										"statements": [
											{
												"assignments": [
													719
												],
												"declarations": [
													{
														"constant": false,
														"id": 719,
														"mutability": "mutable",
														"name": "value",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "2421:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 718,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2421:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 729,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 726,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2469:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2461:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 724,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2461:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2461:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 721,
																	"name": "Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "2444:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 720,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2437:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$668_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2437:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$668",
																"typeString": "contract IERC20"
															}
														},
														"id": 723,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 629,
														"src": "2437:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2437:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2421:54:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 734,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 678,
															"src": "2509:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 735,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "2516:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 731,
																	"name": "Token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 715,
																	"src": "2493:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 730,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2486:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$668_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2486:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$668",
																"typeString": "contract IERC20"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 638,
														"src": "2486:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2486:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 737,
												"nodeType": "ExpressionStatement",
												"src": "2486:36:1"
											}
										]
									},
									"functionSelector": "8cbc5cff",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferToAdmin",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "Token",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "2386:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 714,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2386:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2385:15:1"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2410:0:1"
									},
									"scope": 881,
									"src": "2361:169:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "2570:1101:1",
										"statements": [
											{
												"assignments": [
													743
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "amountIn",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "2581:16:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 742,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2581:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 750,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2633:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2625:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 748,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2625:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2625:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "2607:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 744,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "2600:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$668_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2600:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$668",
																"typeString": "contract IERC20"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 629,
														"src": "2600:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2600:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2581:58:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 755,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 743,
																"src": "2658:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2669:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2658:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420696e70757420616d6f756e74",
															"id": 758,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2672:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf",
																"typeString": "literal_string \"Invalid input amount\""
															},
															"value": "Invalid input amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_71128eeb4fd76da6a8355c9d10e3d97be1d2b0195b0030a1450235b9a3ac80cf",
																"typeString": "literal_string \"Invalid input amount\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2650:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2650:45:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 760,
												"nodeType": "ExpressionStatement",
												"src": "2650:45:1"
											},
											{
												"assignments": [
													762,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 762,
														"mutability": "mutable",
														"name": "sqrtPriceX96",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "2760:20:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 761,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2760:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 768,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 764,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "2807:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 763,
																"name": "ICLPoolState",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 571,
																"src": "2794:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolState_$571_$",
																	"typeString": "type(contract ICLPoolState)"
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:18:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolState_$571",
																"typeString": "contract ICLPoolState"
															}
														},
														"id": 766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 570,
														"src": "2794:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,bool)"
														}
													},
													"id": 767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2794:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2759:61:1"
											},
											{
												"assignments": [
													770
												],
												"declarations": [
													{
														"constant": false,
														"id": 770,
														"mutability": "mutable",
														"name": "sqrtPriceLimitX96",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "2831:25:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 769,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2831:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 779,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 773,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 762,
																	"src": "2867:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "3939",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2882:2:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_99_by_1",
																		"typeString": "int_const 99"
																	},
																	"value": "99"
																},
																"src": "2867:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2887:3:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "2867:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2859:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 771,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "2859:7:1",
															"typeDescriptions": {}
														}
													},
													"id": 778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2859:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2831:60:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 780,
														"name": "sqrtPriceLimitX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "2954:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 781,
															"name": "TickMath",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 534,
															"src": "2975:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TickMath_$534_$",
																"typeString": "type(library TickMath)"
															}
														},
														"id": 782,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "MIN_SQRT_RATIO",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "2975:23:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "2954:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 792,
												"nodeType": "IfStatement",
												"src": "2950:124:1",
												"trueBody": {
													"id": 791,
													"nodeType": "Block",
													"src": "3000:74:1",
													"statements": [
														{
															"expression": {
																"id": 789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 784,
																	"name": "sqrtPriceLimitX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 770,
																	"src": "3015:17:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"id": 788,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 785,
																			"name": "TickMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 534,
																			"src": "3035:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_TickMath_$534_$",
																				"typeString": "type(library TickMath)"
																			}
																		},
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "MIN_SQRT_RATIO",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "3035:23:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3061:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "3035:27:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "3015:47:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 790,
															"nodeType": "ExpressionStatement",
															"src": "3015:47:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 797,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "3150:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 798,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "3156:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 794,
																	"name": "token0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "3134:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 793,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 668,
																"src": "3127:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$668_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3127:14:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$668",
																"typeString": "contract IERC20"
															}
														},
														"id": 796,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 656,
														"src": "3127:22:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 799,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3127:38:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "ExpressionStatement",
												"src": "3127:38:1"
											},
											{
												"assignments": [
													802
												],
												"declarations": [
													{
														"constant": false,
														"id": 802,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 828,
														"src": "3274:17:1",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 801,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3274:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 810,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 807,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3313:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																],
																"id": 806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3305:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 805,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3305:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 808,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3305:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 803,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3294:3:1",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "encode",
														"nodeType": "MemberAccess",
														"src": "3294:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3294:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3274:45:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 817,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3422:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3Bot_$881",
																		"typeString": "contract V3Bot"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3414:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3414:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3414:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 819,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3459:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"arguments": [
																{
																	"id": 822,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 743,
																	"src": "3530:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 821,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3523:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int256_$",
																	"typeString": "type(int256)"
																},
																"typeName": {
																	"id": 820,
																	"name": "int256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3523:6:1",
																	"typeDescriptions": {}
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3523:16:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"id": 824,
															"name": "sqrtPriceLimitX96",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 770,
															"src": "3570:17:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 825,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "3617:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 812,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 672,
																	"src": "3389:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 811,
																"name": "ICLPoolActions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 555,
																"src": "3374:14:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ICLPoolActions_$555_$",
																	"typeString": "type(contract ICLPoolActions)"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3374:20:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ICLPoolActions_$555",
																"typeString": "contract ICLPoolActions"
															}
														},
														"id": 814,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "3374:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3374:289:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 827,
												"nodeType": "ExpressionStatement",
												"src": "3374:289:1"
											}
										]
									},
									"functionSelector": "48d32466",
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "V3Swap0for1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2558:2:1"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2570:0:1"
									},
									"scope": 881,
									"src": "2538:1133:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										621
									],
									"body": {
										"id": 879,
										"nodeType": "Block",
										"src": "3901:493:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 840,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3920:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3920:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 842,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 672,
																"src": "3934:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3920:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616c6c6261636b206f6e6c792066726f6d20706f6f6c",
															"id": 844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3940:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bff4c104f39e47a163d0cb9a612fb38cc6d016a74062770b58bcdc30c5de72ee",
																"typeString": "literal_string \"Callback only from pool\""
															},
															"value": "Callback only from pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bff4c104f39e47a163d0cb9a612fb38cc6d016a74062770b58bcdc30c5de72ee",
																"typeString": "literal_string \"Callback only from pool\""
															}
														],
														"id": 839,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3912:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3912:54:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 846,
												"nodeType": "ExpressionStatement",
												"src": "3912:54:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 847,
														"name": "amount0Delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 831,
														"src": "4062:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4077:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4062:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 862,
												"nodeType": "IfStatement",
												"src": "4058:101:1",
												"trueBody": {
													"id": 861,
													"nodeType": "Block",
													"src": "4080:79:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 854,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4119:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 857,
																				"name": "amount0Delta",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 831,
																				"src": "4133:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4125:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 855,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4125:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 858,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4125:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 851,
																				"name": "token0",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 674,
																				"src": "4102:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 850,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "4095:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$668_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 852,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4095:14:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$668",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 638,
																	"src": "4095:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4095:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 860,
															"nodeType": "ExpressionStatement",
															"src": "4095:52:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 863,
														"name": "amount1Delta",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 833,
														"src": "4290:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4305:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4290:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 878,
												"nodeType": "IfStatement",
												"src": "4286:101:1",
												"trueBody": {
													"id": 877,
													"nodeType": "Block",
													"src": "4308:79:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 870,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4347:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 873,
																				"name": "amount1Delta",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 833,
																				"src": "4361:12:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			],
																			"id": 872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4353:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 871,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "4353:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4353:21:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 867,
																				"name": "token1",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 676,
																				"src": "4330:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 866,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 668,
																			"src": "4323:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$668_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4323:14:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$668",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 638,
																	"src": "4323:23:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 875,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4323:52:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 876,
															"nodeType": "ExpressionStatement",
															"src": "4323:52:1"
														}
													]
												}
											}
										]
									},
									"functionSelector": "fa461e33",
									"id": 880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 837,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3892:8:1"
									},
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3790:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 830,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3790:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3820:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 832,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3820:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "3850:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 834,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3850:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3779:103:1"
									},
									"returnParameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3901:0:1"
									},
									"scope": 881,
									"src": "3749:645:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 882,
							"src": "1834:2563:1"
						}
					],
					"src": "33:4364:1"
				},
				"id": 1
			}
		}
	}
}