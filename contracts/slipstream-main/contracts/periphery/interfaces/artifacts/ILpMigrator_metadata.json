{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "sender",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "fromTokenId",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "toTokenId",
						"type": "uint256"
					}
				],
				"name": "MigratedSlipstreamToSliptream",
				"type": "event"
			},
			{
				"inputs": [
					{
						"components": [
							{
								"internalType": "address",
								"name": "nft",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount0Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount0Extra",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Extra",
								"type": "uint256"
							}
						],
						"internalType": "struct ILpMigrator.FromParams",
						"name": "fromParams",
						"type": "tuple"
					},
					{
						"components": [
							{
								"internalType": "address",
								"name": "nft",
								"type": "address"
							},
							{
								"internalType": "int24",
								"name": "tickSpacing",
								"type": "int24"
							},
							{
								"internalType": "int24",
								"name": "tickLower",
								"type": "int24"
							},
							{
								"internalType": "int24",
								"name": "tickUpper",
								"type": "int24"
							},
							{
								"internalType": "uint256",
								"name": "amount0Min",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "amount1Min",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "recipient",
								"type": "address"
							},
							{
								"internalType": "uint256",
								"name": "deadline",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "pool",
								"type": "address"
							}
						],
						"internalType": "struct ILpMigrator.ToParams",
						"name": "toParams",
						"type": "tuple"
					}
				],
				"name": "migrateSlipstreamToSlipstream",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint128",
						"name": "liquidity",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "amount0",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "amount1",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"migrateSlipstreamToSlipstream((address,uint256,uint256,uint256,uint256,uint256),(address,int24,int24,int24,uint256,uint256,address,uint256,address))": {
					"details": "This also burns the positionSupply ToParams.pool == address(0) to migrate a pool at the same price.",
					"params": {
						"fromParams": "Parameters for the position to burn (see notes for struct)",
						"toParams": "Parameters for the position to mint (see notes for struct)"
					},
					"returns": {
						"amount0": "The amount of token0 deposited",
						"amount1": "The amount of token1 deposited",
						"liquidity": "The amount of liquidity in the position",
						"tokenId": "The id of the new position"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"migrateSlipstreamToSlipstream((address,uint256,uint256,uint256,uint256,uint256),(address,int24,int24,int24,uint256,uint256,address,uint256,address))": {
					"notice": "Migrates a position from one slipstream pool to anotherRemoves all tokens from the position, and collects any outstanding fees"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"slipstream-main/contracts/periphery/interfaces/ILpMigrator.sol": "ILpMigrator"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"slipstream-main/contracts/periphery/interfaces/ILpMigrator.sol": {
			"keccak256": "0xe8247e168b8e464bb10b60fa56dbb2280b9a6cadb4d3285bce066d03fb8ec1da",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://77e1e252adff065de3d449dc53f689087aceda80474d3218297e3b06fbe477db",
				"dweb:/ipfs/QmPuTmfVBZFgFz9FvbGPDeQPrnbNL3BhsuY5xQ1Gzczb3b"
			]
		}
	},
	"version": 1
}