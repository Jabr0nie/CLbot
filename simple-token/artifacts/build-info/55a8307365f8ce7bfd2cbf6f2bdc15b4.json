{
	"id": "55a8307365f8ce7bfd2cbf6f2bdc15b4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.29",
	"solcLongVersion": "0.8.29+commit.ab55807c",
	"input": {
		"language": "Solidity",
		"sources": {
			"simple-token/simple-token.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.10;\n\nimport \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\n/**\n * @title Simple Token\n * @author Breakthrough Labs Inc.\n * @notice Token, ERC20, Fixed Supply\n * @custom:version 1.0.7\n * @custom:address 4\n * @custom:default-precision 18\n * @custom:simple-description Simple Token. A fixed supply is minted on deployment, and\n * new tokens can never be created.\n * @dev ERC20 token with the following features:\n *\n *  - Premint your total supply.\n *  - No minting function. This allows users to comfortably know the future supply of the token.\n *\n */\n\ncontract FixedToken is ERC20 {\n    /**\n     * @param name Token Name\n     * @param symbol Token Symbol\n     * @param totalSupply Token Supply\n     */\n    constructor(\n        string memory name,\n        string memory symbol,\n        uint256 totalSupply\n    ) payable ERC20(name, symbol) {\n        _mint(msg.sender, totalSupply);\n    }\n}\n\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/simple-token?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  mstore(0x40, 0x80)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  0x03\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_6\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3325:3330  name_ */\n  dup4\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  0x04\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_8\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3350:3357  symbol_ */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  jump(tag_16)\n    /* \"#utility.yul\":14:141   */\ntag_10:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_11:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_19\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  0x00\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_19:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_21\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_23\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_23\n  tag_10\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_24:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1431   */\ntag_3:\n    /* \"#utility.yul\":973:979   */\n  0x00\n    /* \"#utility.yul\":981:987   */\n  0x00\n    /* \"#utility.yul\":1034:1036   */\n  0x40\n    /* \"#utility.yul\":1022:1031   */\n  dup4\n    /* \"#utility.yul\":1013:1020   */\n  dup6\n    /* \"#utility.yul\":1009:1032   */\n  sub\n    /* \"#utility.yul\":1005:1037   */\n  slt\n    /* \"#utility.yul\":1002:1054   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  0x00\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":1002:1054   */\ntag_26:\n    /* \"#utility.yul\":1077:1093   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1105:1135   */\n  dup2\n  gt\n    /* \"#utility.yul\":1102:1152   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":1148:1149   */\n  0x00\n    /* \"#utility.yul\":1145:1146   */\n  0x00\n    /* \"#utility.yul\":1138:1150   */\n  revert\n    /* \"#utility.yul\":1102:1152   */\ntag_27:\n    /* \"#utility.yul\":1171:1232   */\n  tag_28\n    /* \"#utility.yul\":1224:1231   */\n  dup6\n    /* \"#utility.yul\":1215:1221   */\n  dup3\n    /* \"#utility.yul\":1204:1213   */\n  dup7\n    /* \"#utility.yul\":1200:1222   */\n  add\n    /* \"#utility.yul\":1171:1232   */\n  tag_11\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":1278:1280   */\n  0x20\n    /* \"#utility.yul\":1263:1281   */\n  dup6\n  add\n    /* \"#utility.yul\":1257:1282   */\n  mload\n    /* \"#utility.yul\":1161:1232   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1257:1282   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1294:1326   */\n  dup2\n  gt\n    /* \"#utility.yul\":1291:1343   */\n  iszero\n  tag_29\n  jumpi\n    /* \"#utility.yul\":1339:1340   */\n  0x00\n    /* \"#utility.yul\":1336:1337   */\n  0x00\n    /* \"#utility.yul\":1329:1341   */\n  revert\n    /* \"#utility.yul\":1291:1343   */\ntag_29:\n    /* \"#utility.yul\":1362:1425   */\n  tag_30\n    /* \"#utility.yul\":1417:1424   */\n  dup6\n    /* \"#utility.yul\":1406:1414   */\n  dup3\n    /* \"#utility.yul\":1395:1404   */\n  dup7\n    /* \"#utility.yul\":1391:1415   */\n  add\n    /* \"#utility.yul\":1362:1425   */\n  tag_11\n  jump\t// in\ntag_30:\n    /* \"#utility.yul\":1352:1425   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":874:1431   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1436:1816   */\ntag_12:\n    /* \"#utility.yul\":1515:1516   */\n  0x01\n    /* \"#utility.yul\":1511:1523   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1558:1570   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1579:1640   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1633:1637   */\n  0x7f\n    /* \"#utility.yul\":1625:1631   */\n  dup3\n    /* \"#utility.yul\":1621:1638   */\n  and\n    /* \"#utility.yul\":1611:1638   */\n  swap2\n  pop\n    /* \"#utility.yul\":1579:1640   */\ntag_32:\n    /* \"#utility.yul\":1686:1688   */\n  0x20\n    /* \"#utility.yul\":1678:1684   */\n  dup3\n    /* \"#utility.yul\":1675:1689   */\n  lt\n    /* \"#utility.yul\":1655:1673   */\n  dup2\n    /* \"#utility.yul\":1652:1690   */\n  sub\n    /* \"#utility.yul\":1649:1810   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1732:1742   */\n  0x4e487b71\n    /* \"#utility.yul\":1727:1730   */\n  0xe0\n    /* \"#utility.yul\":1723:1743   */\n  shl\n    /* \"#utility.yul\":1720:1721   */\n  0x00\n    /* \"#utility.yul\":1713:1744   */\n  mstore\n    /* \"#utility.yul\":1767:1771   */\n  0x22\n    /* \"#utility.yul\":1764:1765   */\n  0x04\n    /* \"#utility.yul\":1757:1772   */\n  mstore\n    /* \"#utility.yul\":1795:1799   */\n  0x24\n    /* \"#utility.yul\":1792:1793   */\n  0x00\n    /* \"#utility.yul\":1785:1800   */\n  revert\n    /* \"#utility.yul\":1649:1810   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1436:1816   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1947:2465   */\ntag_14:\n    /* \"#utility.yul\":2049:2051   */\n  0x1f\n    /* \"#utility.yul\":2044:2047   */\n  dup3\n    /* \"#utility.yul\":2041:2052   */\n  gt\n    /* \"#utility.yul\":2038:2459   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":2085:2090   */\n  dup1\n    /* \"#utility.yul\":2082:2083   */\n  0x00\n    /* \"#utility.yul\":2075:2091   */\n  mstore\n    /* \"#utility.yul\":2129:2133   */\n  0x20\n    /* \"#utility.yul\":2126:2127   */\n  0x00\n    /* \"#utility.yul\":2116:2134   */\n  keccak256\n    /* \"#utility.yul\":2199:2201   */\n  0x1f\n    /* \"#utility.yul\":2187:2197   */\n  dup5\n    /* \"#utility.yul\":2183:2202   */\n  add\n    /* \"#utility.yul\":2180:2181   */\n  0x05\n    /* \"#utility.yul\":2176:2203   */\n  shr\n    /* \"#utility.yul\":2170:2174   */\n  dup2\n    /* \"#utility.yul\":2166:2204   */\n  add\n    /* \"#utility.yul\":2235:2239   */\n  0x20\n    /* \"#utility.yul\":2223:2233   */\n  dup6\n    /* \"#utility.yul\":2220:2240   */\n  lt\n    /* \"#utility.yul\":2217:2264   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2258:2262   */\n  dup1\n    /* \"#utility.yul\":2217:2264   */\ntag_37:\n    /* \"#utility.yul\":2313:2315   */\n  0x1f\n    /* \"#utility.yul\":2308:2311   */\n  dup5\n    /* \"#utility.yul\":2304:2316   */\n  add\n    /* \"#utility.yul\":2301:2302   */\n  0x05\n    /* \"#utility.yul\":2297:2317   */\n  shr\n    /* \"#utility.yul\":2291:2295   */\n  dup3\n    /* \"#utility.yul\":2287:2318   */\n  add\n    /* \"#utility.yul\":2277:2318   */\n  swap2\n  pop\n    /* \"#utility.yul\":2368:2449   */\ntag_38:\n    /* \"#utility.yul\":2386:2388   */\n  dup2\n    /* \"#utility.yul\":2379:2384   */\n  dup2\n    /* \"#utility.yul\":2376:2389   */\n  lt\n    /* \"#utility.yul\":2368:2449   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2445:2446   */\n  0x00\n    /* \"#utility.yul\":2431:2447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2412:2413   */\n  0x01\n    /* \"#utility.yul\":2401:2414   */\n  add\n    /* \"#utility.yul\":2368:2449   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2372:2375   */\n  pop\n  pop\n    /* \"#utility.yul\":2038:2459   */\ntag_36:\n    /* \"#utility.yul\":1947:2465   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2641:3940   */\ntag_7:\n    /* \"#utility.yul\":2761:2771   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2783:2813   */\n  dup2\n  gt\n    /* \"#utility.yul\":2780:2836   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2816:2834   */\n  tag_44\n  tag_10\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2845:2942   */\n  tag_45\n    /* \"#utility.yul\":2935:2941   */\n  dup2\n    /* \"#utility.yul\":2895:2933   */\n  tag_46\n    /* \"#utility.yul\":2927:2931   */\n  dup5\n    /* \"#utility.yul\":2921:2932   */\n  sload\n    /* \"#utility.yul\":2895:2933   */\n  tag_12\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2889:2893   */\n  dup5\n    /* \"#utility.yul\":2845:2942   */\n  tag_14\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2991:2995   */\n  0x20\n    /* \"#utility.yul\":3022:3024   */\n  0x1f\n    /* \"#utility.yul\":3011:3025   */\n  dup3\n  gt\n    /* \"#utility.yul\":3039:3040   */\n  0x01\n    /* \"#utility.yul\":3034:3683   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3727:3728   */\n  0x00\n    /* \"#utility.yul\":3744:3750   */\n  dup4\n    /* \"#utility.yul\":3741:3830   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3796:3815   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3790:3816   */\n  mload\n    /* \"#utility.yul\":3741:3830   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2598:2599   */\n  0x03\n    /* \"#utility.yul\":2594:2605   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2590:2614   */\n  shr\n    /* \"#utility.yul\":2586:2615   */\n  not\n    /* \"#utility.yul\":2576:2616   */\n  and\n    /* \"#utility.yul\":2622:2623   */\n  0x01\n    /* \"#utility.yul\":2618:2629   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2573:2630   */\n  or\n    /* \"#utility.yul\":3843:3924   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3004:3934   */\n  jump(tag_40)\n    /* \"#utility.yul\":3034:3683   */\ntag_48:\n    /* \"#utility.yul\":1894:1895   */\n  0x00\n    /* \"#utility.yul\":1887:1901   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1931:1935   */\n  0x20\n    /* \"#utility.yul\":1918:1936   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3070:3090   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3188:3410   */\ntag_52:\n    /* \"#utility.yul\":3202:3209   */\n  dup3\n    /* \"#utility.yul\":3199:3200   */\n  dup2\n    /* \"#utility.yul\":3196:3210   */\n  lt\n    /* \"#utility.yul\":3188:3410   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3284:3303   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3278:3304   */\n  mload\n    /* \"#utility.yul\":3263:3305   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3391:3395   */\n  0x20\n    /* \"#utility.yul\":3376:3396   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3344:3345   */\n  0x01\n    /* \"#utility.yul\":3332:3346   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3218:3230   */\n  add\n    /* \"#utility.yul\":3188:3410   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3192:3195   */\n  pop\n    /* \"#utility.yul\":3438:3444   */\n  dup5\n    /* \"#utility.yul\":3429:3436   */\n  dup3\n    /* \"#utility.yul\":3426:3445   */\n  lt\n    /* \"#utility.yul\":3423:3624   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3499:3518   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3493:3519   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3582:3583   */\n  0x03\n    /* \"#utility.yul\":3578:3592   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3594:3597   */\n  0xf8\n    /* \"#utility.yul\":3574:3598   */\n  and\n    /* \"#utility.yul\":3570:3607   */\n  shr\n    /* \"#utility.yul\":3566:3608   */\n  not\n    /* \"#utility.yul\":3551:3609   */\n  and\n    /* \"#utility.yul\":3536:3610   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3423:3624   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3670:3671   */\n  0x01\n    /* \"#utility.yul\":3654:3668   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3650:3672   */\n  add\n    /* \"#utility.yul\":3637:3673   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2641:3940   */\n  jump\t// out\ntag_16:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2676:13890  contract ERC20 is Context, IERC20, IERC20Metadata {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4604:4616  _totalSupply */\n      sload(0x02)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4448:4450  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4755:4762  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3483:3496  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3515:3520  _name */\n      0x03\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3520  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5789:5793  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5859:5866  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5868:5874  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5851  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5892:5896  true */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5885:5896  return true */\n      swap2\n      pop\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_32:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:6596  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6664:6668  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6679:6685  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6663  _spendAllowance */\n      tag_79\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6706:6710  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6712:6714  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6716:6722  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6705  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6740:6744  true */\n      0x01\n      swap5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7341:7351  addedValue */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      tag_86\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7322  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7296  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3696:3709  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3728:3735  _symbol */\n      0x04\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3735  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      tag_98\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8065  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8050  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8014:8066  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8104:8119  subtractedValue */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8100  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8119  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8204:8209  owner */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8211:8218  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8239:8254  subtractedValue */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8236  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8254  currentAllowance - subtractedValue */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8203  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5085  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5152:5154  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5156:5162  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5144  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5345  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11533  owner != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11592:11613  spender != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11674  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11690  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11699  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n    tag_79:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12188  uint256 currentAllowance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      tag_117\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12201:12206  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12208:12215  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12200  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12216  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12246  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12267  currentAllowance != type(uint256).max */\n      eq\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12226:12469  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12311:12317  amount */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12307  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12317  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12402:12407  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12409:12416  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12437:12443  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12434  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12443  currentAllowance - amount */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12401  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12154:12475  {... */\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8748:9399  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8874:8892  from != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8968  to != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9068:9087  uint256 fromBalance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9123:9144  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9239:9259  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9259  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9292  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      dup1\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9333:9335  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9327:9331  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9337:9343  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9392  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_141:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_145:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_147:\n        /* \"#utility.yul\":783:812   */\n      tag_148\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_141\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_152:\n        /* \"#utility.yul\":1479:1508   */\n      tag_153\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_154\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_157:\n        /* \"#utility.yul\":2013:2042   */\n      tag_158\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_160:\n        /* \"#utility.yul\":2221:2250   */\n      tag_161\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_162\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_164:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa26469706673582212201f883e2dcbe0fd805c18f22cd40c6303d97abc0a9c1fd2813fa9c78ab84b0fc664736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 99,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 236,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 393,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 469,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 79,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3942:5",
										"nodeType": "YulBlock",
										"src": "0:3942:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:659:5",
													"nodeType": "YulBlock",
													"src": "210:659:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:5",
																				"nodeType": "YulLiteral",
																				"src": "756:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:5"
																		},
																		"nativeSrc": "744:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:5",
																				"nodeType": "YulLiteral",
																				"src": "775:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:5"
																		},
																		"nativeSrc": "763:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:5"
																},
																"nativeSrc": "738:51:5",
																"nodeType": "YulFunctionCall",
																"src": "738:51:5"
															},
															"nativeSrc": "738:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:5"
																				},
																				"nativeSrc": "809:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:5",
																				"nodeType": "YulLiteral",
																				"src": "830:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:5"
																		},
																		"nativeSrc": "805:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:5",
																		"nodeType": "YulLiteral",
																		"src": "837:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:5"
																},
																"nativeSrc": "798:41:5",
																"nodeType": "YulFunctionCall",
																"src": "798:41:5"
															},
															"nativeSrc": "798:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:5"
														},
														{
															"nativeSrc": "848:15:5",
															"nodeType": "YulAssignment",
															"src": "848:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:5",
																"nodeType": "YulIdentifier",
																"src": "857:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:723:5"
											},
											{
												"body": {
													"nativeSrc": "992:439:5",
													"nodeType": "YulBlock",
													"src": "992:439:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1038:16:5",
																"nodeType": "YulBlock",
																"src": "1038:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1047:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1050:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1040:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:5"
																			},
																			"nativeSrc": "1040:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:5"
																		},
																		"nativeSrc": "1040:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1013:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1013:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1022:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1022:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1009:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1009:3:5"
																		},
																		"nativeSrc": "1009:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1009:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1034:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1034:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1005:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1005:3:5"
																},
																"nativeSrc": "1005:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1005:32:5"
															},
															"nativeSrc": "1002:52:5",
															"nodeType": "YulIf",
															"src": "1002:52:5"
														},
														{
															"nativeSrc": "1063:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1063:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1083:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1083:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1077:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1077:5:5"
																},
																"nativeSrc": "1077:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1077:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1067:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1067:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1136:16:5",
																"nodeType": "YulBlock",
																"src": "1136:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1145:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1145:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1148:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1148:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1138:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1138:6:5"
																			},
																			"nativeSrc": "1138:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1138:12:5"
																		},
																		"nativeSrc": "1138:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1138:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1108:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1108:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1124:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1124:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1128:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1128:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1120:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1120:3:5"
																				},
																				"nativeSrc": "1120:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1120:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1132:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1132:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1116:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1116:3:5"
																		},
																		"nativeSrc": "1116:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1116:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1105:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1105:2:5"
																},
																"nativeSrc": "1105:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1105:30:5"
															},
															"nativeSrc": "1102:50:5",
															"nodeType": "YulIf",
															"src": "1102:50:5"
														},
														{
															"nativeSrc": "1161:71:5",
															"nodeType": "YulAssignment",
															"src": "1161:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1204:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1204:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1215:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1215:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1200:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1200:3:5"
																		},
																		"nativeSrc": "1200:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1200:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1224:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1224:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1171:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1171:28:5"
																},
																"nativeSrc": "1171:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1171:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1161:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1161:6:5"
																}
															]
														},
														{
															"nativeSrc": "1241:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1241:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1267:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1267:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1278:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1278:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1263:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1263:3:5"
																		},
																		"nativeSrc": "1263:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1263:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1257:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1257:5:5"
																},
																"nativeSrc": "1257:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1257:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1245:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1245:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1327:16:5",
																"nodeType": "YulBlock",
																"src": "1327:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1336:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1339:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1329:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:5"
																			},
																			"nativeSrc": "1329:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:5"
																		},
																		"nativeSrc": "1329:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1297:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1297:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1315:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1315:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1319:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1319:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1311:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1311:3:5"
																				},
																				"nativeSrc": "1311:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1311:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1323:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1323:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1307:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1307:3:5"
																		},
																		"nativeSrc": "1307:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1307:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1294:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1294:2:5"
																},
																"nativeSrc": "1294:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1294:32:5"
															},
															"nativeSrc": "1291:52:5",
															"nodeType": "YulIf",
															"src": "1291:52:5"
														},
														{
															"nativeSrc": "1352:73:5",
															"nodeType": "YulAssignment",
															"src": "1352:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1395:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1395:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1406:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1406:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1391:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:5"
																		},
																		"nativeSrc": "1391:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1417:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1417:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1362:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1362:28:5"
																},
																"nativeSrc": "1362:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1362:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1352:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "874:557:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "950:9:5",
														"nodeType": "YulTypedName",
														"src": "950:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "961:7:5",
														"nodeType": "YulTypedName",
														"src": "961:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "973:6:5",
														"nodeType": "YulTypedName",
														"src": "973:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "981:6:5",
														"nodeType": "YulTypedName",
														"src": "981:6:5",
														"type": ""
													}
												],
												"src": "874:557:5"
											},
											{
												"body": {
													"nativeSrc": "1491:325:5",
													"nodeType": "YulBlock",
													"src": "1491:325:5",
													"statements": [
														{
															"nativeSrc": "1501:22:5",
															"nodeType": "YulAssignment",
															"src": "1501:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1515:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1515:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1518:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1518:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1511:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1511:3:5"
																},
																"nativeSrc": "1511:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1511:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1501:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:5"
																}
															]
														},
														{
															"nativeSrc": "1532:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1532:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1562:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1562:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1568:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1568:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1558:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1558:3:5"
																},
																"nativeSrc": "1558:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1558:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1536:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1536:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1609:31:5",
																"nodeType": "YulBlock",
																"src": "1609:31:5",
																"statements": [
																	{
																		"nativeSrc": "1611:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1611:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1625:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1625:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1633:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1633:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1621:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1621:3:5"
																			},
																			"nativeSrc": "1621:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1621:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1611:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1611:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1589:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1589:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1582:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1582:6:5"
																},
																"nativeSrc": "1582:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1582:26:5"
															},
															"nativeSrc": "1579:61:5",
															"nodeType": "YulIf",
															"src": "1579:61:5"
														},
														{
															"body": {
																"nativeSrc": "1699:111:5",
																"nodeType": "YulBlock",
																"src": "1699:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1720:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1720:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1727:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1727:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1732:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1732:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1723:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1723:3:5"
																					},
																					"nativeSrc": "1723:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1723:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1713:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1713:6:5"
																			},
																			"nativeSrc": "1713:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1713:31:5"
																		},
																		"nativeSrc": "1713:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1713:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1764:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1764:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1767:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1767:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1757:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1757:6:5"
																			},
																			"nativeSrc": "1757:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1757:15:5"
																		},
																		"nativeSrc": "1757:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1757:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1792:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1792:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1795:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1795:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1785:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1785:6:5"
																			},
																			"nativeSrc": "1785:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1785:15:5"
																		},
																		"nativeSrc": "1785:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1785:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1655:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1655:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1678:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1678:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1686:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1686:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1675:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1675:2:5"
																		},
																		"nativeSrc": "1675:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1675:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1652:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1652:2:5"
																},
																"nativeSrc": "1652:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1652:38:5"
															},
															"nativeSrc": "1649:161:5",
															"nodeType": "YulIf",
															"src": "1649:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1436:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1471:4:5",
														"nodeType": "YulTypedName",
														"src": "1471:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1480:6:5",
														"nodeType": "YulTypedName",
														"src": "1480:6:5",
														"type": ""
													}
												],
												"src": "1436:380:5"
											},
											{
												"body": {
													"nativeSrc": "1877:65:5",
													"nodeType": "YulBlock",
													"src": "1877:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1894:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1894:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1897:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1897:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1887:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1887:6:5"
																},
																"nativeSrc": "1887:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1887:14:5"
															},
															"nativeSrc": "1887:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "1887:14:5"
														},
														{
															"nativeSrc": "1910:26:5",
															"nodeType": "YulAssignment",
															"src": "1910:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1931:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1931:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1918:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1918:9:5"
																},
																"nativeSrc": "1918:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1918:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1910:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1910:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1821:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1860:3:5",
														"nodeType": "YulTypedName",
														"src": "1860:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1868:4:5",
														"nodeType": "YulTypedName",
														"src": "1868:4:5",
														"type": ""
													}
												],
												"src": "1821:121:5"
											},
											{
												"body": {
													"nativeSrc": "2028:437:5",
													"nodeType": "YulBlock",
													"src": "2028:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2061:398:5",
																"nodeType": "YulBlock",
																"src": "2061:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2082:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2082:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2085:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2085:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2075:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2075:6:5"
																			},
																			"nativeSrc": "2075:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2075:16:5"
																		},
																		"nativeSrc": "2075:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2075:16:5"
																	},
																	{
																		"nativeSrc": "2104:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2104:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2126:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2126:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2129:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2129:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2116:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2116:9:5"
																			},
																			"nativeSrc": "2116:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2116:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2108:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2108:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2147:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2147:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2170:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2170:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2180:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2180:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2187:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2187:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2199:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2199:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2183:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2183:3:5"
																							},
																							"nativeSrc": "2183:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2183:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2176:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2176:3:5"
																					},
																					"nativeSrc": "2176:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2176:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2166:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2166:3:5"
																			},
																			"nativeSrc": "2166:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2166:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2151:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2151:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2241:23:5",
																			"nodeType": "YulBlock",
																			"src": "2241:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2243:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2243:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2258:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2258:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2243:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2243:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2223:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2223:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2235:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2235:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2220:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2220:2:5"
																			},
																			"nativeSrc": "2220:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2220:20:5"
																		},
																		"nativeSrc": "2217:47:5",
																		"nodeType": "YulIf",
																		"src": "2217:47:5"
																	},
																	{
																		"nativeSrc": "2277:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2277:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2291:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2291:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2301:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2301:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2308:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2308:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2313:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2313:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2304:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2304:3:5"
																							},
																							"nativeSrc": "2304:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2304:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2297:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2297:3:5"
																					},
																					"nativeSrc": "2297:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2297:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2287:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2287:3:5"
																			},
																			"nativeSrc": "2287:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2287:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2281:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2281:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2331:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2331:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2344:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2344:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2335:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2335:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2429:20:5",
																			"nodeType": "YulBlock",
																			"src": "2429:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2438:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2438:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2445:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2445:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2431:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2431:6:5"
																						},
																						"nativeSrc": "2431:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2431:16:5"
																					},
																					"nativeSrc": "2431:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2431:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2379:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2379:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2386:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2386:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2376:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2376:2:5"
																			},
																			"nativeSrc": "2376:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2376:13:5"
																		},
																		"nativeSrc": "2368:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2390:26:5",
																			"nodeType": "YulBlock",
																			"src": "2390:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2392:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2392:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2405:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2405:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2412:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2412:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2401:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2401:3:5"
																						},
																						"nativeSrc": "2401:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2401:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2392:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2392:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2372:3:5",
																			"nodeType": "YulBlock",
																			"src": "2372:3:5",
																			"statements": []
																		},
																		"src": "2368:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2044:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2044:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2049:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2049:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2041:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2041:2:5"
																},
																"nativeSrc": "2041:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2041:11:5"
															},
															"nativeSrc": "2038:421:5",
															"nodeType": "YulIf",
															"src": "2038:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "1947:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2000:5:5",
														"nodeType": "YulTypedName",
														"src": "2000:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2007:3:5",
														"nodeType": "YulTypedName",
														"src": "2007:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2012:10:5",
														"nodeType": "YulTypedName",
														"src": "2012:10:5",
														"type": ""
													}
												],
												"src": "1947:518:5"
											},
											{
												"body": {
													"nativeSrc": "2555:81:5",
													"nodeType": "YulBlock",
													"src": "2555:81:5",
													"statements": [
														{
															"nativeSrc": "2565:65:5",
															"nodeType": "YulAssignment",
															"src": "2565:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2580:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2580:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2598:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2598:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2601:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2601:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2594:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2594:3:5"
																								},
																								"nativeSrc": "2594:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2594:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2611:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2611:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2607:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2607:3:5"
																								},
																								"nativeSrc": "2607:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2607:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2590:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2590:3:5"
																						},
																						"nativeSrc": "2590:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2590:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2586:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2586:3:5"
																				},
																				"nativeSrc": "2586:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2586:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2576:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2576:3:5"
																		},
																		"nativeSrc": "2576:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2576:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2622:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2622:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2625:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2625:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2618:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2618:3:5"
																		},
																		"nativeSrc": "2618:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2618:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2573:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2573:2:5"
																},
																"nativeSrc": "2573:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2573:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2565:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2565:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2470:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2532:4:5",
														"nodeType": "YulTypedName",
														"src": "2532:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2538:3:5",
														"nodeType": "YulTypedName",
														"src": "2538:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2546:4:5",
														"nodeType": "YulTypedName",
														"src": "2546:4:5",
														"type": ""
													}
												],
												"src": "2470:166:5"
											},
											{
												"body": {
													"nativeSrc": "2737:1203:5",
													"nodeType": "YulBlock",
													"src": "2737:1203:5",
													"statements": [
														{
															"nativeSrc": "2747:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2747:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2767:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2767:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2761:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2761:5:5"
																},
																"nativeSrc": "2761:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2761:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2751:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2751:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2814:22:5",
																"nodeType": "YulBlock",
																"src": "2814:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2816:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2816:16:5"
																			},
																			"nativeSrc": "2816:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2816:18:5"
																		},
																		"nativeSrc": "2816:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2816:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2786:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2786:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2802:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2802:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2806:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2806:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2798:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2798:3:5"
																				},
																				"nativeSrc": "2798:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2798:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2810:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2810:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2794:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2794:3:5"
																		},
																		"nativeSrc": "2794:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2794:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2783:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2783:2:5"
																},
																"nativeSrc": "2783:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2783:30:5"
															},
															"nativeSrc": "2780:56:5",
															"nodeType": "YulIf",
															"src": "2780:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2889:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2889:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2927:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2927:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2921:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2921:5:5"
																				},
																				"nativeSrc": "2921:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2921:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2895:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "2895:25:5"
																		},
																		"nativeSrc": "2895:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2895:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2935:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2935:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2845:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2845:43:5"
																},
																"nativeSrc": "2845:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2845:97:5"
															},
															"nativeSrc": "2845:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2845:97:5"
														},
														{
															"nativeSrc": "2951:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2951:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2968:1:5",
																"nodeType": "YulLiteral",
																"src": "2968:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2955:9:5",
																	"nodeType": "YulTypedName",
																	"src": "2955:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2978:17:5",
															"nodeType": "YulAssignment",
															"src": "2978:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "2991:4:5",
																"nodeType": "YulLiteral",
																"src": "2991:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "2978:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "2978:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3041:642:5",
																		"nodeType": "YulBlock",
																		"src": "3041:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3055:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3055:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3074:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3074:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3086:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3086:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3082:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3082:3:5"
																							},
																							"nativeSrc": "3082:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3082:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3070:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3070:3:5"
																					},
																					"nativeSrc": "3070:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3070:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3059:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3059:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3103:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3103:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3147:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3147:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3117:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3117:29:5"
																					},
																					"nativeSrc": "3117:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3117:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3107:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3107:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3165:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3165:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3174:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3174:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3169:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3169:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3245:165:5",
																					"nodeType": "YulBlock",
																					"src": "3245:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3270:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3270:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3288:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3288:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3293:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3293:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3284:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3284:3:5"
																												},
																												"nativeSrc": "3284:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3284:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3278:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3278:5:5"
																										},
																										"nativeSrc": "3278:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3278:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3263:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3263:6:5"
																								},
																								"nativeSrc": "3263:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3263:42:5"
																							},
																							"nativeSrc": "3263:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3263:42:5"
																						},
																						{
																							"nativeSrc": "3322:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3322:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3336:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3336:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3344:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3344:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3332:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3332:3:5"
																								},
																								"nativeSrc": "3332:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3332:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3322:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3322:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3363:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3363:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3380:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3380:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3391:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3391:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3376:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3376:3:5"
																								},
																								"nativeSrc": "3376:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3376:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3363:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3363:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3199:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3199:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3202:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3202:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3196:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3196:2:5"
																					},
																					"nativeSrc": "3196:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3196:14:5"
																				},
																				"nativeSrc": "3188:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3211:21:5",
																					"nodeType": "YulBlock",
																					"src": "3211:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3213:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3213:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3222:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3222:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3225:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3225:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3218:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3218:3:5"
																								},
																								"nativeSrc": "3218:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3218:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3213:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3213:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3192:3:5",
																					"nodeType": "YulBlock",
																					"src": "3192:3:5",
																					"statements": []
																				},
																				"src": "3188:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3458:166:5",
																					"nodeType": "YulBlock",
																					"src": "3458:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3476:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3476:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3503:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3503:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3508:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3508:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3499:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3499:3:5"
																										},
																										"nativeSrc": "3499:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3499:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3493:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3493:5:5"
																								},
																								"nativeSrc": "3493:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3493:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3480:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3480:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3543:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3543:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3555:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3555:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3582:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3582:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3585:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3585:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3578:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3578:3:5"
																																		},
																																		"nativeSrc": "3578:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3578:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3594:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3594:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3574:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3574:3:5"
																																},
																																"nativeSrc": "3574:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3574:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3604:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3604:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3600:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3600:3:5"
																																},
																																"nativeSrc": "3600:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3600:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3570:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3570:3:5"
																														},
																														"nativeSrc": "3570:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3570:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3566:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3566:3:5"
																												},
																												"nativeSrc": "3566:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3566:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3551:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3551:3:5"
																										},
																										"nativeSrc": "3551:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3551:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3536:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3536:6:5"
																								},
																								"nativeSrc": "3536:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3536:74:5"
																							},
																							"nativeSrc": "3536:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3536:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3429:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3429:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3438:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3438:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3426:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3426:2:5"
																					},
																					"nativeSrc": "3426:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3426:19:5"
																				},
																				"nativeSrc": "3423:201:5",
																				"nodeType": "YulIf",
																				"src": "3423:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3644:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3644:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3658:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3658:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3661:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3661:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3654:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3654:3:5"
																									},
																									"nativeSrc": "3654:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3654:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3670:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3670:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3650:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3650:3:5"
																							},
																							"nativeSrc": "3650:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3650:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3637:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3637:6:5"
																					},
																					"nativeSrc": "3637:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3637:36:5"
																				},
																				"nativeSrc": "3637:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3637:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3034:649:5",
																	"nodeType": "YulCase",
																	"src": "3034:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3039:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3039:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3700:234:5",
																		"nodeType": "YulBlock",
																		"src": "3700:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3714:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3714:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3727:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3727:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3718:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3718:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3763:67:5",
																					"nodeType": "YulBlock",
																					"src": "3763:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3781:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3781:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3800:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3800:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3805:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3805:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3796:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3796:3:5"
																										},
																										"nativeSrc": "3796:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3796:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3790:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3790:5:5"
																								},
																								"nativeSrc": "3790:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3790:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3781:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3781:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3744:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3744:6:5"
																				},
																				"nativeSrc": "3741:89:5",
																				"nodeType": "YulIf",
																				"src": "3741:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3850:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3850:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3909:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3909:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3916:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3916:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3856:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "3856:52:5"
																							},
																							"nativeSrc": "3856:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3856:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3843:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3843:6:5"
																					},
																					"nativeSrc": "3843:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3843:81:5"
																				},
																				"nativeSrc": "3843:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3843:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3692:242:5",
																	"nodeType": "YulCase",
																	"src": "3692:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3014:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3014:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3022:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3022:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3011:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3011:2:5"
																},
																"nativeSrc": "3011:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3011:14:5"
															},
															"nativeSrc": "3004:930:5",
															"nodeType": "YulSwitch",
															"src": "3004:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2641:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2722:4:5",
														"nodeType": "YulTypedName",
														"src": "2722:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2728:3:5",
														"nodeType": "YulTypedName",
														"src": "2728:3:5",
														"type": ""
													}
												],
												"src": "2641:1299:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051610ae0380380610ae083398101604081905261002e916100ec565b600361003a83826101d5565b50600461004782826101d5565b50505061028f565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610072575f5ffd5b81516001600160401b0381111561008b5761008b61004f565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100b9576100b961004f565b6040528181528382016020018510156100d0575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f604083850312156100fd575f5ffd5b82516001600160401b03811115610112575f5ffd5b61011e85828601610063565b602085015190935090506001600160401b0381111561013b575f5ffd5b61014785828601610063565b9150509250929050565b600181811c9082168061016557607f821691505b60208210810361018357634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156101d057805f5260205f20601f840160051c810160208510156101ae5750805b601f840160051c820191505b818110156101cd575f81556001016101ba565b50505b505050565b81516001600160401b038111156101ee576101ee61004f565b610202816101fc8454610151565b84610189565b6020601f821160018114610234575f831561021d5750848201515b5f19600385901b1c1916600184901b1784556101cd565b5f84815260208120601f198516915b828110156102635787850151825560209485019460019092019101610243565b508482101561028057868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b6108448061029c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d6366004610704565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461072c565b610244565b604051601281526020016100bf565b6100db61012d366004610704565b610267565b6100ef610140366004610766565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db610170366004610704565b610297565b6100db610183366004610704565b610316565b6100ef610196366004610786565b610323565b6060600380546101aa906107b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107b7565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107ef565b61034d565b6060600480546101aa906107b7565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b9084906107ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106ff575f5ffd5b919050565b5f5f60408385031215610715575f5ffd5b61071e836106e9565b946020939093013593505050565b5f5f5f6060848603121561073e575f5ffd5b610747846106e9565b9250610755602085016106e9565b929592945050506040919091013590565b5f60208284031215610776575f5ffd5b61077f826106e9565b9392505050565b5f5f60408385031215610797575f5ffd5b6107a0836106e9565b91506107ae602084016106e9565b90509250929050565b600181811c908216806107cb57607f821691505b6020821081036107e957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212201f883e2dcbe0fd805c18f22cd40c6303d97abc0a9c1fd2813fa9c78ab84b0fc664736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xAE0 CODESIZE SUB DUP1 PUSH2 0xAE0 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2E SWAP2 PUSH2 0xEC JUMP JUMPDEST PUSH1 0x3 PUSH2 0x3A DUP4 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x47 DUP3 DUP3 PUSH2 0x1D5 JUMP JUMPDEST POP POP POP PUSH2 0x28F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x72 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x8B JUMPI PUSH2 0x8B PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xB9 JUMPI PUSH2 0xB9 PUSH2 0x4F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xD0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFD JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x112 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11E DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x13B JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x147 DUP6 DUP3 DUP7 ADD PUSH2 0x63 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x165 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x183 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1D0 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1AE JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1CD JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1BA JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x1EE JUMPI PUSH2 0x1EE PUSH2 0x4F JUMP JUMPDEST PUSH2 0x202 DUP2 PUSH2 0x1FC DUP5 SLOAD PUSH2 0x151 JUMP JUMPDEST DUP5 PUSH2 0x189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x234 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x21D JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1CD JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x263 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x243 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x280 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x844 DUP1 PUSH2 0x29C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x7EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x747 DUP5 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x755 PUSH1 0x20 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77F DUP3 PUSH2 0x6E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x797 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7A0 DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7AE PUSH1 0x20 DUP5 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP9 RETURNDATACOPY 0x2D 0xCB RJUMP 0xFD80 TLOAD XOR CALLCODE 0x2C 0xD4 0xC PUSH4 0x3D97ABC EXP SWAP13 0x1F 0xD2 DUP2 EXTCODEHASH 0xA9 0xC7 DUP11 0xB8 0x4B 0xF 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "2676:11214:0:-:0;;;3251:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3317:5;:13;3325:5;3317;:13;:::i;:::-;-1:-1:-1;3340:7:0;:17;3350:7;3340;:17;:::i;:::-;;3251:113;;2676:11214;;14:127:5;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:5:o;874:557::-;973:6;981;1034:2;1022:9;1013:7;1009:23;1005:32;1002:52;;;1050:1;1047;1040:12;1002:52;1077:16;;-1:-1:-1;;;;;1105:30:5;;1102:50;;;1148:1;1145;1138:12;1102:50;1171:61;1224:7;1215:6;1204:9;1200:22;1171:61;:::i;:::-;1278:2;1263:18;;1257:25;1161:71;;-1:-1:-1;1257:25:5;-1:-1:-1;;;;;;1294:32:5;;1291:52;;;1339:1;1336;1329:12;1291:52;1362:63;1417:7;1406:8;1395:9;1391:24;1362:63;:::i;:::-;1352:73;;;874:557;;;;;:::o;1436:380::-;1515:1;1511:12;;;;1558;;;1579:61;;1633:4;1625:6;1621:17;1611:27;;1579:61;1686:2;1678:6;1675:14;1655:18;1652:38;1649:161;;1732:10;1727:3;1723:20;1720:1;1713:31;1767:4;1764:1;1757:15;1795:4;1792:1;1785:15;1649:161;;1436:380;;;:::o;1947:518::-;2049:2;2044:3;2041:11;2038:421;;;2085:5;2082:1;2075:16;2129:4;2126:1;2116:18;2199:2;2187:10;2183:19;2180:1;2176:27;2170:4;2166:38;2235:4;2223:10;2220:20;2217:47;;;-1:-1:-1;2258:4:5;2217:47;2313:2;2308:3;2304:12;2301:1;2297:20;2291:4;2287:31;2277:41;;2368:81;2386:2;2379:5;2376:13;2368:81;;;2445:1;2431:16;;2412:1;2401:13;2368:81;;;2372:3;;2038:421;1947:518;;;:::o;2641:1299::-;2761:10;;-1:-1:-1;;;;;2783:30:5;;2780:56;;;2816:18;;:::i;:::-;2845:97;2935:6;2895:38;2927:4;2921:11;2895:38;:::i;:::-;2889:4;2845:97;:::i;:::-;2991:4;3022:2;3011:14;;3039:1;3034:649;;;;3727:1;3744:6;3741:89;;;-1:-1:-1;3796:19:5;;;3790:26;3741:89;-1:-1:-1;;2598:1:5;2594:11;;;2590:24;2586:29;2576:40;2622:1;2618:11;;;2573:57;3843:81;;3004:930;;3034:649;1894:1;1887:14;;;1931:4;1918:18;;-1:-1:-1;;3070:20:5;;;3188:222;3202:7;3199:1;3196:14;3188:222;;;3284:19;;;3278:26;3263:42;;3391:4;3376:20;;;;3344:1;3332:14;;;;3218:12;3188:222;;;3192:3;3438:6;3429:7;3426:19;3423:201;;;3499:19;;;3493:26;-1:-1:-1;;3582:1:5;3578:14;;;3594:3;3574:24;3570:37;3566:42;3551:58;3536:74;;3423:201;-1:-1:-1;;;;3670:1:5;3654:14;;;3650:22;3637:36;;-1:-1:-1;2641:1299:5:o;:::-;2676:11214:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 845,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1136,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1256,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 803,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 555,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 663,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 615,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 411,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 648,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 580,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 790,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:5",
										"nodeType": "YulBlock",
										"src": "0:5716:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:5",
													"nodeType": "YulBlock",
													"src": "135:297:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:5"
																},
																"nativeSrc": "145:21:5",
																"nodeType": "YulFunctionCall",
																"src": "145:21:5"
															},
															"nativeSrc": "145:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:5"
														},
														{
															"nativeSrc": "175:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:5"
																},
																"nativeSrc": "189:13:5",
																"nodeType": "YulFunctionCall",
																"src": "189:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:5",
																	"nodeType": "YulTypedName",
																	"src": "179:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:5",
																				"nodeType": "YulLiteral",
																				"src": "233:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:5"
																		},
																		"nativeSrc": "218:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																},
																"nativeSrc": "211:34:5",
																"nodeType": "YulFunctionCall",
																"src": "211:34:5"
															},
															"nativeSrc": "211:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:5",
																				"nodeType": "YulLiteral",
																				"src": "275:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:5"
																		},
																		"nativeSrc": "260:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:5",
																				"nodeType": "YulLiteral",
																				"src": "292:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:5"
																		},
																		"nativeSrc": "280:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:5"
																},
																"nativeSrc": "254:50:5",
																"nodeType": "YulFunctionCall",
																"src": "254:50:5"
															},
															"nativeSrc": "254:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:5"
																				},
																				"nativeSrc": "324:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:5",
																				"nodeType": "YulLiteral",
																				"src": "348:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:5"
																		},
																		"nativeSrc": "320:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:5",
																		"nodeType": "YulLiteral",
																		"src": "353:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:5"
																},
																"nativeSrc": "313:42:5",
																"nodeType": "YulFunctionCall",
																"src": "313:42:5"
															},
															"nativeSrc": "313:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:5"
														},
														{
															"nativeSrc": "364:62:5",
															"nodeType": "YulAssignment",
															"src": "364:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:5",
																								"nodeType": "YulLiteral",
																								"src": "407:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:5"
																						},
																						"nativeSrc": "395:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:5",
																								"nodeType": "YulLiteral",
																								"src": "416:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:5"
																						},
																						"nativeSrc": "412:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:5"
																				},
																				"nativeSrc": "391:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:5"
																		},
																		"nativeSrc": "376:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "423:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:5"
																},
																"nativeSrc": "372:54:5",
																"nodeType": "YulFunctionCall",
																"src": "372:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:418:5"
											},
											{
												"body": {
													"nativeSrc": "486:124:5",
													"nodeType": "YulBlock",
													"src": "486:124:5",
													"statements": [
														{
															"nativeSrc": "496:29:5",
															"nodeType": "YulAssignment",
															"src": "496:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:5"
																},
																"nativeSrc": "505:20:5",
																"nodeType": "YulFunctionCall",
																"src": "505:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:5",
																"nodeType": "YulBlock",
																"src": "588:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:5",
																					"nodeType": "YulLiteral",
																					"src": "597:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:5",
																					"nodeType": "YulLiteral",
																					"src": "600:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:5"
																			},
																			"nativeSrc": "590:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:5"
																		},
																		"nativeSrc": "590:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:5",
																										"nodeType": "YulLiteral",
																										"src": "573:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:5",
																										"nodeType": "YulLiteral",
																										"src": "578:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:5"
																								},
																								"nativeSrc": "569:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:5",
																								"nodeType": "YulLiteral",
																								"src": "582:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:5"
																						},
																						"nativeSrc": "565:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:5"
																				},
																				"nativeSrc": "554:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:5"
																		},
																		"nativeSrc": "544:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:5"
																},
																"nativeSrc": "537:50:5",
																"nodeType": "YulFunctionCall",
																"src": "537:50:5"
															},
															"nativeSrc": "534:70:5",
															"nodeType": "YulIf",
															"src": "534:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:5",
														"nodeType": "YulTypedName",
														"src": "465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:5",
														"nodeType": "YulTypedName",
														"src": "476:5:5",
														"type": ""
													}
												],
												"src": "437:173:5"
											},
											{
												"body": {
													"nativeSrc": "702:213:5",
													"nodeType": "YulBlock",
													"src": "702:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:5",
																"nodeType": "YulBlock",
																"src": "748:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:5",
																					"nodeType": "YulLiteral",
																					"src": "757:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:5",
																					"nodeType": "YulLiteral",
																					"src": "760:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:5"
																			},
																			"nativeSrc": "750:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:5"
																		},
																		"nativeSrc": "750:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:5"
																		},
																		"nativeSrc": "719:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:5",
																		"nodeType": "YulLiteral",
																		"src": "744:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:5"
																},
																"nativeSrc": "715:32:5",
																"nodeType": "YulFunctionCall",
																"src": "715:32:5"
															},
															"nativeSrc": "712:52:5",
															"nodeType": "YulIf",
															"src": "712:52:5"
														},
														{
															"nativeSrc": "773:39:5",
															"nodeType": "YulAssignment",
															"src": "773:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:5"
																},
																"nativeSrc": "783:29:5",
																"nodeType": "YulFunctionCall",
																"src": "783:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:5"
																}
															]
														},
														{
															"nativeSrc": "821:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:5",
																"nodeType": "YulLiteral",
																"src": "834:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:5",
																	"nodeType": "YulTypedName",
																	"src": "825:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:5",
															"nodeType": "YulAssignment",
															"src": "844:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:5",
																				"nodeType": "YulLiteral",
																				"src": "881:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:5"
																		},
																		"nativeSrc": "866:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:5"
																},
																"nativeSrc": "853:32:5",
																"nodeType": "YulFunctionCall",
																"src": "853:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:5"
																}
															]
														},
														{
															"nativeSrc": "894:15:5",
															"nodeType": "YulAssignment",
															"src": "894:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:5",
																"nodeType": "YulIdentifier",
																"src": "904:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:5",
														"nodeType": "YulTypedName",
														"src": "660:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:5",
														"nodeType": "YulTypedName",
														"src": "671:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:5",
														"nodeType": "YulTypedName",
														"src": "683:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:5",
														"nodeType": "YulTypedName",
														"src": "691:6:5",
														"type": ""
													}
												],
												"src": "615:300:5"
											},
											{
												"body": {
													"nativeSrc": "1015:92:5",
													"nodeType": "YulBlock",
													"src": "1015:92:5",
													"statements": [
														{
															"nativeSrc": "1025:26:5",
															"nodeType": "YulAssignment",
															"src": "1025:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:5"
																},
																"nativeSrc": "1033:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:5"
																				},
																				"nativeSrc": "1085:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:5"
																		},
																		"nativeSrc": "1078:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:5"
																},
																"nativeSrc": "1060:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:5"
															},
															"nativeSrc": "1060:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:5",
														"nodeType": "YulTypedName",
														"src": "984:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:5",
														"nodeType": "YulTypedName",
														"src": "995:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:5",
														"nodeType": "YulTypedName",
														"src": "1006:4:5",
														"type": ""
													}
												],
												"src": "920:187:5"
											},
											{
												"body": {
													"nativeSrc": "1213:76:5",
													"nodeType": "YulBlock",
													"src": "1213:76:5",
													"statements": [
														{
															"nativeSrc": "1223:26:5",
															"nodeType": "YulAssignment",
															"src": "1223:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:5"
																},
																"nativeSrc": "1231:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:5"
																},
																"nativeSrc": "1258:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:5"
															},
															"nativeSrc": "1258:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:5",
														"nodeType": "YulTypedName",
														"src": "1182:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:5",
														"nodeType": "YulTypedName",
														"src": "1193:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:5",
														"nodeType": "YulTypedName",
														"src": "1204:4:5",
														"type": ""
													}
												],
												"src": "1112:177:5"
											},
											{
												"body": {
													"nativeSrc": "1398:270:5",
													"nodeType": "YulBlock",
													"src": "1398:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:5",
																"nodeType": "YulBlock",
																"src": "1444:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:5"
																			},
																			"nativeSrc": "1446:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:5"
																		},
																		"nativeSrc": "1446:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:5"
																		},
																		"nativeSrc": "1415:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:5"
																},
																"nativeSrc": "1411:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:5"
															},
															"nativeSrc": "1408:52:5",
															"nodeType": "YulIf",
															"src": "1408:52:5"
														},
														{
															"nativeSrc": "1469:39:5",
															"nodeType": "YulAssignment",
															"src": "1469:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:5"
																},
																"nativeSrc": "1479:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:5"
																}
															]
														},
														{
															"nativeSrc": "1517:48:5",
															"nodeType": "YulAssignment",
															"src": "1517:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:5"
																		},
																		"nativeSrc": "1546:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:5"
																},
																"nativeSrc": "1527:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:5"
																}
															]
														},
														{
															"nativeSrc": "1574:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:5",
																"nodeType": "YulLiteral",
																"src": "1587:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:5",
															"nodeType": "YulAssignment",
															"src": "1597:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:5"
																		},
																		"nativeSrc": "1619:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:5"
																},
																"nativeSrc": "1606:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:5"
																}
															]
														},
														{
															"nativeSrc": "1647:15:5",
															"nodeType": "YulAssignment",
															"src": "1647:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:5",
																"nodeType": "YulIdentifier",
																"src": "1657:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:5",
														"nodeType": "YulTypedName",
														"src": "1348:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:5",
														"nodeType": "YulTypedName",
														"src": "1359:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:5",
														"nodeType": "YulTypedName",
														"src": "1371:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:5",
														"nodeType": "YulTypedName",
														"src": "1379:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:5",
														"nodeType": "YulTypedName",
														"src": "1387:6:5",
														"type": ""
													}
												],
												"src": "1294:374:5"
											},
											{
												"body": {
													"nativeSrc": "1770:87:5",
													"nodeType": "YulBlock",
													"src": "1770:87:5",
													"statements": [
														{
															"nativeSrc": "1780:26:5",
															"nodeType": "YulAssignment",
															"src": "1780:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:5"
																},
																"nativeSrc": "1788:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:5"
																		},
																		"nativeSrc": "1833:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:5"
																},
																"nativeSrc": "1815:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:5"
															},
															"nativeSrc": "1815:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:5",
														"nodeType": "YulTypedName",
														"src": "1739:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:5",
														"nodeType": "YulTypedName",
														"src": "1750:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:5",
														"nodeType": "YulTypedName",
														"src": "1761:4:5",
														"type": ""
													}
												],
												"src": "1673:184:5"
											},
											{
												"body": {
													"nativeSrc": "1932:116:5",
													"nodeType": "YulBlock",
													"src": "1932:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:5",
																"nodeType": "YulBlock",
																"src": "1978:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:5"
																			},
																			"nativeSrc": "1980:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:5"
																		},
																		"nativeSrc": "1980:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:5"
																		},
																		"nativeSrc": "1949:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:5"
																},
																"nativeSrc": "1945:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:5"
															},
															"nativeSrc": "1942:52:5",
															"nodeType": "YulIf",
															"src": "1942:52:5"
														},
														{
															"nativeSrc": "2003:39:5",
															"nodeType": "YulAssignment",
															"src": "2003:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:5"
																},
																"nativeSrc": "2013:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:5",
														"nodeType": "YulTypedName",
														"src": "1898:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:5",
														"nodeType": "YulTypedName",
														"src": "1909:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:5",
														"nodeType": "YulTypedName",
														"src": "1921:6:5",
														"type": ""
													}
												],
												"src": "1862:186:5"
											},
											{
												"body": {
													"nativeSrc": "2140:173:5",
													"nodeType": "YulBlock",
													"src": "2140:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:5",
																"nodeType": "YulBlock",
																"src": "2186:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:5"
																			},
																			"nativeSrc": "2188:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:5"
																		},
																		"nativeSrc": "2188:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:5"
																		},
																		"nativeSrc": "2157:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:5"
																},
																"nativeSrc": "2153:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:5"
															},
															"nativeSrc": "2150:52:5",
															"nodeType": "YulIf",
															"src": "2150:52:5"
														},
														{
															"nativeSrc": "2211:39:5",
															"nodeType": "YulAssignment",
															"src": "2211:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:5"
																},
																"nativeSrc": "2221:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:5"
																}
															]
														},
														{
															"nativeSrc": "2259:48:5",
															"nodeType": "YulAssignment",
															"src": "2259:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:5"
																		},
																		"nativeSrc": "2288:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:5"
																},
																"nativeSrc": "2269:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:5",
														"nodeType": "YulTypedName",
														"src": "2098:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:5",
														"nodeType": "YulTypedName",
														"src": "2109:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:5",
														"nodeType": "YulTypedName",
														"src": "2121:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:5",
														"nodeType": "YulTypedName",
														"src": "2129:6:5",
														"type": ""
													}
												],
												"src": "2053:260:5"
											},
											{
												"body": {
													"nativeSrc": "2373:325:5",
													"nodeType": "YulBlock",
													"src": "2373:325:5",
													"statements": [
														{
															"nativeSrc": "2383:22:5",
															"nodeType": "YulAssignment",
															"src": "2383:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:5"
																},
																"nativeSrc": "2393:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:5"
																}
															]
														},
														{
															"nativeSrc": "2414:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:5"
																},
																"nativeSrc": "2440:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:5",
																"nodeType": "YulBlock",
																"src": "2491:31:5",
																"statements": [
																	{
																		"nativeSrc": "2493:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:5"
																			},
																			"nativeSrc": "2503:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:5"
																},
																"nativeSrc": "2464:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:5"
															},
															"nativeSrc": "2461:61:5",
															"nodeType": "YulIf",
															"src": "2461:61:5"
														},
														{
															"body": {
																"nativeSrc": "2581:111:5",
																"nodeType": "YulBlock",
																"src": "2581:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:5"
																					},
																					"nativeSrc": "2605:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:5"
																			},
																			"nativeSrc": "2595:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:5"
																		},
																		"nativeSrc": "2595:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:5"
																			},
																			"nativeSrc": "2639:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:5"
																		},
																		"nativeSrc": "2639:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:5"
																			},
																			"nativeSrc": "2667:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:5"
																		},
																		"nativeSrc": "2667:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:5"
																		},
																		"nativeSrc": "2557:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:5"
																},
																"nativeSrc": "2534:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:5"
															},
															"nativeSrc": "2531:161:5",
															"nodeType": "YulIf",
															"src": "2531:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:5",
														"nodeType": "YulTypedName",
														"src": "2353:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:5",
														"nodeType": "YulTypedName",
														"src": "2362:6:5",
														"type": ""
													}
												],
												"src": "2318:380:5"
											},
											{
												"body": {
													"nativeSrc": "2751:174:5",
													"nodeType": "YulBlock",
													"src": "2751:174:5",
													"statements": [
														{
															"nativeSrc": "2761:16:5",
															"nodeType": "YulAssignment",
															"src": "2761:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:5"
																},
																"nativeSrc": "2768:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:5",
																"nodeType": "YulBlock",
																"src": "2808:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:5"
																					},
																					"nativeSrc": "2832:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:5"
																			},
																			"nativeSrc": "2822:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:5"
																		},
																		"nativeSrc": "2822:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:5"
																			},
																			"nativeSrc": "2866:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:5"
																		},
																		"nativeSrc": "2866:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:5"
																			},
																			"nativeSrc": "2894:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:5"
																		},
																		"nativeSrc": "2894:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:5"
																},
																"nativeSrc": "2789:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:5"
															},
															"nativeSrc": "2786:133:5",
															"nodeType": "YulIf",
															"src": "2786:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:5",
														"nodeType": "YulTypedName",
														"src": "2734:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:5",
														"nodeType": "YulTypedName",
														"src": "2737:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:5",
														"nodeType": "YulTypedName",
														"src": "2743:3:5",
														"type": ""
													}
												],
												"src": "2703:222:5"
											},
											{
												"body": {
													"nativeSrc": "3104:227:5",
													"nodeType": "YulBlock",
													"src": "3104:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:5"
																},
																"nativeSrc": "3114:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:5"
															},
															"nativeSrc": "3114:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:5"
																		},
																		"nativeSrc": "3151:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:5"
																},
																"nativeSrc": "3144:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:5"
															},
															"nativeSrc": "3144:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:5"
																		},
																		"nativeSrc": "3190:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:5"
																},
																"nativeSrc": "3183:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:5"
															},
															"nativeSrc": "3183:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:5"
																		},
																		"nativeSrc": "3261:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:5"
																},
																"nativeSrc": "3254:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:5"
															},
															"nativeSrc": "3254:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:5"
														},
														{
															"nativeSrc": "3298:27:5",
															"nodeType": "YulAssignment",
															"src": "3298:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:5"
																},
																"nativeSrc": "3306:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:5",
														"nodeType": "YulTypedName",
														"src": "3081:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:5",
														"nodeType": "YulTypedName",
														"src": "3095:4:5",
														"type": ""
													}
												],
												"src": "2930:401:5"
											},
											{
												"body": {
													"nativeSrc": "3510:226:5",
													"nodeType": "YulBlock",
													"src": "3510:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:5"
																},
																"nativeSrc": "3520:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:5"
															},
															"nativeSrc": "3520:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:5"
																		},
																		"nativeSrc": "3557:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:5"
																},
																"nativeSrc": "3550:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:5"
															},
															"nativeSrc": "3550:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:5"
																		},
																		"nativeSrc": "3596:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:5"
																},
																"nativeSrc": "3589:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:5"
															},
															"nativeSrc": "3589:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:5"
																		},
																		"nativeSrc": "3667:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:5"
																},
																"nativeSrc": "3660:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:5"
															},
															"nativeSrc": "3660:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:5"
														},
														{
															"nativeSrc": "3703:27:5",
															"nodeType": "YulAssignment",
															"src": "3703:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:5"
																},
																"nativeSrc": "3711:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:5",
														"nodeType": "YulTypedName",
														"src": "3487:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:5",
														"nodeType": "YulTypedName",
														"src": "3501:4:5",
														"type": ""
													}
												],
												"src": "3336:400:5"
											},
											{
												"body": {
													"nativeSrc": "3915:224:5",
													"nodeType": "YulBlock",
													"src": "3915:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:5"
																},
																"nativeSrc": "3925:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:5"
															},
															"nativeSrc": "3925:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:5"
																		},
																		"nativeSrc": "3962:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:5"
																},
																"nativeSrc": "3955:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:5"
															},
															"nativeSrc": "3955:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:5"
																		},
																		"nativeSrc": "4001:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:5"
																},
																"nativeSrc": "3994:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:5"
															},
															"nativeSrc": "3994:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:5"
																		},
																		"nativeSrc": "4072:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:5"
																},
																"nativeSrc": "4065:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:5"
															},
															"nativeSrc": "4065:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:5"
														},
														{
															"nativeSrc": "4106:27:5",
															"nodeType": "YulAssignment",
															"src": "4106:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:5"
																},
																"nativeSrc": "4114:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:5",
														"nodeType": "YulTypedName",
														"src": "3892:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:5",
														"nodeType": "YulTypedName",
														"src": "3906:4:5",
														"type": ""
													}
												],
												"src": "3741:398:5"
											},
											{
												"body": {
													"nativeSrc": "4318:179:5",
													"nodeType": "YulBlock",
													"src": "4318:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:5"
																},
																"nativeSrc": "4328:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:5"
															},
															"nativeSrc": "4328:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:5"
																		},
																		"nativeSrc": "4365:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:5"
																},
																"nativeSrc": "4358:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:5"
															},
															"nativeSrc": "4358:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:5"
																		},
																		"nativeSrc": "4404:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:5"
																},
																"nativeSrc": "4397:59:5",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:5"
															},
															"nativeSrc": "4397:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:5"
														},
														{
															"nativeSrc": "4465:26:5",
															"nodeType": "YulAssignment",
															"src": "4465:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:5"
																},
																"nativeSrc": "4473:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:5",
														"nodeType": "YulTypedName",
														"src": "4295:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:5",
														"nodeType": "YulTypedName",
														"src": "4309:4:5",
														"type": ""
													}
												],
												"src": "4144:353:5"
											},
											{
												"body": {
													"nativeSrc": "4676:227:5",
													"nodeType": "YulBlock",
													"src": "4676:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:5"
																},
																"nativeSrc": "4686:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:5"
															},
															"nativeSrc": "4686:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:5"
																		},
																		"nativeSrc": "4723:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:5"
																},
																"nativeSrc": "4716:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:5"
															},
															"nativeSrc": "4716:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:5"
																		},
																		"nativeSrc": "4762:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:5"
																},
																"nativeSrc": "4755:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:5"
															},
															"nativeSrc": "4755:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:5"
																		},
																		"nativeSrc": "4833:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:5",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:5"
																},
																"nativeSrc": "4826:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:5"
															},
															"nativeSrc": "4826:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:5"
														},
														{
															"nativeSrc": "4870:27:5",
															"nodeType": "YulAssignment",
															"src": "4870:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:5"
																},
																"nativeSrc": "4878:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:5",
														"nodeType": "YulTypedName",
														"src": "4653:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:5",
														"nodeType": "YulTypedName",
														"src": "4667:4:5",
														"type": ""
													}
												],
												"src": "4502:401:5"
											},
											{
												"body": {
													"nativeSrc": "5082:225:5",
													"nodeType": "YulBlock",
													"src": "5082:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:5"
																},
																"nativeSrc": "5092:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:5"
															},
															"nativeSrc": "5092:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:5"
																		},
																		"nativeSrc": "5129:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:5"
																},
																"nativeSrc": "5122:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:5"
															},
															"nativeSrc": "5122:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:5"
																		},
																		"nativeSrc": "5168:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:5"
																},
																"nativeSrc": "5161:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:5"
															},
															"nativeSrc": "5161:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:5"
																		},
																		"nativeSrc": "5239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:5"
																},
																"nativeSrc": "5232:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:5"
															},
															"nativeSrc": "5232:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:5"
														},
														{
															"nativeSrc": "5274:27:5",
															"nodeType": "YulAssignment",
															"src": "5274:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:5"
																},
																"nativeSrc": "5282:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:5",
														"nodeType": "YulTypedName",
														"src": "5059:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:5",
														"nodeType": "YulTypedName",
														"src": "5073:4:5",
														"type": ""
													}
												],
												"src": "4908:399:5"
											},
											{
												"body": {
													"nativeSrc": "5486:228:5",
													"nodeType": "YulBlock",
													"src": "5486:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:5"
																},
																"nativeSrc": "5496:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:5"
															},
															"nativeSrc": "5496:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:5"
																		},
																		"nativeSrc": "5533:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:5"
																},
																"nativeSrc": "5526:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:5"
															},
															"nativeSrc": "5526:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:5"
																		},
																		"nativeSrc": "5572:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:5"
																},
																"nativeSrc": "5565:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:5"
															},
															"nativeSrc": "5565:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:5"
																		},
																		"nativeSrc": "5643:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:5"
																},
																"nativeSrc": "5636:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:5"
															},
															"nativeSrc": "5636:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:5"
														},
														{
															"nativeSrc": "5681:27:5",
															"nodeType": "YulAssignment",
															"src": "5681:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:5"
																},
																"nativeSrc": "5689:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:5",
														"nodeType": "YulTypedName",
														"src": "5463:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:5",
														"nodeType": "YulTypedName",
														"src": "5477:4:5",
														"type": ""
													}
												],
												"src": "5312:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d6366004610704565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461072c565b610244565b604051601281526020016100bf565b6100db61012d366004610704565b610267565b6100ef610140366004610766565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db610170366004610704565b610297565b6100db610183366004610704565b610316565b6100ef610196366004610786565b610323565b6060600380546101aa906107b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107b7565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107ef565b61034d565b6060600480546101aa906107b7565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b9084906107ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106ff575f5ffd5b919050565b5f5f60408385031215610715575f5ffd5b61071e836106e9565b946020939093013593505050565b5f5f5f6060848603121561073e575f5ffd5b610747846106e9565b9250610755602085016106e9565b929592945050506040919091013590565b5f60208284031215610776575f5ffd5b61077f826106e9565b9392505050565b5f5f60408385031215610797575f5ffd5b6107a0836106e9565b91506107ae602084016106e9565b90509250929050565b600181811c908216806107cb57607f821691505b6020821081036107e957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212201f883e2dcbe0fd805c18f22cd40c6303d97abc0a9c1fd2813fa9c78ab84b0fc664736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x7EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x747 DUP5 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x755 PUSH1 0x20 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77F DUP3 PUSH2 0x6E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x797 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7A0 DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7AE PUSH1 0x20 DUP5 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F DUP9 RETURNDATACOPY 0x2D 0xCB RJUMP 0xFD80 TLOAD XOR CALLCODE 0x2C 0xD4 0xC PUSH4 0x3D97ABC EXP SWAP13 0x1F 0xD2 DUP2 EXTCODEHASH 0xA9 0xC7 DUP11 0xB8 0x4B 0xF 0xC6 PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "2676:11214:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:5;;1078:22;1060:41;;1048:2;1033:18;5706:197:0;920:187:5;4517:106:0;4604:12;;4517:106;;;1258:25:5;;;1246:2;1231:18;4517:106:0;1112:177:5;6465:286:0;;;;;;:::i;:::-;;:::i;4366:91::-;;;4448:2;1815:36:5;;1803:2;1788:18;4366:91:0;1673:184:5;7146:234:0;;;;;;:::i;:::-;;:::i;4681:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4781:18:0;4755:7;4781:18;;;;;;;;;;;;4681:125;3640:102;;;:::i;7867:427::-;;;;;;:::i;:::-;;:::i;5002:189::-;;;;;;:::i;:::-;;:::i;5249:149::-;;;;;;:::i;:::-;;:::i;3429:98::-;3483:13;3515:5;3508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;:::o;5706:197::-;5789:4;1992:10:3;5843:32:0;1992:10:3;5859:7:0;5868:6;5843:8;:32::i;:::-;5892:4;5885:11;;;5706:197;;;;;:::o;6465:286::-;6592:4;1992:10:3;6648:38:0;6664:4;1992:10:3;6679:6:0;6648:15;:38::i;:::-;6696:27;6706:4;6712:2;6716:6;6696:9;:27::i;:::-;-1:-1:-1;6740:4:0;;6465:286;-1:-1:-1;;;;6465:286:0:o;7146:234::-;7234:4;1992:10:3;7288:64:0;1992:10:3;7304:7:0;7341:10;7313:25;1992:10:3;7304:7:0;7313:9;:25::i;:::-;:38;;;;:::i;:::-;7288:8;:64::i;3640:102::-;3696:13;3728:7;3721:14;;;;;:::i;7867:427::-;7960:4;1992:10:3;7960:4:0;8041:25;1992:10:3;8058:7:0;8041:9;:25::i;:::-;8014:52;;8104:15;8084:16;:35;;8076:85;;;;-1:-1:-1;;;8076:85:0;;3132:2:5;8076:85:0;;;3114:21:5;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:5;;;3254:35;3306:19;;8076:85:0;;;;;;;;;8195:60;8204:5;8211:7;8239:15;8220:16;:34;8195:8;:60::i;5002:189::-;5081:4;1992:10:3;5135:28:0;1992:10:3;5152:2:0;5156:6;5135:9;:28::i;5249:149::-;-1:-1:-1;;;;;5364:18:0;;;5338:7;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5249:149::o;11383:370::-;-1:-1:-1;;;;;11514:19:0;;11506:68;;;;-1:-1:-1;;;11506:68:0;;3538:2:5;11506:68:0;;;3520:21:5;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:5;;;3660:34;3711:19;;11506:68:0;3336:400:5;11506:68:0;-1:-1:-1;;;;;11592:21:0;;11584:68;;;;-1:-1:-1;;;11584:68:0;;3943:2:5;11584:68:0;;;3925:21:5;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:5;;;4065:32;4114:19;;11584:68:0;3741:398:5;11584:68:0;-1:-1:-1;;;;;11663:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11714:32;;1258:25:5;;;11714:32:0;;1231:18:5;11714:32:0;;;;;;;11383:370;;;:::o;12034:441::-;12164:24;12191:25;12201:5;12208:7;12191:9;:25::i;:::-;12164:52;;-1:-1:-1;;12230:16:0;:37;12226:243;;12311:6;12291:16;:26;;12283:68;;;;-1:-1:-1;;;12283:68:0;;4346:2:5;12283:68:0;;;4328:21:5;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;12283:68:0;4144:353:5;12283:68:0;12393:51;12402:5;12409:7;12437:6;12418:16;:25;12393:8;:51::i;:::-;12154:321;12034:441;;;:::o;8748:651::-;-1:-1:-1;;;;;8874:18:0;;8866:68;;;;-1:-1:-1;;;8866:68:0;;4704:2:5;8866:68:0;;;4686:21:5;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:5;;;4826:35;4878:19;;8866:68:0;4502:401:5;8866:68:0;-1:-1:-1;;;;;8952:16:0;;8944:64;;;;-1:-1:-1;;;8944:64:0;;5110:2:5;8944:64:0;;;5092:21:5;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:5;;;5232:33;5282:19;;8944:64:0;4908:399:5;8944:64:0;-1:-1:-1;;;;;9090:15:0;;9068:19;9090:15;;;;;;;;;;;9123:21;;;;9115:72;;;;-1:-1:-1;;;9115:72:0;;5514:2:5;9115:72:0;;;5496:21:5;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:5;;;5636:36;5689:19;;9115:72:0;5312:402:5;9115:72:0;-1:-1:-1;;;;;9221:15:0;;;:9;:15;;;;;;;;;;;9239:20;;;9221:38;;9279:13;;;;;;;;:23;;9253:6;;9221:9;9279:23;;9253:6;;9279:23;:::i;:::-;;;;;;;;9333:2;-1:-1:-1;;;;;9318:26:0;9327:4;-1:-1:-1;;;;;9318:26:0;;9337:6;9318:26;;;;1258:25:5;;1246:2;1231:18;;1112:177;9318:26:0;;;;;;;;9355:37;13059:121;14:418:5;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:5;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:5:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:5;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:5:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24623",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27010",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,uint256)": "infinite",
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_spendAllowance(address,address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3251,
									"end": 3364,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3325,
									"end": 3330,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3317,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3350,
									"end": 3357,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3340,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "21"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "23"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 5
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 973,
									"end": 979,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 981,
									"end": 987,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1034,
									"end": 1036,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1022,
									"end": 1031,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1013,
									"end": 1020,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1009,
									"end": 1032,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1005,
									"end": 1037,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "tag",
									"source": 5,
									"value": "26"
								},
								{
									"begin": 1002,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1077,
									"end": 1093,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1105,
									"end": 1135,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1145,
									"end": 1146,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1138,
									"end": 1150,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "tag",
									"source": 5,
									"value": "27"
								},
								{
									"begin": 1102,
									"end": 1152,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1224,
									"end": 1231,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1215,
									"end": 1221,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1204,
									"end": 1213,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1200,
									"end": 1222,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1171,
									"end": 1232,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 1171,
									"end": 1232,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1278,
									"end": 1280,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1263,
									"end": 1281,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1161,
									"end": 1232,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1257,
									"end": 1282,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1294,
									"end": 1326,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1336,
									"end": 1337,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1329,
									"end": 1341,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1291,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1417,
									"end": 1424,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 1406,
									"end": 1414,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1395,
									"end": 1404,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1391,
									"end": 1415,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 1362,
									"end": 1425,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1362,
									"end": 1425,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1352,
									"end": 1425,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1431,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1515,
									"end": 1516,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1511,
									"end": 1523,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1558,
									"end": 1570,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1633,
									"end": 1637,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1625,
									"end": 1631,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1621,
									"end": 1638,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1611,
									"end": 1638,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1579,
									"end": 1640,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1686,
									"end": 1688,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1678,
									"end": 1684,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1675,
									"end": 1689,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1655,
									"end": 1673,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1652,
									"end": 1690,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1732,
									"end": 1742,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1727,
									"end": 1730,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1723,
									"end": 1743,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1720,
									"end": 1721,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1713,
									"end": 1744,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1767,
									"end": 1771,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1764,
									"end": 1765,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1757,
									"end": 1772,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1795,
									"end": 1799,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1792,
									"end": 1793,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1785,
									"end": 1800,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "tag",
									"source": 5,
									"value": "33"
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1649,
									"end": 1810,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1816,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1436,
									"end": 1816,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "tag",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2049,
									"end": 2051,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2044,
									"end": 2047,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2041,
									"end": 2052,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2085,
									"end": 2090,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2082,
									"end": 2083,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2075,
									"end": 2091,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2129,
									"end": 2133,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2126,
									"end": 2127,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2116,
									"end": 2134,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2199,
									"end": 2201,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2187,
									"end": 2197,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2183,
									"end": 2202,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2180,
									"end": 2181,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2176,
									"end": 2203,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2170,
									"end": 2174,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2166,
									"end": 2204,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2235,
									"end": 2239,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2223,
									"end": 2233,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2220,
									"end": 2240,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2258,
									"end": 2262,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 2217,
									"end": 2264,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2313,
									"end": 2315,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2308,
									"end": 2311,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2304,
									"end": 2316,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2301,
									"end": 2302,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2297,
									"end": 2317,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2291,
									"end": 2295,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2287,
									"end": 2318,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2277,
									"end": 2318,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2386,
									"end": 2388,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2379,
									"end": 2384,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2376,
									"end": 2389,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2445,
									"end": 2446,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2431,
									"end": 2447,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2401,
									"end": 2414,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "38"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "tag",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 2368,
									"end": 2449,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2372,
									"end": 2375,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "tag",
									"source": 5,
									"value": "36"
								},
								{
									"begin": 2038,
									"end": 2459,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2465,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1947,
									"end": 2465,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2761,
									"end": 2771,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2783,
									"end": 2813,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2780,
									"end": 2836,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 2816,
									"end": 2834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 2816,
									"end": 2834,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 2935,
									"end": 2941,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2927,
									"end": 2931,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2921,
									"end": 2932,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 2895,
									"end": 2933,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 2895,
									"end": 2933,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2889,
									"end": 2893,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "14"
								},
								{
									"begin": 2845,
									"end": 2942,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 2845,
									"end": 2942,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2991,
									"end": 2995,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3022,
									"end": 3024,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3011,
									"end": 3025,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3039,
									"end": 3040,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3727,
									"end": 3728,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3744,
									"end": 3750,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3796,
									"end": 3815,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3790,
									"end": 3816,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "tag",
									"source": 5,
									"value": "49"
								},
								{
									"begin": 3741,
									"end": 3830,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2598,
									"end": 2599,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2594,
									"end": 2605,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2590,
									"end": 2614,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2586,
									"end": 2615,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2576,
									"end": 2616,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2622,
									"end": 2623,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2618,
									"end": 2629,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2573,
									"end": 2630,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3843,
									"end": 3924,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 3004,
									"end": 3934,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 3034,
									"end": 3683,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1894,
									"end": 1895,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1887,
									"end": 1901,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1931,
									"end": 1935,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1918,
									"end": 1936,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3070,
									"end": 3090,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3202,
									"end": 3209,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3199,
									"end": 3200,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3196,
									"end": 3210,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3284,
									"end": 3303,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3278,
									"end": 3304,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3263,
									"end": 3305,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3391,
									"end": 3395,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3376,
									"end": 3396,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3344,
									"end": 3345,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3332,
									"end": 3346,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3218,
									"end": 3230,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "52"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "tag",
									"source": 5,
									"value": "54"
								},
								{
									"begin": 3188,
									"end": 3410,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3192,
									"end": 3195,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3438,
									"end": 3444,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3429,
									"end": 3436,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3426,
									"end": 3445,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3499,
									"end": 3518,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3493,
									"end": 3519,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3582,
									"end": 3583,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3578,
									"end": 3592,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3594,
									"end": 3597,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3574,
									"end": 3598,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3570,
									"end": 3607,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3566,
									"end": 3608,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3551,
									"end": 3609,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3536,
									"end": 3610,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 3423,
									"end": 3624,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3670,
									"end": 3671,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3654,
									"end": 3668,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3650,
									"end": 3672,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3637,
									"end": 3673,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2641,
									"end": 3940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 2641,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2676,
									"end": 13890,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212201f883e2dcbe0fd805c18f22cd40c6303d97abc0a9c1fd2813fa9c78ab84b0fc664736f6c634300081d0033",
									".code": [
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2676,
											"end": 13890,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5843,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6648,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6696,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7313,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7313,
											"end": 7351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7288,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8041,
											"end": 8066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8254,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8195,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5135,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12201,
											"end": 12206,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12208,
											"end": 12215,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 12191,
											"end": 12216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12418,
											"end": 12434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12393,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9279,
											"end": 9302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9337,
											"end": 9343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9355,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13059,
											"end": 13180,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"simple-token/@openzeppelin/contracts/utils/Context.sol",
								"simple-token/simple-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd313527bf68e0ee9c175a30d7e8cd5fd7def33e6e8e496468f9df112c2c76514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c341254272e3693e1c255983dede9908224d58b42b573ffdf3a6bcd646553bec\",\"dweb:/ipfs/QmbE7JTjZCvazLeVYJPjY2FKs6b27YGMkYKaSTsNBPbdBk\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]},\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"simple-token/simple-token.sol": {
				"FixedToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "totalSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"custom:address": "4",
						"custom:default-precision": "18",
						"custom:simple-description": "Simple Token. A fixed supply is minted on deployment, and new tokens can never be created.",
						"custom:version": "1.0.7",
						"details": "ERC20 token with the following features:  - Premint your total supply.  - No minting function. This allows users to comfortably know the future supply of the token.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"params": {
									"name": "Token Name",
									"symbol": "Token Symbol",
									"totalSupply": "Token Supply"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
							}
						},
						"title": "Simple Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"simple-token/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"simple-token/simple-token.sol\":2054:2234  constructor(... */\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_1\n  swap2\n  tag_2\n  jump\t// in\ntag_1:\n    /* \"simple-token/simple-token.sol\":2173:2177  name */\n  dup3\n    /* \"simple-token/simple-token.sol\":2179:2185  symbol */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  0x03\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_6\n    /* \"simple-token/simple-token.sol\":2173:2177  name */\n  dup4\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3322  _name */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3317:3330  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  0x04\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_8\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3350:3357  symbol_ */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3347  _symbol */\n  dup3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3340:3357  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3251:3364  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"simple-token/simple-token.sol\":2197:2227  _mint(msg.sender, totalSupply) */\n  tag_10\n    /* \"simple-token/simple-token.sol\":2203:2213  msg.sender */\n  caller\n    /* \"simple-token/simple-token.sol\":2215:2226  totalSupply */\n  dup3\n    /* \"simple-token/simple-token.sol\":2197:2202  _mint */\n  shl(0x20, tag_11)\n    /* \"simple-token/simple-token.sol\":2197:2227  _mint(msg.sender, totalSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"simple-token/simple-token.sol\":2054:2234  constructor(... */\n  pop\n  pop\n  pop\n    /* \"simple-token/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  jump(tag_34)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9675:10064  function _mint(address account, uint256 amount) internal virtual {... */\ntag_11:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9758:9779  account != address(0) */\n  dup3\n  and\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  tag_14\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":4208:4210   */\n  0x20\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":4190:4211   */\n  mstore\n    /* \"#utility.yul\":4247:4249   */\n  0x1f\n    /* \"#utility.yul\":4227:4245   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":4220:4250   */\n  mstore\n    /* \"#utility.yul\":4286:4319   */\n  0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n    /* \"#utility.yul\":4266:4284   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":4259:4320   */\n  mstore\n    /* \"#utility.yul\":4337:4355   */\n  0x64\n  add\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9750:9815  require(account != address(0), \"ERC20: mint to the zero address\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_14:\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9902:9908  amount */\n  dup1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9886:9898  _totalSupply */\n  0x02\n  0x00\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9886:9908  _totalSupply += amount */\n  dup3\n  dup3\n  sload\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9936  _balances[account] */\n  dup3\n  and\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9927  _balances */\n  0x00\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9936  _balances[account] */\n  swap1\n  dup2\n  mstore\n  0x20\n  dup2\n  swap1\n  mstore\n  0x40\n  dup2\n  keccak256\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  dup1\n  sload\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9946  amount */\n  dup4\n  swap3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9927  _balances */\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  tag_21\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9940:9946  amount */\n  dup5\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9918:9946  _balances[account] += amount */\n  tag_20\n  jump\t// in\ntag_21:\n  swap1\n  swap2\n  sstore\n  pop\n  pop\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  mload(0x40)\n    /* \"#utility.yul\":4739:4764   */\n  dup2\n  dup2\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  dup4\n  and\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9978:9979  0 */\n  0x00\n  swap1\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n  swap1\n    /* \"#utility.yul\":4727:4729   */\n  0x20\n    /* \"#utility.yul\":4712:4730   */\n  add\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9961:9998  Transfer(address(0), account, amount) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9675:10064  function _mint(address account, uint256 amount) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\ntag_18:\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_28:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:869   */\ntag_29:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_37\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  0x00\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_37:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_39\n  tag_28\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_41\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_41\n  tag_28\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  0x00\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_42:\n    /* \"#utility.yul\":782:788   */\n  dup2\n    /* \"#utility.yul\":775:779   */\n  0x20\n    /* \"#utility.yul\":767:773   */\n  dup6\n    /* \"#utility.yul\":763:780   */\n  add\n    /* \"#utility.yul\":756:760   */\n  0x20\n    /* \"#utility.yul\":748:754   */\n  dup4\n    /* \"#utility.yul\":744:761   */\n  add\n    /* \"#utility.yul\":738:789   */\n  mcopy\n    /* \"#utility.yul\":837:838   */\n  0x00\n    /* \"#utility.yul\":809:828   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":830:834   */\n  0x20\n    /* \"#utility.yul\":805:835   */\n  add\n    /* \"#utility.yul\":798:839   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":813:819   */\n  swap4\n    /* \"#utility.yul\":146:869   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":874:1492   */\ntag_2:\n    /* \"#utility.yul\":982:988   */\n  0x00\n    /* \"#utility.yul\":990:996   */\n  0x00\n    /* \"#utility.yul\":998:1004   */\n  0x00\n    /* \"#utility.yul\":1051:1053   */\n  0x60\n    /* \"#utility.yul\":1039:1048   */\n  dup5\n    /* \"#utility.yul\":1030:1037   */\n  dup7\n    /* \"#utility.yul\":1026:1049   */\n  sub\n    /* \"#utility.yul\":1022:1054   */\n  slt\n    /* \"#utility.yul\":1019:1071   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":1067:1068   */\n  0x00\n    /* \"#utility.yul\":1064:1065   */\n  0x00\n    /* \"#utility.yul\":1057:1069   */\n  revert\n    /* \"#utility.yul\":1019:1071   */\ntag_44:\n    /* \"#utility.yul\":1094:1110   */\n  dup4\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1122:1152   */\n  dup2\n  gt\n    /* \"#utility.yul\":1119:1169   */\n  iszero\n  tag_45\n  jumpi\n    /* \"#utility.yul\":1165:1166   */\n  0x00\n    /* \"#utility.yul\":1162:1163   */\n  0x00\n    /* \"#utility.yul\":1155:1167   */\n  revert\n    /* \"#utility.yul\":1119:1169   */\ntag_45:\n    /* \"#utility.yul\":1188:1249   */\n  tag_46\n    /* \"#utility.yul\":1241:1248   */\n  dup7\n    /* \"#utility.yul\":1232:1238   */\n  dup3\n    /* \"#utility.yul\":1221:1230   */\n  dup8\n    /* \"#utility.yul\":1217:1239   */\n  add\n    /* \"#utility.yul\":1188:1249   */\n  tag_29\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":1295:1297   */\n  0x20\n    /* \"#utility.yul\":1280:1298   */\n  dup7\n  add\n    /* \"#utility.yul\":1274:1299   */\n  mload\n    /* \"#utility.yul\":1178:1249   */\n  swap1\n  swap5\n  pop\n    /* \"#utility.yul\":1274:1299   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1311:1343   */\n  dup2\n  gt\n    /* \"#utility.yul\":1308:1360   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":1356:1357   */\n  0x00\n    /* \"#utility.yul\":1353:1354   */\n  0x00\n    /* \"#utility.yul\":1346:1358   */\n  revert\n    /* \"#utility.yul\":1308:1360   */\ntag_47:\n    /* \"#utility.yul\":1379:1442   */\n  tag_48\n    /* \"#utility.yul\":1434:1441   */\n  dup7\n    /* \"#utility.yul\":1423:1431   */\n  dup3\n    /* \"#utility.yul\":1412:1421   */\n  dup8\n    /* \"#utility.yul\":1408:1432   */\n  add\n    /* \"#utility.yul\":1379:1442   */\n  tag_29\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":1369:1442   */\n  swap3\n  pop\n  pop\n    /* \"#utility.yul\":1482:1484   */\n  0x40\n    /* \"#utility.yul\":1471:1480   */\n  dup5\n    /* \"#utility.yul\":1467:1485   */\n  add\n    /* \"#utility.yul\":1461:1486   */\n  mload\n    /* \"#utility.yul\":1451:1486   */\n  swap1\n  pop\n    /* \"#utility.yul\":874:1492   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1497:1877   */\ntag_30:\n    /* \"#utility.yul\":1576:1577   */\n  0x01\n    /* \"#utility.yul\":1572:1584   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1619:1631   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1640:1701   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":1694:1698   */\n  0x7f\n    /* \"#utility.yul\":1686:1692   */\n  dup3\n    /* \"#utility.yul\":1682:1699   */\n  and\n    /* \"#utility.yul\":1672:1699   */\n  swap2\n  pop\n    /* \"#utility.yul\":1640:1701   */\ntag_50:\n    /* \"#utility.yul\":1747:1749   */\n  0x20\n    /* \"#utility.yul\":1739:1745   */\n  dup3\n    /* \"#utility.yul\":1736:1750   */\n  lt\n    /* \"#utility.yul\":1716:1734   */\n  dup2\n    /* \"#utility.yul\":1713:1751   */\n  sub\n    /* \"#utility.yul\":1710:1871   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":1793:1803   */\n  0x4e487b71\n    /* \"#utility.yul\":1788:1791   */\n  0xe0\n    /* \"#utility.yul\":1784:1804   */\n  shl\n    /* \"#utility.yul\":1781:1782   */\n  0x00\n    /* \"#utility.yul\":1774:1805   */\n  mstore\n    /* \"#utility.yul\":1828:1832   */\n  0x22\n    /* \"#utility.yul\":1825:1826   */\n  0x04\n    /* \"#utility.yul\":1818:1833   */\n  mstore\n    /* \"#utility.yul\":1856:1860   */\n  0x24\n    /* \"#utility.yul\":1853:1854   */\n  0x00\n    /* \"#utility.yul\":1846:1861   */\n  revert\n    /* \"#utility.yul\":1710:1871   */\ntag_51:\n  pop\n    /* \"#utility.yul\":1497:1877   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2008:2526   */\ntag_32:\n    /* \"#utility.yul\":2110:2112   */\n  0x1f\n    /* \"#utility.yul\":2105:2108   */\n  dup3\n    /* \"#utility.yul\":2102:2113   */\n  gt\n    /* \"#utility.yul\":2099:2520   */\n  iszero\n  tag_18\n  jumpi\n    /* \"#utility.yul\":2146:2151   */\n  dup1\n    /* \"#utility.yul\":2143:2144   */\n  0x00\n    /* \"#utility.yul\":2136:2152   */\n  mstore\n    /* \"#utility.yul\":2190:2194   */\n  0x20\n    /* \"#utility.yul\":2187:2188   */\n  0x00\n    /* \"#utility.yul\":2177:2195   */\n  keccak256\n    /* \"#utility.yul\":2260:2262   */\n  0x1f\n    /* \"#utility.yul\":2248:2258   */\n  dup5\n    /* \"#utility.yul\":2244:2263   */\n  add\n    /* \"#utility.yul\":2241:2242   */\n  0x05\n    /* \"#utility.yul\":2237:2264   */\n  shr\n    /* \"#utility.yul\":2231:2235   */\n  dup2\n    /* \"#utility.yul\":2227:2265   */\n  add\n    /* \"#utility.yul\":2296:2300   */\n  0x20\n    /* \"#utility.yul\":2284:2294   */\n  dup6\n    /* \"#utility.yul\":2281:2301   */\n  lt\n    /* \"#utility.yul\":2278:2325   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":2319:2323   */\n  dup1\n    /* \"#utility.yul\":2278:2325   */\ntag_55:\n    /* \"#utility.yul\":2374:2376   */\n  0x1f\n    /* \"#utility.yul\":2369:2372   */\n  dup5\n    /* \"#utility.yul\":2365:2377   */\n  add\n    /* \"#utility.yul\":2362:2363   */\n  0x05\n    /* \"#utility.yul\":2358:2378   */\n  shr\n    /* \"#utility.yul\":2352:2356   */\n  dup3\n    /* \"#utility.yul\":2348:2379   */\n  add\n    /* \"#utility.yul\":2338:2379   */\n  swap2\n  pop\n    /* \"#utility.yul\":2429:2510   */\ntag_56:\n    /* \"#utility.yul\":2447:2449   */\n  dup2\n    /* \"#utility.yul\":2440:2445   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  lt\n    /* \"#utility.yul\":2429:2510   */\n  iszero\n  tag_58\n  jumpi\n    /* \"#utility.yul\":2506:2507   */\n  0x00\n    /* \"#utility.yul\":2492:2508   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2473:2474   */\n  0x01\n    /* \"#utility.yul\":2462:2475   */\n  add\n    /* \"#utility.yul\":2429:2510   */\n  jump(tag_56)\ntag_58:\n    /* \"#utility.yul\":2433:2436   */\n  pop\n  pop\n    /* \"#utility.yul\":2008:2526   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2702:4001   */\ntag_7:\n    /* \"#utility.yul\":2822:2832   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2844:2874   */\n  dup2\n  gt\n    /* \"#utility.yul\":2841:2897   */\n  iszero\n  tag_62\n  jumpi\n    /* \"#utility.yul\":2877:2895   */\n  tag_62\n  tag_28\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":2906:3003   */\n  tag_63\n    /* \"#utility.yul\":2996:3002   */\n  dup2\n    /* \"#utility.yul\":2956:2994   */\n  tag_64\n    /* \"#utility.yul\":2988:2992   */\n  dup5\n    /* \"#utility.yul\":2982:2993   */\n  sload\n    /* \"#utility.yul\":2956:2994   */\n  tag_30\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":2950:2954   */\n  dup5\n    /* \"#utility.yul\":2906:3003   */\n  tag_32\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":3052:3056   */\n  0x20\n    /* \"#utility.yul\":3083:3085   */\n  0x1f\n    /* \"#utility.yul\":3072:3086   */\n  dup3\n  gt\n    /* \"#utility.yul\":3100:3101   */\n  0x01\n    /* \"#utility.yul\":3095:3744   */\n  dup2\n  eq\n  tag_66\n  jumpi\n    /* \"#utility.yul\":3788:3789   */\n  0x00\n    /* \"#utility.yul\":3805:3811   */\n  dup4\n    /* \"#utility.yul\":3802:3891   */\n  iszero\n  tag_67\n  jumpi\n  pop\n    /* \"#utility.yul\":3857:3876   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3851:3877   */\n  mload\n    /* \"#utility.yul\":3802:3891   */\ntag_67:\n  not(0x00)\n    /* \"#utility.yul\":2659:2660   */\n  0x03\n    /* \"#utility.yul\":2655:2666   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2651:2675   */\n  shr\n    /* \"#utility.yul\":2647:2676   */\n  not\n    /* \"#utility.yul\":2637:2677   */\n  and\n    /* \"#utility.yul\":2683:2684   */\n  0x01\n    /* \"#utility.yul\":2679:2690   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2634:2691   */\n  or\n    /* \"#utility.yul\":3904:3985   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3065:3995   */\n  jump(tag_58)\n    /* \"#utility.yul\":3095:3744   */\ntag_66:\n    /* \"#utility.yul\":1955:1956   */\n  0x00\n    /* \"#utility.yul\":1948:1962   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":1992:1996   */\n  0x20\n    /* \"#utility.yul\":1979:1997   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3131:3151   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3249:3471   */\ntag_70:\n    /* \"#utility.yul\":3263:3270   */\n  dup3\n    /* \"#utility.yul\":3260:3261   */\n  dup2\n    /* \"#utility.yul\":3257:3271   */\n  lt\n    /* \"#utility.yul\":3249:3471   */\n  iszero\n  tag_72\n  jumpi\n    /* \"#utility.yul\":3345:3364   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3339:3365   */\n  mload\n    /* \"#utility.yul\":3324:3366   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3452:3456   */\n  0x20\n    /* \"#utility.yul\":3437:3457   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3405:3406   */\n  0x01\n    /* \"#utility.yul\":3393:3407   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3279:3291   */\n  add\n    /* \"#utility.yul\":3249:3471   */\n  jump(tag_70)\ntag_72:\n    /* \"#utility.yul\":3253:3256   */\n  pop\n    /* \"#utility.yul\":3499:3505   */\n  dup5\n    /* \"#utility.yul\":3490:3497   */\n  dup3\n    /* \"#utility.yul\":3487:3506   */\n  lt\n    /* \"#utility.yul\":3484:3685   */\n  iszero\n  tag_73\n  jumpi\n    /* \"#utility.yul\":3560:3579   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3554:3580   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3643:3644   */\n  0x03\n    /* \"#utility.yul\":3639:3653   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3655:3658   */\n  0xf8\n    /* \"#utility.yul\":3635:3659   */\n  and\n    /* \"#utility.yul\":3631:3668   */\n  shr\n    /* \"#utility.yul\":3627:3669   */\n  not\n    /* \"#utility.yul\":3612:3670   */\n  and\n    /* \"#utility.yul\":3597:3671   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3484:3685   */\ntag_73:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3731:3732   */\n  0x01\n    /* \"#utility.yul\":3715:3729   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3711:3733   */\n  add\n    /* \"#utility.yul\":3698:3734   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2702:4001   */\n  jump\t// out\n    /* \"#utility.yul\":4366:4588   */\ntag_20:\n    /* \"#utility.yul\":4431:4440   */\n  dup1\n  dup3\n  add\n    /* \"#utility.yul\":4452:4462   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":4449:4582   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":4504:4514   */\n  0x4e487b71\n    /* \"#utility.yul\":4499:4502   */\n  0xe0\n    /* \"#utility.yul\":4495:4515   */\n  shl\n    /* \"#utility.yul\":4492:4493   */\n  0x00\n    /* \"#utility.yul\":4485:4516   */\n  mstore\n    /* \"#utility.yul\":4539:4543   */\n  0x11\n    /* \"#utility.yul\":4536:4537   */\n  0x04\n    /* \"#utility.yul\":4529:4544   */\n  mstore\n    /* \"#utility.yul\":4567:4571   */\n  0x24\n    /* \"#utility.yul\":4564:4565   */\n  0x00\n    /* \"#utility.yul\":4557:4572   */\n  revert\n    /* \"#utility.yul\":4449:4582   */\ntag_76:\n    /* \"#utility.yul\":4366:4588   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4593:4770   */\ntag_34:\n    /* \"simple-token/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"simple-token/simple-token.sol\":1900:2236  contract FixedToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_19\n      tag_20\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_20:\n      tag_22\n      jump\t// in\n    tag_19:\n      mload(0x40)\n        /* \"#utility.yul\":1085:1099   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1078:1100   */\n      iszero\n        /* \"#utility.yul\":1060:1101   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1048:1050   */\n      0x20\n        /* \"#utility.yul\":1033:1051   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      tag_17\n        /* \"#utility.yul\":920:1107   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4604:4616  _totalSupply */\n      sload(0x02)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":1258:1283   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4517:4623  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_17\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_6:\n      tag_19\n      tag_30\n      calldatasize\n      0x04\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n    tag_7:\n      mload(0x40)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4448:4450  18 */\n      0x12\n        /* \"#utility.yul\":1815:1851   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1803:1805   */\n      0x20\n        /* \"#utility.yul\":1788:1806   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4457  function decimals() public view virtual override returns (uint8) {... */\n      tag_17\n        /* \"#utility.yul\":1673:1857   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_19\n      tag_39\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_25\n      tag_43\n      calldatasize\n      0x04\n      tag_44\n      jump\t// in\n    tag_43:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4755:4762  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4781:4799  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4681:4806  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_48\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_19\n      tag_51\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_19\n      tag_55\n      calldatasize\n      0x04\n      tag_21\n      jump\t// in\n    tag_55:\n      tag_56\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_25\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n    tag_16:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3483:3496  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3515:3520  _name */\n      0x03\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3508:3520  return _name */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_66\n      swap1\n      tag_65\n      jump\t// in\n    tag_66:\n      dup1\n      iszero\n      tag_67\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_68\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_67)\n    tag_68:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_69:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_69\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_67:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3429:3527  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_22:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5789:5793  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5859:5866  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5868:5874  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5851  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5843:5875  _approve(owner, spender, amount) */\n      jump\t// in\n    tag_73:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5892:5896  true */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5885:5896  return true */\n      swap2\n      pop\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5706:5903  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_70:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n    tag_32:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6592:6596  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      tag_78\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6664:6668  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6679:6685  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6663  _spendAllowance */\n      tag_79\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6648:6686  _spendAllowance(from, spender, amount) */\n      jump\t// in\n    tag_78:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6706:6710  from */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6712:6714  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6716:6722  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6705  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6696:6723  _transfer(from, to, amount) */\n      jump\t// in\n    tag_80:\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6740:6744  true */\n      0x01\n      swap5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6465:6751  function transferFrom(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7146:7380  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_40:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7234:7238  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7341:7351  addedValue */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      tag_86\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7304:7311  spender */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7322  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7338  allowance(owner, spender) */\n      jump\t// in\n    tag_86:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7313:7351  allowance(owner, spender) + addedValue */\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7296  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7288:7352  _approve(owner, spender, allowance(owner, spender) + addedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3640:3742  function symbol() public view virtual override returns (string memory) {... */\n    tag_48:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3696:3709  string memory */\n      0x60\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3728:3735  _symbol */\n      0x04\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3721:3735  return _symbol */\n      dup1\n      sload\n      tag_64\n      swap1\n      tag_65\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7867:8294  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_52:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7960:7964  bool */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      tag_98\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8058:8065  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8050  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8041:8066  allowance(owner, spender) */\n      jump\t// in\n    tag_98:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8014:8066  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8104:8119  subtractedValue */\n      dup4\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8100  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8084:8119  currentAllowance >= subtractedValue */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3132:3134   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3114:3135   */\n      mstore\n        /* \"#utility.yul\":3171:3173   */\n      0x25\n        /* \"#utility.yul\":3151:3169   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3144:3174   */\n      mstore\n        /* \"#utility.yul\":3210:3244   */\n      0x45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77\n        /* \"#utility.yul\":3190:3208   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3183:3245   */\n      mstore\n      shl(0xd8, 0x207a65726f)\n        /* \"#utility.yul\":3261:3279   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3254:3289   */\n      mstore\n        /* \"#utility.yul\":3306:3325   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8076:8161  require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\") */\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      tag_80\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8204:8209  owner */\n      dup3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8211:8218  spender */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8239:8254  subtractedValue */\n      dup7\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8236  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8220:8254  currentAllowance - subtractedValue */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8203  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8195:8255  _approve(owner, spender, currentAllowance - subtractedValue) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5191  function transfer(address to, uint256 amount) public virtual override returns (bool) {... */\n    tag_56:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5081:5085  bool */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      caller\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      tag_73\n        /* \"simple-token/@openzeppelin/contracts/utils/Context.sol\":1992:2002  msg.sender */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5152:5154  to */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5156:5162  amount */\n      dup6\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5144  _transfer */\n      tag_81\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5163  _transfer(owner, to, amount) */\n      jump\t// in\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5338:5345  uint256 */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5375  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5382  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5364:5391  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5398  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11514:11533  owner != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_109\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3538:3540   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3520:3541   */\n      mstore\n        /* \"#utility.yul\":3577:3579   */\n      0x24\n        /* \"#utility.yul\":3557:3575   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3550:3580   */\n      mstore\n        /* \"#utility.yul\":3616:3650   */\n      0x45524332303a20617070726f76652066726f6d20746865207a65726f20616464\n        /* \"#utility.yul\":3596:3614   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3589:3651   */\n      mstore\n      shl(0xe0, 0x72657373)\n        /* \"#utility.yul\":3667:3685   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":3660:3694   */\n      mstore\n        /* \"#utility.yul\":3711:3730   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3336:3736   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11506:11574  require(owner != address(0), \"ERC20: approve from the zero address\") */\n    tag_109:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11592:11613  spender != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_112\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3943:3945   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3925:3946   */\n      mstore\n        /* \"#utility.yul\":3982:3984   */\n      0x22\n        /* \"#utility.yul\":3962:3980   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3955:3985   */\n      mstore\n        /* \"#utility.yul\":4021:4055   */\n      0x45524332303a20617070726f766520746f20746865207a65726f206164647265\n        /* \"#utility.yul\":4001:4019   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3994:4056   */\n      mstore\n      shl(0xf0, 0x7373)\n        /* \"#utility.yul\":4072:4090   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4065:4097   */\n      mstore\n        /* \"#utility.yul\":4114:4133   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":3741:4139   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11584:11652  require(spender != address(0), \"ERC20: approve to the zero address\") */\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11674  _allowances */\n      0x01\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11681  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11690  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11663:11699  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      swap1\n      mload\n        /* \"#utility.yul\":1258:1283   */\n      dup5\n      dup2\n      mstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n        /* \"#utility.yul\":1231:1249   */\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11714:11746  Approval(owner, spender, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11383:11753  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n    tag_79:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12188  uint256 currentAllowance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      tag_117\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12201:12206  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12208:12215  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12200  allowance */\n      tag_61\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12191:12216  allowance(owner, spender) */\n      jump\t// in\n    tag_117:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12164:12216  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n      not(0x00)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12246  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12230:12267  currentAllowance != type(uint256).max */\n      eq\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12226:12469  if (currentAllowance != type(uint256).max) {... */\n      tag_122\n      jumpi\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12311:12317  amount */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12307  currentAllowance */\n      dup2\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12291:12317  currentAllowance >= amount */\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_119\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4346:4348   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4328:4349   */\n      mstore\n        /* \"#utility.yul\":4385:4387   */\n      0x1d\n        /* \"#utility.yul\":4365:4383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4358:4388   */\n      mstore\n        /* \"#utility.yul\":4424:4455   */\n      0x45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000\n        /* \"#utility.yul\":4404:4422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4397:4456   */\n      mstore\n        /* \"#utility.yul\":4473:4491   */\n      0x64\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n      tag_100\n        /* \"#utility.yul\":4144:4497   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12283:12351  require(currentAllowance >= amount, \"ERC20: insufficient allowance\") */\n    tag_119:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12402:12407  owner */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12409:12416  spender */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12437:12443  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12434  currentAllowance */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12418:12443  currentAllowance - amount */\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12401  _approve */\n      tag_74\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12393:12444  _approve(owner, spender, currentAllowance - amount) */\n      jump\t// in\n    tag_122:\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12154:12475  {... */\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":12034:12475  function _spendAllowance(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8748:9399  function _transfer(... */\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8874:8892  from != address(0) */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4704:4706   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4686:4707   */\n      mstore\n        /* \"#utility.yul\":4743:4745   */\n      0x25\n        /* \"#utility.yul\":4723:4741   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4716:4746   */\n      mstore\n        /* \"#utility.yul\":4782:4816   */\n      0x45524332303a207472616e736665722066726f6d20746865207a65726f206164\n        /* \"#utility.yul\":4762:4780   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4755:4817   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":4833:4851   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":4826:4861   */\n      mstore\n        /* \"#utility.yul\":4878:4897   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4502:4903   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8866:8934  require(from != address(0), \"ERC20: transfer from the zero address\") */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8952:8968  to != address(0) */\n      dup3\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5092:5113   */\n      mstore\n        /* \"#utility.yul\":5149:5151   */\n      0x23\n        /* \"#utility.yul\":5129:5147   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5122:5152   */\n      mstore\n        /* \"#utility.yul\":5188:5222   */\n      0x45524332303a207472616e7366657220746f20746865207a65726f2061646472\n        /* \"#utility.yul\":5168:5186   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5161:5223   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":5239:5257   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5232:5265   */\n      mstore\n        /* \"#utility.yul\":5282:5301   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n      tag_100\n        /* \"#utility.yul\":4908:5307   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8944:9008  require(to != address(0), \"ERC20: transfer to the zero address\") */\n    tag_127:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      dup4\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9068:9087  uint256 fromBalance */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9090:9105  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9123:9144  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":5514:5516   */\n      0x20\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5496:5517   */\n      mstore\n        /* \"#utility.yul\":5553:5555   */\n      0x26\n        /* \"#utility.yul\":5533:5551   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5526:5556   */\n      mstore\n        /* \"#utility.yul\":5592:5626   */\n      0x45524332303a207472616e7366657220616d6f756e7420657863656564732062\n        /* \"#utility.yul\":5572:5590   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5565:5627   */\n      mstore\n      shl(0xd0, 0x616c616e6365)\n        /* \"#utility.yul\":5643:5661   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5636:5672   */\n      mstore\n        /* \"#utility.yul\":5689:5708   */\n      0x84\n      add\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"#utility.yul\":5312:5714   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9115:9187  require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\") */\n    tag_132:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      dup1\n      dup6\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      0x00\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9236  _balances[from] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9239:9259  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9259  _balances[from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9292  _balances[to] */\n      swap2\n      dup6\n      and\n      dup2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      dup1\n      sload\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9221:9230  _balances */\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_135\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9253:9259  amount */\n      dup5\n      swap1\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9279:9302  _balances[to] += amount */\n      tag_88\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9333:9335  to */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9327:9331  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9337:9343  amount */\n      dup5\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n      mload(0x40)\n      tag_136\n      swap2\n        /* \"#utility.yul\":1258:1283   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1246:1248   */\n      0x20\n        /* \"#utility.yul\":1231:1249   */\n      add\n      swap1\n        /* \"#utility.yul\":1112:1289   */\n      jump\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9318:9344  Transfer(from, to, amount) */\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9355:9392  _afterTokenTransfer(from, to, amount) */\n      tag_122\n        /* \"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":13059:13180  function _beforeTokenTransfer(... */\n      jump\n        /* \"#utility.yul\":14:432   */\n    tag_18:\n        /* \"#utility.yul\":163:165   */\n      0x20\n        /* \"#utility.yul\":152:161   */\n      dup2\n        /* \"#utility.yul\":145:166   */\n      mstore\n        /* \"#utility.yul\":126:130   */\n      0x00\n        /* \"#utility.yul\":195:201   */\n      dup3\n        /* \"#utility.yul\":189:202   */\n      mload\n        /* \"#utility.yul\":238:244   */\n      dup1\n        /* \"#utility.yul\":233:235   */\n      0x20\n        /* \"#utility.yul\":222:231   */\n      dup5\n        /* \"#utility.yul\":218:236   */\n      add\n        /* \"#utility.yul\":211:245   */\n      mstore\n        /* \"#utility.yul\":297:303   */\n      dup1\n        /* \"#utility.yul\":292:294   */\n      0x20\n        /* \"#utility.yul\":284:290   */\n      dup6\n        /* \"#utility.yul\":280:295   */\n      add\n        /* \"#utility.yul\":275:277   */\n      0x40\n        /* \"#utility.yul\":264:273   */\n      dup6\n        /* \"#utility.yul\":260:278   */\n      add\n        /* \"#utility.yul\":254:304   */\n      mcopy\n        /* \"#utility.yul\":353:354   */\n      0x00\n        /* \"#utility.yul\":348:350   */\n      0x40\n        /* \"#utility.yul\":339:345   */\n      dup3\n        /* \"#utility.yul\":328:337   */\n      dup6\n        /* \"#utility.yul\":324:346   */\n      add\n        /* \"#utility.yul\":320:351   */\n      add\n        /* \"#utility.yul\":313:355   */\n      mstore\n        /* \"#utility.yul\":423:425   */\n      0x40\n        /* \"#utility.yul\":416:418   */\n      0x1f\n        /* \"#utility.yul\":412:419   */\n      not\n        /* \"#utility.yul\":407:409   */\n      0x1f\n        /* \"#utility.yul\":399:405   */\n      dup4\n        /* \"#utility.yul\":395:410   */\n      add\n        /* \"#utility.yul\":391:420   */\n      and\n        /* \"#utility.yul\":380:389   */\n      dup5\n        /* \"#utility.yul\":376:421   */\n      add\n        /* \"#utility.yul\":372:426   */\n      add\n        /* \"#utility.yul\":364:426   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":14:432   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":437:610   */\n    tag_141:\n        /* \"#utility.yul\":505:525   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":554:585   */\n      dup2\n      and\n        /* \"#utility.yul\":544:586   */\n      dup2\n      eq\n        /* \"#utility.yul\":534:604   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":600:601   */\n      0x00\n        /* \"#utility.yul\":597:598   */\n      0x00\n        /* \"#utility.yul\":590:602   */\n      revert\n        /* \"#utility.yul\":534:604   */\n    tag_145:\n        /* \"#utility.yul\":437:610   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:915   */\n    tag_21:\n        /* \"#utility.yul\":683:689   */\n      0x00\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":744:746   */\n      0x40\n        /* \"#utility.yul\":732:741   */\n      dup4\n        /* \"#utility.yul\":723:730   */\n      dup6\n        /* \"#utility.yul\":719:742   */\n      sub\n        /* \"#utility.yul\":715:747   */\n      slt\n        /* \"#utility.yul\":712:764   */\n      iszero\n      tag_147\n      jumpi\n        /* \"#utility.yul\":760:761   */\n      0x00\n        /* \"#utility.yul\":757:758   */\n      0x00\n        /* \"#utility.yul\":750:762   */\n      revert\n        /* \"#utility.yul\":712:764   */\n    tag_147:\n        /* \"#utility.yul\":783:812   */\n      tag_148\n        /* \"#utility.yul\":802:811   */\n      dup4\n        /* \"#utility.yul\":783:812   */\n      tag_141\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":773:812   */\n      swap5\n        /* \"#utility.yul\":881:883   */\n      0x20\n        /* \"#utility.yul\":866:884   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":853:885   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":615:915   */\n      jump\t// out\n        /* \"#utility.yul\":1294:1668   */\n    tag_31:\n        /* \"#utility.yul\":1371:1377   */\n      0x00\n        /* \"#utility.yul\":1379:1385   */\n      0x00\n        /* \"#utility.yul\":1387:1393   */\n      0x00\n        /* \"#utility.yul\":1440:1442   */\n      0x60\n        /* \"#utility.yul\":1428:1437   */\n      dup5\n        /* \"#utility.yul\":1419:1426   */\n      dup7\n        /* \"#utility.yul\":1415:1438   */\n      sub\n        /* \"#utility.yul\":1411:1443   */\n      slt\n        /* \"#utility.yul\":1408:1460   */\n      iszero\n      tag_152\n      jumpi\n        /* \"#utility.yul\":1456:1457   */\n      0x00\n        /* \"#utility.yul\":1453:1454   */\n      0x00\n        /* \"#utility.yul\":1446:1458   */\n      revert\n        /* \"#utility.yul\":1408:1460   */\n    tag_152:\n        /* \"#utility.yul\":1479:1508   */\n      tag_153\n        /* \"#utility.yul\":1498:1507   */\n      dup5\n        /* \"#utility.yul\":1479:1508   */\n      tag_141\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":1469:1508   */\n      swap3\n      pop\n        /* \"#utility.yul\":1527:1565   */\n      tag_154\n        /* \"#utility.yul\":1561:1563   */\n      0x20\n        /* \"#utility.yul\":1550:1559   */\n      dup6\n        /* \"#utility.yul\":1546:1564   */\n      add\n        /* \"#utility.yul\":1527:1565   */\n      tag_141\n      jump\t// in\n    tag_154:\n        /* \"#utility.yul\":1294:1668   */\n      swap3\n      swap6\n        /* \"#utility.yul\":1517:1565   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1634:1636   */\n      0x40\n        /* \"#utility.yul\":1619:1637   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1606:1638   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":1294:1668   */\n      jump\t// out\n        /* \"#utility.yul\":1862:2048   */\n    tag_44:\n        /* \"#utility.yul\":1921:1927   */\n      0x00\n        /* \"#utility.yul\":1974:1976   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup3\n        /* \"#utility.yul\":1953:1960   */\n      dup5\n        /* \"#utility.yul\":1949:1972   */\n      sub\n        /* \"#utility.yul\":1945:1977   */\n      slt\n        /* \"#utility.yul\":1942:1994   */\n      iszero\n      tag_157\n      jumpi\n        /* \"#utility.yul\":1990:1991   */\n      0x00\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1980:1992   */\n      revert\n        /* \"#utility.yul\":1942:1994   */\n    tag_157:\n        /* \"#utility.yul\":2013:2042   */\n      tag_158\n        /* \"#utility.yul\":2032:2041   */\n      dup3\n        /* \"#utility.yul\":2013:2042   */\n      tag_141\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":2003:2042   */\n      swap4\n        /* \"#utility.yul\":1862:2048   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2053:2313   */\n    tag_60:\n        /* \"#utility.yul\":2121:2127   */\n      0x00\n        /* \"#utility.yul\":2129:2135   */\n      0x00\n        /* \"#utility.yul\":2182:2184   */\n      0x40\n        /* \"#utility.yul\":2170:2179   */\n      dup4\n        /* \"#utility.yul\":2161:2168   */\n      dup6\n        /* \"#utility.yul\":2157:2180   */\n      sub\n        /* \"#utility.yul\":2153:2185   */\n      slt\n        /* \"#utility.yul\":2150:2202   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":2198:2199   */\n      0x00\n        /* \"#utility.yul\":2195:2196   */\n      0x00\n        /* \"#utility.yul\":2188:2200   */\n      revert\n        /* \"#utility.yul\":2150:2202   */\n    tag_160:\n        /* \"#utility.yul\":2221:2250   */\n      tag_161\n        /* \"#utility.yul\":2240:2249   */\n      dup4\n        /* \"#utility.yul\":2221:2250   */\n      tag_141\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":2211:2250   */\n      swap2\n      pop\n        /* \"#utility.yul\":2269:2307   */\n      tag_162\n        /* \"#utility.yul\":2303:2305   */\n      0x20\n        /* \"#utility.yul\":2292:2301   */\n      dup5\n        /* \"#utility.yul\":2288:2306   */\n      add\n        /* \"#utility.yul\":2269:2307   */\n      tag_141\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":2259:2307   */\n      swap1\n      pop\n        /* \"#utility.yul\":2053:2313   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2318:2698   */\n    tag_65:\n        /* \"#utility.yul\":2397:2398   */\n      0x01\n        /* \"#utility.yul\":2393:2405   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":2440:2452   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":2461:2522   */\n      tag_164\n      jumpi\n        /* \"#utility.yul\":2515:2519   */\n      0x7f\n        /* \"#utility.yul\":2507:2513   */\n      dup3\n        /* \"#utility.yul\":2503:2520   */\n      and\n        /* \"#utility.yul\":2493:2520   */\n      swap2\n      pop\n        /* \"#utility.yul\":2461:2522   */\n    tag_164:\n        /* \"#utility.yul\":2568:2570   */\n      0x20\n        /* \"#utility.yul\":2560:2566   */\n      dup3\n        /* \"#utility.yul\":2557:2571   */\n      lt\n        /* \"#utility.yul\":2537:2555   */\n      dup2\n        /* \"#utility.yul\":2534:2572   */\n      sub\n        /* \"#utility.yul\":2531:2692   */\n      tag_165\n      jumpi\n        /* \"#utility.yul\":2614:2624   */\n      0x4e487b71\n        /* \"#utility.yul\":2609:2612   */\n      0xe0\n        /* \"#utility.yul\":2605:2625   */\n      shl\n        /* \"#utility.yul\":2602:2603   */\n      0x00\n        /* \"#utility.yul\":2595:2626   */\n      mstore\n        /* \"#utility.yul\":2649:2653   */\n      0x22\n        /* \"#utility.yul\":2646:2647   */\n      0x04\n        /* \"#utility.yul\":2639:2654   */\n      mstore\n        /* \"#utility.yul\":2677:2681   */\n      0x24\n        /* \"#utility.yul\":2674:2675   */\n      0x00\n        /* \"#utility.yul\":2667:2682   */\n      revert\n        /* \"#utility.yul\":2531:2692   */\n    tag_165:\n      pop\n        /* \"#utility.yul\":2318:2698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2703:2925   */\n    tag_88:\n        /* \"#utility.yul\":2768:2777   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":2789:2799   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":2786:2919   */\n      iszero\n      tag_70\n      jumpi\n        /* \"#utility.yul\":2841:2851   */\n      0x4e487b71\n        /* \"#utility.yul\":2836:2839   */\n      0xe0\n        /* \"#utility.yul\":2832:2852   */\n      shl\n        /* \"#utility.yul\":2829:2830   */\n      0x00\n        /* \"#utility.yul\":2822:2853   */\n      mstore\n        /* \"#utility.yul\":2876:2880   */\n      0x11\n        /* \"#utility.yul\":2873:2874   */\n      0x04\n        /* \"#utility.yul\":2866:2881   */\n      mstore\n        /* \"#utility.yul\":2904:2908   */\n      0x24\n        /* \"#utility.yul\":2901:2902   */\n      0x00\n        /* \"#utility.yul\":2894:2909   */\n      revert\n\n    auxdata: 0xa26469706673582212209b4cc0c6b4669163b306db33c53129294b4665cd97a2dd34f3885ce3f830f93864736f6c634300081d0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_44": {
									"entryPoint": null,
									"id": 44,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_737": {
									"entryPoint": null,
									"id": 737,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": 312,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_mint_402": {
									"entryPoint": 88,
									"id": 402,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory": {
									"entryPoint": 474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 900,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 639,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 583,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4772:5",
										"nodeType": "YulBlock",
										"src": "0:4772:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:5",
													"nodeType": "YulBlock",
													"src": "46:95:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:5",
																		"nodeType": "YulLiteral",
																		"src": "63:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:5",
																				"nodeType": "YulLiteral",
																				"src": "70:3:5",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:5",
																				"nodeType": "YulLiteral",
																				"src": "75:10:5",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:5"
																		},
																		"nativeSrc": "66:20:5",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:5"
																},
																"nativeSrc": "56:31:5",
																"nodeType": "YulFunctionCall",
																"src": "56:31:5"
															},
															"nativeSrc": "56:31:5",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:5",
																		"nodeType": "YulLiteral",
																		"src": "103:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:5",
																		"nodeType": "YulLiteral",
																		"src": "106:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:5"
																},
																"nativeSrc": "96:15:5",
																"nodeType": "YulFunctionCall",
																"src": "96:15:5"
															},
															"nativeSrc": "96:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:5",
																		"nodeType": "YulLiteral",
																		"src": "127:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:5",
																		"nodeType": "YulLiteral",
																		"src": "130:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:5"
																},
																"nativeSrc": "120:15:5",
																"nodeType": "YulFunctionCall",
																"src": "120:15:5"
															},
															"nativeSrc": "120:15:5",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:5",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:5"
											},
											{
												"body": {
													"nativeSrc": "210:659:5",
													"nodeType": "YulBlock",
													"src": "210:659:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:5",
																"nodeType": "YulBlock",
																"src": "259:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:5",
																					"nodeType": "YulLiteral",
																					"src": "268:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:5",
																					"nodeType": "YulLiteral",
																					"src": "271:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:5"
																			},
																			"nativeSrc": "261:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:5"
																		},
																		"nativeSrc": "261:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:5",
																						"nodeType": "YulLiteral",
																						"src": "246:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:5"
																				},
																				"nativeSrc": "234:17:5",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:5"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:5"
																		},
																		"nativeSrc": "230:27:5",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:5"
																},
																"nativeSrc": "223:35:5",
																"nodeType": "YulFunctionCall",
																"src": "223:35:5"
															},
															"nativeSrc": "220:55:5",
															"nodeType": "YulIf",
															"src": "220:55:5"
														},
														{
															"nativeSrc": "284:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:5"
																},
																"nativeSrc": "298:13:5",
																"nodeType": "YulFunctionCall",
																"src": "298:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:5",
																	"nodeType": "YulTypedName",
																	"src": "288:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:5",
																"nodeType": "YulBlock",
																"src": "354:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:5"
																			},
																			"nativeSrc": "356:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:5"
																		},
																		"nativeSrc": "356:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:5",
																						"nodeType": "YulLiteral",
																						"src": "342:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:5",
																						"nodeType": "YulLiteral",
																						"src": "346:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:5"
																				},
																				"nativeSrc": "338:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:5",
																				"nodeType": "YulLiteral",
																				"src": "350:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:5"
																		},
																		"nativeSrc": "334:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:5"
																},
																"nativeSrc": "323:30:5",
																"nodeType": "YulFunctionCall",
																"src": "323:30:5"
															},
															"nativeSrc": "320:56:5",
															"nodeType": "YulIf",
															"src": "320:56:5"
														},
														{
															"nativeSrc": "385:23:5",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:5",
																		"nodeType": "YulLiteral",
																		"src": "405:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:5"
																},
																"nativeSrc": "399:9:5",
																"nodeType": "YulFunctionCall",
																"src": "399:9:5"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:5",
																	"nodeType": "YulTypedName",
																	"src": "389:6:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:5",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:5",
																										"nodeType": "YulLiteral",
																										"src": "471:4:5",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:5"
																								},
																								"nativeSrc": "459:17:5",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:5",
																										"nodeType": "YulLiteral",
																										"src": "482:2:5",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:5"
																								},
																								"nativeSrc": "478:7:5",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:5"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:5"
																						},
																						"nativeSrc": "455:31:5",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:5",
																						"nodeType": "YulLiteral",
																						"src": "488:2:5",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:5"
																				},
																				"nativeSrc": "451:40:5",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:5",
																						"nodeType": "YulLiteral",
																						"src": "497:2:5",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:5"
																				},
																				"nativeSrc": "493:7:5",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:5"
																		},
																		"nativeSrc": "447:54:5",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:5"
																},
																"nativeSrc": "435:67:5",
																"nodeType": "YulFunctionCall",
																"src": "435:67:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:5",
																	"nodeType": "YulTypedName",
																	"src": "421:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:5",
																"nodeType": "YulBlock",
																"src": "577:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:5"
																			},
																			"nativeSrc": "579:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:5"
																		},
																		"nativeSrc": "579:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:5",
																								"nodeType": "YulLiteral",
																								"src": "540:2:5",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:5",
																								"nodeType": "YulLiteral",
																								"src": "544:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:5"
																						},
																						"nativeSrc": "536:10:5",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:5"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:5",
																						"nodeType": "YulLiteral",
																						"src": "548:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:5"
																				},
																				"nativeSrc": "532:18:5",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:5"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:5"
																		},
																		"nativeSrc": "517:34:5",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:5",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:5"
																		},
																		"nativeSrc": "553:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:5"
																},
																"nativeSrc": "514:62:5",
																"nodeType": "YulFunctionCall",
																"src": "514:62:5"
															},
															"nativeSrc": "511:88:5",
															"nodeType": "YulIf",
															"src": "511:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:5",
																		"nodeType": "YulLiteral",
																		"src": "615:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:5",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:5"
																},
																"nativeSrc": "608:22:5",
																"nodeType": "YulFunctionCall",
																"src": "608:22:5"
															},
															"nativeSrc": "608:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:5"
																},
																"nativeSrc": "639:22:5",
																"nodeType": "YulFunctionCall",
																"src": "639:22:5"
															},
															"nativeSrc": "639:22:5",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:5"
														},
														{
															"body": {
																"nativeSrc": "713:16:5",
																"nodeType": "YulBlock",
																"src": "713:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:5",
																					"nodeType": "YulLiteral",
																					"src": "722:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:5",
																					"nodeType": "YulLiteral",
																					"src": "725:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:5"
																			},
																			"nativeSrc": "715:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:5"
																		},
																		"nativeSrc": "715:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:5"
																				},
																				"nativeSrc": "680:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:5",
																				"nodeType": "YulLiteral",
																				"src": "701:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:5"
																		},
																		"nativeSrc": "676:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:5"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:5"
																},
																"nativeSrc": "673:39:5",
																"nodeType": "YulFunctionCall",
																"src": "673:39:5"
															},
															"nativeSrc": "670:59:5",
															"nodeType": "YulIf",
															"src": "670:59:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "748:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "748:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "756:4:5",
																				"nodeType": "YulLiteral",
																				"src": "756:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "744:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "744:3:5"
																		},
																		"nativeSrc": "744:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "744:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "767:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "767:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "775:4:5",
																				"nodeType": "YulLiteral",
																				"src": "775:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "763:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "763:3:5"
																		},
																		"nativeSrc": "763:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "763:17:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "738:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "738:5:5"
																},
																"nativeSrc": "738:51:5",
																"nodeType": "YulFunctionCall",
																"src": "738:51:5"
															},
															"nativeSrc": "738:51:5",
															"nodeType": "YulExpressionStatement",
															"src": "738:51:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "813:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "813:6:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "821:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "821:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "809:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "809:3:5"
																				},
																				"nativeSrc": "809:19:5",
																				"nodeType": "YulFunctionCall",
																				"src": "809:19:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "830:4:5",
																				"nodeType": "YulLiteral",
																				"src": "830:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "805:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "805:3:5"
																		},
																		"nativeSrc": "805:30:5",
																		"nodeType": "YulFunctionCall",
																		"src": "805:30:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "837:1:5",
																		"nodeType": "YulLiteral",
																		"src": "837:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "798:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "798:6:5"
																},
																"nativeSrc": "798:41:5",
																"nodeType": "YulFunctionCall",
																"src": "798:41:5"
															},
															"nativeSrc": "798:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "798:41:5"
														},
														{
															"nativeSrc": "848:15:5",
															"nodeType": "YulAssignment",
															"src": "848:15:5",
															"value": {
																"name": "memPtr",
																"nativeSrc": "857:6:5",
																"nodeType": "YulIdentifier",
																"src": "857:6:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "848:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "848:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:723:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:5",
														"nodeType": "YulTypedName",
														"src": "184:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:5",
														"nodeType": "YulTypedName",
														"src": "192:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:5",
														"nodeType": "YulTypedName",
														"src": "200:5:5",
														"type": ""
													}
												],
												"src": "146:723:5"
											},
											{
												"body": {
													"nativeSrc": "1009:483:5",
													"nodeType": "YulBlock",
													"src": "1009:483:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1055:16:5",
																"nodeType": "YulBlock",
																"src": "1055:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1064:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1064:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1067:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1067:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1057:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1057:6:5"
																			},
																			"nativeSrc": "1057:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1057:12:5"
																		},
																		"nativeSrc": "1057:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1057:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1030:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1030:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1039:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1039:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1026:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1026:3:5"
																		},
																		"nativeSrc": "1026:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1026:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1051:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1051:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1022:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1022:3:5"
																},
																"nativeSrc": "1022:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1022:32:5"
															},
															"nativeSrc": "1019:52:5",
															"nodeType": "YulIf",
															"src": "1019:52:5"
														},
														{
															"nativeSrc": "1080:30:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1080:30:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1100:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1100:9:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1094:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1094:5:5"
																},
																"nativeSrc": "1094:16:5",
																"nodeType": "YulFunctionCall",
																"src": "1094:16:5"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1084:6:5",
																	"nodeType": "YulTypedName",
																	"src": "1084:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1153:16:5",
																"nodeType": "YulBlock",
																"src": "1153:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1162:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1162:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1165:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1165:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1155:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1155:6:5"
																			},
																			"nativeSrc": "1155:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1155:12:5"
																		},
																		"nativeSrc": "1155:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1155:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1125:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1125:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1141:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1141:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1145:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1145:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1137:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1137:3:5"
																				},
																				"nativeSrc": "1137:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1137:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1149:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1149:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1133:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1133:3:5"
																		},
																		"nativeSrc": "1133:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1133:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1122:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1122:2:5"
																},
																"nativeSrc": "1122:30:5",
																"nodeType": "YulFunctionCall",
																"src": "1122:30:5"
															},
															"nativeSrc": "1119:50:5",
															"nodeType": "YulIf",
															"src": "1119:50:5"
														},
														{
															"nativeSrc": "1178:71:5",
															"nodeType": "YulAssignment",
															"src": "1178:71:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1221:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1221:9:5"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1232:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1232:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1217:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1217:3:5"
																		},
																		"nativeSrc": "1217:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1217:22:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1241:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1241:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1188:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1188:28:5"
																},
																"nativeSrc": "1188:61:5",
																"nodeType": "YulFunctionCall",
																"src": "1188:61:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1178:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1178:6:5"
																}
															]
														},
														{
															"nativeSrc": "1258:41:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1258:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1284:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1284:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1295:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1295:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1280:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1280:3:5"
																		},
																		"nativeSrc": "1280:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1280:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1274:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1274:5:5"
																},
																"nativeSrc": "1274:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1274:25:5"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1262:8:5",
																	"nodeType": "YulTypedName",
																	"src": "1262:8:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1344:16:5",
																"nodeType": "YulBlock",
																"src": "1344:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1353:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1353:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1356:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1356:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1346:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1346:6:5"
																			},
																			"nativeSrc": "1346:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1346:12:5"
																		},
																		"nativeSrc": "1346:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1346:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1314:8:5",
																		"nodeType": "YulIdentifier",
																		"src": "1314:8:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1332:2:5",
																						"nodeType": "YulLiteral",
																						"src": "1332:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1336:1:5",
																						"nodeType": "YulLiteral",
																						"src": "1336:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1328:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "1328:3:5"
																				},
																				"nativeSrc": "1328:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1328:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1340:1:5",
																				"nodeType": "YulLiteral",
																				"src": "1340:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1324:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1324:3:5"
																		},
																		"nativeSrc": "1324:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1324:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1311:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1311:2:5"
																},
																"nativeSrc": "1311:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1311:32:5"
															},
															"nativeSrc": "1308:52:5",
															"nodeType": "YulIf",
															"src": "1308:52:5"
														},
														{
															"nativeSrc": "1369:73:5",
															"nodeType": "YulAssignment",
															"src": "1369:73:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1412:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1412:9:5"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1423:8:5",
																				"nodeType": "YulIdentifier",
																				"src": "1423:8:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1408:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1408:3:5"
																		},
																		"nativeSrc": "1408:24:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1408:24:5"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1434:7:5",
																		"nodeType": "YulIdentifier",
																		"src": "1434:7:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1379:28:5",
																	"nodeType": "YulIdentifier",
																	"src": "1379:28:5"
																},
																"nativeSrc": "1379:63:5",
																"nodeType": "YulFunctionCall",
																"src": "1379:63:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1369:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1369:6:5"
																}
															]
														},
														{
															"nativeSrc": "1451:35:5",
															"nodeType": "YulAssignment",
															"src": "1451:35:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1471:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1471:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1482:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1482:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1467:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1467:3:5"
																		},
																		"nativeSrc": "1467:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1467:18:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1461:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1461:5:5"
																},
																"nativeSrc": "1461:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1461:25:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1451:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1451:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory",
												"nativeSrc": "874:618:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "959:9:5",
														"nodeType": "YulTypedName",
														"src": "959:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "970:7:5",
														"nodeType": "YulTypedName",
														"src": "970:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "982:6:5",
														"nodeType": "YulTypedName",
														"src": "982:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "990:6:5",
														"nodeType": "YulTypedName",
														"src": "990:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "998:6:5",
														"nodeType": "YulTypedName",
														"src": "998:6:5",
														"type": ""
													}
												],
												"src": "874:618:5"
											},
											{
												"body": {
													"nativeSrc": "1552:325:5",
													"nodeType": "YulBlock",
													"src": "1552:325:5",
													"statements": [
														{
															"nativeSrc": "1562:22:5",
															"nodeType": "YulAssignment",
															"src": "1562:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1576:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1576:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1579:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1579:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1572:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1572:3:5"
																},
																"nativeSrc": "1572:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1572:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1562:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1562:6:5"
																}
															]
														},
														{
															"nativeSrc": "1593:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1593:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1623:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "1623:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1619:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1619:3:5"
																},
																"nativeSrc": "1619:12:5",
																"nodeType": "YulFunctionCall",
																"src": "1619:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1597:18:5",
																	"nodeType": "YulTypedName",
																	"src": "1597:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1670:31:5",
																"nodeType": "YulBlock",
																"src": "1670:31:5",
																"statements": [
																	{
																		"nativeSrc": "1672:27:5",
																		"nodeType": "YulAssignment",
																		"src": "1672:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1686:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1686:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1694:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1694:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1682:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "1682:3:5"
																			},
																			"nativeSrc": "1682:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1682:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1672:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1672:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1650:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1650:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1643:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1643:6:5"
																},
																"nativeSrc": "1643:26:5",
																"nodeType": "YulFunctionCall",
																"src": "1643:26:5"
															},
															"nativeSrc": "1640:61:5",
															"nodeType": "YulIf",
															"src": "1640:61:5"
														},
														{
															"body": {
																"nativeSrc": "1760:111:5",
																"nodeType": "YulBlock",
																"src": "1760:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1781:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1781:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1788:3:5",
																							"nodeType": "YulLiteral",
																							"src": "1788:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1793:10:5",
																							"nodeType": "YulLiteral",
																							"src": "1793:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1784:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "1784:3:5"
																					},
																					"nativeSrc": "1784:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "1784:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1774:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1774:6:5"
																			},
																			"nativeSrc": "1774:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1774:31:5"
																		},
																		"nativeSrc": "1774:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1774:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1825:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1825:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1828:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1828:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1818:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1818:6:5"
																			},
																			"nativeSrc": "1818:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1818:15:5"
																		},
																		"nativeSrc": "1818:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1818:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1853:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1853:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1856:4:5",
																					"nodeType": "YulLiteral",
																					"src": "1856:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1846:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1846:6:5"
																			},
																			"nativeSrc": "1846:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1846:15:5"
																		},
																		"nativeSrc": "1846:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1846:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1716:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "1716:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1739:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1747:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1747:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1736:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "1736:2:5"
																		},
																		"nativeSrc": "1736:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1736:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1713:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "1713:2:5"
																},
																"nativeSrc": "1713:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1713:38:5"
															},
															"nativeSrc": "1710:161:5",
															"nodeType": "YulIf",
															"src": "1710:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1497:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1532:4:5",
														"nodeType": "YulTypedName",
														"src": "1532:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1541:6:5",
														"nodeType": "YulTypedName",
														"src": "1541:6:5",
														"type": ""
													}
												],
												"src": "1497:380:5"
											},
											{
												"body": {
													"nativeSrc": "1938:65:5",
													"nodeType": "YulBlock",
													"src": "1938:65:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1955:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1955:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1958:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "1958:3:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1948:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1948:6:5"
																},
																"nativeSrc": "1948:14:5",
																"nodeType": "YulFunctionCall",
																"src": "1948:14:5"
															},
															"nativeSrc": "1948:14:5",
															"nodeType": "YulExpressionStatement",
															"src": "1948:14:5"
														},
														{
															"nativeSrc": "1971:26:5",
															"nodeType": "YulAssignment",
															"src": "1971:26:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1989:1:5",
																		"nodeType": "YulLiteral",
																		"src": "1989:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1992:4:5",
																		"nodeType": "YulLiteral",
																		"src": "1992:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1979:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "1979:9:5"
																},
																"nativeSrc": "1979:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1979:18:5"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1971:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1971:4:5"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1882:121:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1921:3:5",
														"nodeType": "YulTypedName",
														"src": "1921:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1929:4:5",
														"nodeType": "YulTypedName",
														"src": "1929:4:5",
														"type": ""
													}
												],
												"src": "1882:121:5"
											},
											{
												"body": {
													"nativeSrc": "2089:437:5",
													"nodeType": "YulBlock",
													"src": "2089:437:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2122:398:5",
																"nodeType": "YulBlock",
																"src": "2122:398:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2143:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2143:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2146:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2146:5:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2136:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2136:6:5"
																			},
																			"nativeSrc": "2136:16:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2136:16:5"
																		},
																		"nativeSrc": "2136:16:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2136:16:5"
																	},
																	{
																		"nativeSrc": "2165:30:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2165:30:5",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2187:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2187:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2190:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2190:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2177:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2177:9:5"
																			},
																			"nativeSrc": "2177:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2177:18:5"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2169:4:5",
																				"nodeType": "YulTypedName",
																				"src": "2169:4:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2208:57:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2208:57:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2231:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2231:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2241:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2241:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2248:10:5",
																									"nodeType": "YulIdentifier",
																									"src": "2248:10:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2260:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2260:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2244:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2244:3:5"
																							},
																							"nativeSrc": "2244:19:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2244:19:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2237:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2237:3:5"
																					},
																					"nativeSrc": "2237:27:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2237:27:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2227:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2227:3:5"
																			},
																			"nativeSrc": "2227:38:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:38:5"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2212:11:5",
																				"nodeType": "YulTypedName",
																				"src": "2212:11:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2302:23:5",
																			"nodeType": "YulBlock",
																			"src": "2302:23:5",
																			"statements": [
																				{
																					"nativeSrc": "2304:19:5",
																					"nodeType": "YulAssignment",
																					"src": "2304:19:5",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2319:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2319:4:5"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2304:11:5",
																							"nodeType": "YulIdentifier",
																							"src": "2304:11:5"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2284:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "2284:10:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2296:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2296:4:5",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2281:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2281:2:5"
																			},
																			"nativeSrc": "2281:20:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2281:20:5"
																		},
																		"nativeSrc": "2278:47:5",
																		"nodeType": "YulIf",
																		"src": "2278:47:5"
																	},
																	{
																		"nativeSrc": "2338:41:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2338:41:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2352:4:5",
																					"nodeType": "YulIdentifier",
																					"src": "2352:4:5"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2362:1:5",
																							"nodeType": "YulLiteral",
																							"src": "2362:1:5",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2369:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2369:3:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2374:2:5",
																									"nodeType": "YulLiteral",
																									"src": "2374:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2365:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "2365:3:5"
																							},
																							"nativeSrc": "2365:12:5",
																							"nodeType": "YulFunctionCall",
																							"src": "2365:12:5"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2358:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2358:3:5"
																					},
																					"nativeSrc": "2358:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2358:20:5"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2348:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2348:3:5"
																			},
																			"nativeSrc": "2348:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2348:31:5"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2342:2:5",
																				"nodeType": "YulTypedName",
																				"src": "2342:2:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2392:24:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2392:24:5",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2405:11:5",
																			"nodeType": "YulIdentifier",
																			"src": "2405:11:5"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2396:5:5",
																				"nodeType": "YulTypedName",
																				"src": "2396:5:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2490:20:5",
																			"nodeType": "YulBlock",
																			"src": "2490:20:5",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2499:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2499:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2506:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2506:1:5",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2492:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "2492:6:5"
																						},
																						"nativeSrc": "2492:16:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2492:16:5"
																					},
																					"nativeSrc": "2492:16:5",
																					"nodeType": "YulExpressionStatement",
																					"src": "2492:16:5"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2440:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2440:5:5"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2447:2:5",
																					"nodeType": "YulIdentifier",
																					"src": "2447:2:5"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2437:2:5",
																				"nodeType": "YulIdentifier",
																				"src": "2437:2:5"
																			},
																			"nativeSrc": "2437:13:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2437:13:5"
																		},
																		"nativeSrc": "2429:81:5",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2451:26:5",
																			"nodeType": "YulBlock",
																			"src": "2451:26:5",
																			"statements": [
																				{
																					"nativeSrc": "2453:22:5",
																					"nodeType": "YulAssignment",
																					"src": "2453:22:5",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2466:5:5",
																								"nodeType": "YulIdentifier",
																								"src": "2466:5:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2473:1:5",
																								"nodeType": "YulLiteral",
																								"src": "2473:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2462:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2462:3:5"
																						},
																						"nativeSrc": "2462:13:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2462:13:5"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2453:5:5",
																							"nodeType": "YulIdentifier",
																							"src": "2453:5:5"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2433:3:5",
																			"nodeType": "YulBlock",
																			"src": "2433:3:5",
																			"statements": []
																		},
																		"src": "2429:81:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2105:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2105:3:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2110:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2110:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2102:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2102:2:5"
																},
																"nativeSrc": "2102:11:5",
																"nodeType": "YulFunctionCall",
																"src": "2102:11:5"
															},
															"nativeSrc": "2099:421:5",
															"nodeType": "YulIf",
															"src": "2099:421:5"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2008:518:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2061:5:5",
														"nodeType": "YulTypedName",
														"src": "2061:5:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2068:3:5",
														"nodeType": "YulTypedName",
														"src": "2068:3:5",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2073:10:5",
														"nodeType": "YulTypedName",
														"src": "2073:10:5",
														"type": ""
													}
												],
												"src": "2008:518:5"
											},
											{
												"body": {
													"nativeSrc": "2616:81:5",
													"nodeType": "YulBlock",
													"src": "2616:81:5",
													"statements": [
														{
															"nativeSrc": "2626:65:5",
															"nodeType": "YulAssignment",
															"src": "2626:65:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2641:4:5",
																				"nodeType": "YulIdentifier",
																				"src": "2641:4:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2659:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2659:1:5",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2662:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "2662:3:5"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2655:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2655:3:5"
																								},
																								"nativeSrc": "2655:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2655:11:5"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2672:1:5",
																										"nodeType": "YulLiteral",
																										"src": "2672:1:5",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2668:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "2668:3:5"
																								},
																								"nativeSrc": "2668:6:5",
																								"nodeType": "YulFunctionCall",
																								"src": "2668:6:5"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2651:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "2651:3:5"
																						},
																						"nativeSrc": "2651:24:5",
																						"nodeType": "YulFunctionCall",
																						"src": "2651:24:5"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2647:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2647:3:5"
																				},
																				"nativeSrc": "2647:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2647:29:5"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2637:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2637:3:5"
																		},
																		"nativeSrc": "2637:40:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2637:40:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2683:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2683:1:5",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2686:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2686:3:5"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2679:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2679:3:5"
																		},
																		"nativeSrc": "2679:11:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2679:11:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2634:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2634:2:5"
																},
																"nativeSrc": "2634:57:5",
																"nodeType": "YulFunctionCall",
																"src": "2634:57:5"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2626:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "2626:4:5"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2531:166:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2593:4:5",
														"nodeType": "YulTypedName",
														"src": "2593:4:5",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2599:3:5",
														"nodeType": "YulTypedName",
														"src": "2599:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2607:4:5",
														"nodeType": "YulTypedName",
														"src": "2607:4:5",
														"type": ""
													}
												],
												"src": "2531:166:5"
											},
											{
												"body": {
													"nativeSrc": "2798:1203:5",
													"nodeType": "YulBlock",
													"src": "2798:1203:5",
													"statements": [
														{
															"nativeSrc": "2808:24:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2808:24:5",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2828:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2828:3:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2822:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "2822:5:5"
																},
																"nativeSrc": "2822:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2822:10:5"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2812:6:5",
																	"nodeType": "YulTypedName",
																	"src": "2812:6:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2875:22:5",
																"nodeType": "YulBlock",
																"src": "2875:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2877:16:5",
																				"nodeType": "YulIdentifier",
																				"src": "2877:16:5"
																			},
																			"nativeSrc": "2877:18:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2877:18:5"
																		},
																		"nativeSrc": "2877:18:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2877:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2847:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2847:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2863:2:5",
																						"nodeType": "YulLiteral",
																						"src": "2863:2:5",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2867:1:5",
																						"nodeType": "YulLiteral",
																						"src": "2867:1:5",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2859:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "2859:3:5"
																				},
																				"nativeSrc": "2859:10:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2859:10:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2871:1:5",
																				"nodeType": "YulLiteral",
																				"src": "2871:1:5",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2855:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:5"
																		},
																		"nativeSrc": "2855:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2844:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2844:2:5"
																},
																"nativeSrc": "2844:30:5",
																"nodeType": "YulFunctionCall",
																"src": "2844:30:5"
															},
															"nativeSrc": "2841:56:5",
															"nodeType": "YulIf",
															"src": "2841:56:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2950:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2950:4:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2988:4:5",
																						"nodeType": "YulIdentifier",
																						"src": "2988:4:5"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2982:5:5",
																					"nodeType": "YulIdentifier",
																					"src": "2982:5:5"
																				},
																				"nativeSrc": "2982:11:5",
																				"nodeType": "YulFunctionCall",
																				"src": "2982:11:5"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "2956:25:5",
																			"nodeType": "YulIdentifier",
																			"src": "2956:25:5"
																		},
																		"nativeSrc": "2956:38:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2956:38:5"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "2996:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "2996:6:5"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2906:43:5",
																	"nodeType": "YulIdentifier",
																	"src": "2906:43:5"
																},
																"nativeSrc": "2906:97:5",
																"nodeType": "YulFunctionCall",
																"src": "2906:97:5"
															},
															"nativeSrc": "2906:97:5",
															"nodeType": "YulExpressionStatement",
															"src": "2906:97:5"
														},
														{
															"nativeSrc": "3012:18:5",
															"nodeType": "YulVariableDeclaration",
															"src": "3012:18:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3029:1:5",
																"nodeType": "YulLiteral",
																"src": "3029:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3016:9:5",
																	"nodeType": "YulTypedName",
																	"src": "3016:9:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3039:17:5",
															"nodeType": "YulAssignment",
															"src": "3039:17:5",
															"value": {
																"kind": "number",
																"nativeSrc": "3052:4:5",
																"nodeType": "YulLiteral",
																"src": "3052:4:5",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3039:9:5",
																	"nodeType": "YulIdentifier",
																	"src": "3039:9:5"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3102:642:5",
																		"nodeType": "YulBlock",
																		"src": "3102:642:5",
																		"statements": [
																			{
																				"nativeSrc": "3116:35:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3116:35:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3135:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3135:6:5"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3147:2:5",
																									"nodeType": "YulLiteral",
																									"src": "3147:2:5",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3143:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3143:3:5"
																							},
																							"nativeSrc": "3143:7:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3143:7:5"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3131:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "3131:3:5"
																					},
																					"nativeSrc": "3131:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3131:20:5"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3120:7:5",
																						"nodeType": "YulTypedName",
																						"src": "3120:7:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3164:49:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3164:49:5",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3208:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3208:4:5"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3178:29:5",
																						"nodeType": "YulIdentifier",
																						"src": "3178:29:5"
																					},
																					"nativeSrc": "3178:35:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3178:35:5"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3168:6:5",
																						"nodeType": "YulTypedName",
																						"src": "3168:6:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3226:10:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3226:10:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3235:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3235:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3230:1:5",
																						"nodeType": "YulTypedName",
																						"src": "3230:1:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3306:165:5",
																					"nodeType": "YulBlock",
																					"src": "3306:165:5",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3331:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3331:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3349:3:5",
																														"nodeType": "YulIdentifier",
																														"src": "3349:3:5"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3354:9:5",
																														"nodeType": "YulIdentifier",
																														"src": "3354:9:5"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3345:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3345:3:5"
																												},
																												"nativeSrc": "3345:19:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3345:19:5"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3339:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "3339:5:5"
																										},
																										"nativeSrc": "3339:26:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3339:26:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3324:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3324:6:5"
																								},
																								"nativeSrc": "3324:42:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3324:42:5"
																							},
																							"nativeSrc": "3324:42:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3324:42:5"
																						},
																						{
																							"nativeSrc": "3383:24:5",
																							"nodeType": "YulAssignment",
																							"src": "3383:24:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3397:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3397:6:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3405:1:5",
																										"nodeType": "YulLiteral",
																										"src": "3405:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3393:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3393:3:5"
																								},
																								"nativeSrc": "3393:14:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3393:14:5"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3383:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3383:6:5"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3424:33:5",
																							"nodeType": "YulAssignment",
																							"src": "3424:33:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3441:9:5",
																										"nodeType": "YulIdentifier",
																										"src": "3441:9:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3452:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3452:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3437:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3437:3:5"
																								},
																								"nativeSrc": "3437:20:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3437:20:5"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3424:9:5",
																									"nodeType": "YulIdentifier",
																									"src": "3424:9:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3260:1:5",
																							"nodeType": "YulIdentifier",
																							"src": "3260:1:5"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3263:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3263:7:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3257:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3257:2:5"
																					},
																					"nativeSrc": "3257:14:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3257:14:5"
																				},
																				"nativeSrc": "3249:222:5",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3272:21:5",
																					"nodeType": "YulBlock",
																					"src": "3272:21:5",
																					"statements": [
																						{
																							"nativeSrc": "3274:17:5",
																							"nodeType": "YulAssignment",
																							"src": "3274:17:5",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3283:1:5",
																										"nodeType": "YulIdentifier",
																										"src": "3283:1:5"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3286:4:5",
																										"nodeType": "YulLiteral",
																										"src": "3286:4:5",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3279:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "3279:3:5"
																								},
																								"nativeSrc": "3279:12:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3279:12:5"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3274:1:5",
																									"nodeType": "YulIdentifier",
																									"src": "3274:1:5"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3253:3:5",
																					"nodeType": "YulBlock",
																					"src": "3253:3:5",
																					"statements": []
																				},
																				"src": "3249:222:5"
																			},
																			{
																				"body": {
																					"nativeSrc": "3519:166:5",
																					"nodeType": "YulBlock",
																					"src": "3519:166:5",
																					"statements": [
																						{
																							"nativeSrc": "3537:43:5",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3537:43:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3564:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3564:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3569:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3569:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3560:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3560:3:5"
																										},
																										"nativeSrc": "3560:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3560:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3554:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3554:5:5"
																								},
																								"nativeSrc": "3554:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3554:26:5"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3541:9:5",
																									"nodeType": "YulTypedName",
																									"src": "3541:9:5",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3604:6:5",
																										"nodeType": "YulIdentifier",
																										"src": "3604:6:5"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3616:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3616:9:5"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3643:1:5",
																																				"nodeType": "YulLiteral",
																																				"src": "3643:1:5",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3646:6:5",
																																				"nodeType": "YulIdentifier",
																																				"src": "3646:6:5"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3639:3:5",
																																			"nodeType": "YulIdentifier",
																																			"src": "3639:3:5"
																																		},
																																		"nativeSrc": "3639:14:5",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3639:14:5"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3655:3:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3655:3:5",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3635:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3635:3:5"
																																},
																																"nativeSrc": "3635:24:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3635:24:5"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3665:1:5",
																																		"nodeType": "YulLiteral",
																																		"src": "3665:1:5",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3661:3:5",
																																	"nodeType": "YulIdentifier",
																																	"src": "3661:3:5"
																																},
																																"nativeSrc": "3661:6:5",
																																"nodeType": "YulFunctionCall",
																																"src": "3661:6:5"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3631:3:5",
																															"nodeType": "YulIdentifier",
																															"src": "3631:3:5"
																														},
																														"nativeSrc": "3631:37:5",
																														"nodeType": "YulFunctionCall",
																														"src": "3631:37:5"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3627:3:5",
																													"nodeType": "YulIdentifier",
																													"src": "3627:3:5"
																												},
																												"nativeSrc": "3627:42:5",
																												"nodeType": "YulFunctionCall",
																												"src": "3627:42:5"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3612:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3612:3:5"
																										},
																										"nativeSrc": "3612:58:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3612:58:5"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3597:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3597:6:5"
																								},
																								"nativeSrc": "3597:74:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3597:74:5"
																							},
																							"nativeSrc": "3597:74:5",
																							"nodeType": "YulExpressionStatement",
																							"src": "3597:74:5"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3490:7:5",
																							"nodeType": "YulIdentifier",
																							"src": "3490:7:5"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3499:6:5",
																							"nodeType": "YulIdentifier",
																							"src": "3499:6:5"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3487:2:5",
																						"nodeType": "YulIdentifier",
																						"src": "3487:2:5"
																					},
																					"nativeSrc": "3487:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3487:19:5"
																				},
																				"nativeSrc": "3484:201:5",
																				"nodeType": "YulIf",
																				"src": "3484:201:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3705:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3705:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3719:1:5",
																											"nodeType": "YulLiteral",
																											"src": "3719:1:5",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3722:6:5",
																											"nodeType": "YulIdentifier",
																											"src": "3722:6:5"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3715:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "3715:3:5"
																									},
																									"nativeSrc": "3715:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "3715:14:5"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3731:1:5",
																									"nodeType": "YulLiteral",
																									"src": "3731:1:5",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3711:3:5",
																								"nodeType": "YulIdentifier",
																								"src": "3711:3:5"
																							},
																							"nativeSrc": "3711:22:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3711:22:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3698:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3698:6:5"
																					},
																					"nativeSrc": "3698:36:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3698:36:5"
																				},
																				"nativeSrc": "3698:36:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3698:36:5"
																			}
																		]
																	},
																	"nativeSrc": "3095:649:5",
																	"nodeType": "YulCase",
																	"src": "3095:649:5",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3100:1:5",
																		"nodeType": "YulLiteral",
																		"src": "3100:1:5",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3761:234:5",
																		"nodeType": "YulBlock",
																		"src": "3761:234:5",
																		"statements": [
																			{
																				"nativeSrc": "3775:14:5",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3775:14:5",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3788:1:5",
																					"nodeType": "YulLiteral",
																					"src": "3788:1:5",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3779:5:5",
																						"nodeType": "YulTypedName",
																						"src": "3779:5:5",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3824:67:5",
																					"nodeType": "YulBlock",
																					"src": "3824:67:5",
																					"statements": [
																						{
																							"nativeSrc": "3842:35:5",
																							"nodeType": "YulAssignment",
																							"src": "3842:35:5",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3861:3:5",
																												"nodeType": "YulIdentifier",
																												"src": "3861:3:5"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3866:9:5",
																												"nodeType": "YulIdentifier",
																												"src": "3866:9:5"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3857:3:5",
																											"nodeType": "YulIdentifier",
																											"src": "3857:3:5"
																										},
																										"nativeSrc": "3857:19:5",
																										"nodeType": "YulFunctionCall",
																										"src": "3857:19:5"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3851:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3851:5:5"
																								},
																								"nativeSrc": "3851:26:5",
																								"nodeType": "YulFunctionCall",
																								"src": "3851:26:5"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3842:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3842:5:5"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3805:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "3805:6:5"
																				},
																				"nativeSrc": "3802:89:5",
																				"nodeType": "YulIf",
																				"src": "3802:89:5"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3911:4:5",
																							"nodeType": "YulIdentifier",
																							"src": "3911:4:5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "3970:5:5",
																									"nodeType": "YulIdentifier",
																									"src": "3970:5:5"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "3977:6:5",
																									"nodeType": "YulIdentifier",
																									"src": "3977:6:5"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3917:52:5",
																								"nodeType": "YulIdentifier",
																								"src": "3917:52:5"
																							},
																							"nativeSrc": "3917:67:5",
																							"nodeType": "YulFunctionCall",
																							"src": "3917:67:5"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3904:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "3904:6:5"
																					},
																					"nativeSrc": "3904:81:5",
																					"nodeType": "YulFunctionCall",
																					"src": "3904:81:5"
																				},
																				"nativeSrc": "3904:81:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "3904:81:5"
																			}
																		]
																	},
																	"nativeSrc": "3753:242:5",
																	"nodeType": "YulCase",
																	"src": "3753:242:5",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3075:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "3075:6:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3083:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3083:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3072:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "3072:2:5"
																},
																"nativeSrc": "3072:14:5",
																"nodeType": "YulFunctionCall",
																"src": "3072:14:5"
															},
															"nativeSrc": "3065:930:5",
															"nodeType": "YulSwitch",
															"src": "3065:930:5"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2702:1299:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2783:4:5",
														"nodeType": "YulTypedName",
														"src": "2783:4:5",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2789:3:5",
														"nodeType": "YulTypedName",
														"src": "2789:3:5",
														"type": ""
													}
												],
												"src": "2702:1299:5"
											},
											{
												"body": {
													"nativeSrc": "4180:181:5",
													"nodeType": "YulBlock",
													"src": "4180:181:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4197:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4197:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4208:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4208:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4190:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4190:6:5"
																},
																"nativeSrc": "4190:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4190:21:5"
															},
															"nativeSrc": "4190:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4190:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4231:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4231:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4242:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4242:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4227:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4227:3:5"
																		},
																		"nativeSrc": "4227:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4227:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4247:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4247:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4220:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4220:6:5"
																},
																"nativeSrc": "4220:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4220:30:5"
															},
															"nativeSrc": "4220:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4220:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4270:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4270:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4281:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4281:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4266:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4266:3:5"
																		},
																		"nativeSrc": "4266:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4266:18:5"
																	},
																	{
																		"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
																		"kind": "string",
																		"nativeSrc": "4286:33:5",
																		"nodeType": "YulLiteral",
																		"src": "4286:33:5",
																		"type": "",
																		"value": "ERC20: mint to the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4259:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4259:6:5"
																},
																"nativeSrc": "4259:61:5",
																"nodeType": "YulFunctionCall",
																"src": "4259:61:5"
															},
															"nativeSrc": "4259:61:5",
															"nodeType": "YulExpressionStatement",
															"src": "4259:61:5"
														},
														{
															"nativeSrc": "4329:26:5",
															"nodeType": "YulAssignment",
															"src": "4329:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4341:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4341:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4352:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4352:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4337:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4337:3:5"
																},
																"nativeSrc": "4337:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4337:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4329:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4329:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4006:355:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4157:9:5",
														"nodeType": "YulTypedName",
														"src": "4157:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4171:4:5",
														"nodeType": "YulTypedName",
														"src": "4171:4:5",
														"type": ""
													}
												],
												"src": "4006:355:5"
											},
											{
												"body": {
													"nativeSrc": "4414:174:5",
													"nodeType": "YulBlock",
													"src": "4414:174:5",
													"statements": [
														{
															"nativeSrc": "4424:16:5",
															"nodeType": "YulAssignment",
															"src": "4424:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4435:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4435:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "4438:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4438:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4431:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4431:3:5"
																},
																"nativeSrc": "4431:9:5",
																"nodeType": "YulFunctionCall",
																"src": "4431:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "4424:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4424:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4471:111:5",
																"nodeType": "YulBlock",
																"src": "4471:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4492:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4492:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "4499:3:5",
																							"nodeType": "YulLiteral",
																							"src": "4499:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "4504:10:5",
																							"nodeType": "YulLiteral",
																							"src": "4504:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "4495:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "4495:3:5"
																					},
																					"nativeSrc": "4495:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "4495:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4485:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4485:6:5"
																			},
																			"nativeSrc": "4485:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4485:31:5"
																		},
																		"nativeSrc": "4485:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4485:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4536:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4536:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4539:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4539:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "4529:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4529:6:5"
																			},
																			"nativeSrc": "4529:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4529:15:5"
																		},
																		"nativeSrc": "4529:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4529:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4564:1:5",
																					"nodeType": "YulLiteral",
																					"src": "4564:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4567:4:5",
																					"nodeType": "YulLiteral",
																					"src": "4567:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4557:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "4557:6:5"
																			},
																			"nativeSrc": "4557:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "4557:15:5"
																		},
																		"nativeSrc": "4557:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "4557:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "4455:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "4455:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "4458:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "4458:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4452:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "4452:2:5"
																},
																"nativeSrc": "4452:10:5",
																"nodeType": "YulFunctionCall",
																"src": "4452:10:5"
															},
															"nativeSrc": "4449:133:5",
															"nodeType": "YulIf",
															"src": "4449:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "4366:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "4397:1:5",
														"nodeType": "YulTypedName",
														"src": "4397:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "4400:1:5",
														"nodeType": "YulTypedName",
														"src": "4400:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "4406:3:5",
														"nodeType": "YulTypedName",
														"src": "4406:3:5",
														"type": ""
													}
												],
												"src": "4366:222:5"
											},
											{
												"body": {
													"nativeSrc": "4694:76:5",
													"nodeType": "YulBlock",
													"src": "4694:76:5",
													"statements": [
														{
															"nativeSrc": "4704:26:5",
															"nodeType": "YulAssignment",
															"src": "4704:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4716:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4716:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4727:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4727:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4712:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4712:3:5"
																},
																"nativeSrc": "4712:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4712:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4704:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4746:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4757:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "4757:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4739:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4739:6:5"
																},
																"nativeSrc": "4739:25:5",
																"nodeType": "YulFunctionCall",
																"src": "4739:25:5"
															},
															"nativeSrc": "4739:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "4739:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4593:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4663:9:5",
														"nodeType": "YulTypedName",
														"src": "4663:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4674:6:5",
														"nodeType": "YulTypedName",
														"src": "4674:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4685:4:5",
														"nodeType": "YulTypedName",
														"src": "4685:4:5",
														"type": ""
													}
												],
												"src": "4593:177:5"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        mcopy(add(memPtr, 0x20), add(offset, 0x20), length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052604051610bfa380380610bfa833981016040819052610022916101da565b8282600361003083826102ca565b50600461003d82826102ca565b505050610050338261005860201b60201c565b5050506103a9565b6001600160a01b0382166100b25760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060025f8282546100c39190610384565b90915550506001600160a01b0382165f90815260208190526040812080548392906100ef908490610384565b90915550506040518181526001600160a01b038316905f907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112610160575f5ffd5b81516001600160401b038111156101795761017961013d565b604051601f8201601f19908116603f011681016001600160401b03811182821017156101a7576101a761013d565b6040528181528382016020018510156101be575f5ffd5b8160208501602083015e5f918101602001919091529392505050565b5f5f5f606084860312156101ec575f5ffd5b83516001600160401b03811115610201575f5ffd5b61020d86828701610151565b602086015190945090506001600160401b0381111561022a575f5ffd5b61023686828701610151565b925050604084015190509250925092565b600181811c9082168061025b57607f821691505b60208210810361027957634e487b7160e01b5f52602260045260245ffd5b50919050565b601f82111561013857805f5260205f20601f840160051c810160208510156102a45750805b601f840160051c820191505b818110156102c3575f81556001016102b0565b5050505050565b81516001600160401b038111156102e3576102e361013d565b6102f7816102f18454610247565b8461027f565b6020601f821160018114610329575f83156103125750848201515b5f19600385901b1c1916600184901b1784556102c3565b5f84815260208120601f198516915b828110156103585787850151825560209485019460019092019101610338565b508482101561037557868401515f19600387901b60f8161c191681555b50505050600190811b01905550565b808201808211156103a357634e487b7160e01b5f52601160045260245ffd5b92915050565b610844806103b65f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d6366004610704565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461072c565b610244565b604051601281526020016100bf565b6100db61012d366004610704565b610267565b6100ef610140366004610766565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db610170366004610704565b610297565b6100db610183366004610704565b610316565b6100ef610196366004610786565b610323565b6060600380546101aa906107b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107b7565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107ef565b61034d565b6060600480546101aa906107b7565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b9084906107ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106ff575f5ffd5b919050565b5f5f60408385031215610715575f5ffd5b61071e836106e9565b946020939093013593505050565b5f5f5f6060848603121561073e575f5ffd5b610747846106e9565b9250610755602085016106e9565b929592945050506040919091013590565b5f60208284031215610776575f5ffd5b61077f826106e9565b9392505050565b5f5f60408385031215610797575f5ffd5b6107a0836106e9565b91506107ae602084016106e9565b90509250929050565b600181811c908216806107cb57607f821691505b6020821081036107e957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212209b4cc0c6b4669163b306db33c53129294b4665cd97a2dd34f3885ce3f830f93864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0xBFA CODESIZE SUB DUP1 PUSH2 0xBFA DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x22 SWAP2 PUSH2 0x1DA JUMP JUMPDEST DUP3 DUP3 PUSH1 0x3 PUSH2 0x30 DUP4 DUP3 PUSH2 0x2CA JUMP JUMPDEST POP PUSH1 0x4 PUSH2 0x3D DUP3 DUP3 PUSH2 0x2CA JUMP JUMPDEST POP POP POP PUSH2 0x50 CALLER DUP3 PUSH2 0x58 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP POP PUSH2 0x3A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xEF SWAP1 DUP5 SWAP1 PUSH2 0x384 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x160 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x179 JUMPI PUSH2 0x179 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1A7 JUMPI PUSH2 0x1A7 PUSH2 0x13D JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0x1BE JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD MCOPY PUSH0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EC JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x201 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x20D DUP7 DUP3 DUP8 ADD PUSH2 0x151 JUMP JUMPDEST PUSH1 0x20 DUP7 ADD MLOAD SWAP1 SWAP5 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x22A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x236 DUP7 DUP3 DUP8 ADD PUSH2 0x151 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x25B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x279 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x138 JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2A4 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2C3 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2B0 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x2E3 JUMPI PUSH2 0x2E3 PUSH2 0x13D JUMP JUMPDEST PUSH2 0x2F7 DUP2 PUSH2 0x2F1 DUP5 SLOAD PUSH2 0x247 JUMP JUMPDEST DUP5 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x329 JUMPI PUSH0 DUP4 ISZERO PUSH2 0x312 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x2C3 JUMP JUMPDEST PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x358 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x338 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x375 JUMPI DUP7 DUP5 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x3A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x844 DUP1 PUSH2 0x3B6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x7EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x747 DUP5 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x755 PUSH1 0x20 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77F DUP3 PUSH2 0x6E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x797 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7A0 DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7AE PUSH1 0x20 DUP5 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x4C 0xC0 0xC6 0xB4 PUSH7 0x9163B306DB33C5 BALANCE 0x29 0x29 0x4B CHAINID PUSH6 0xCD97A2DD34F3 DUP9 TLOAD CALLF 0xF830 EXTDELEGATECALL CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "1900:336:4:-:0;;;2054:180;;;;;;;;;;;;;;;;;;:::i;:::-;2173:4;2179:6;3317:5:0;:13;2173:4:4;3317:5:0;:13;:::i;:::-;-1:-1:-1;3340:7:0;:17;3350:7;3340;:17;:::i;:::-;;3251:113;;2197:30:4::1;2203:10;2215:11;2197:5;;;:30;;:::i;:::-;2054:180:::0;;;1900:336;;9675:389:0;-1:-1:-1;;;;;9758:21:0;;9750:65;;;;-1:-1:-1;;;9750:65:0;;4208:2:5;9750:65:0;;;4190:21:5;4247:2;4227:18;;;4220:30;4286:33;4266:18;;;4259:61;4337:18;;9750:65:0;;;;;;;;9902:6;9886:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9918:18:0;;:9;:18;;;;;;;;;;:28;;9940:6;;9918:9;:28;;9940:6;;9918:28;:::i;:::-;;;;-1:-1:-1;;9961:37:0;;4739:25:5;;;-1:-1:-1;;;;;9961:37:0;;;9978:1;;9961:37;;4727:2:5;4712:18;9961:37:0;;;;;;;9675:389;;:::o;13059:121::-;;;;:::o;14:127:5:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:723;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:5;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:5;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:5;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:5;;;725:1;722;715:12;670:59;782:6;775:4;767:6;763:17;756:4;748:6;744:17;738:51;837:1;809:19;;;830:4;805:30;798:41;;;;813:6;146:723;-1:-1:-1;;;146:723:5:o;874:618::-;982:6;990;998;1051:2;1039:9;1030:7;1026:23;1022:32;1019:52;;;1067:1;1064;1057:12;1019:52;1094:16;;-1:-1:-1;;;;;1122:30:5;;1119:50;;;1165:1;1162;1155:12;1119:50;1188:61;1241:7;1232:6;1221:9;1217:22;1188:61;:::i;:::-;1295:2;1280:18;;1274:25;1178:71;;-1:-1:-1;1274:25:5;-1:-1:-1;;;;;;1311:32:5;;1308:52;;;1356:1;1353;1346:12;1308:52;1379:63;1434:7;1423:8;1412:9;1408:24;1379:63;:::i;:::-;1369:73;;;1482:2;1471:9;1467:18;1461:25;1451:35;;874:618;;;;;:::o;1497:380::-;1576:1;1572:12;;;;1619;;;1640:61;;1694:4;1686:6;1682:17;1672:27;;1640:61;1747:2;1739:6;1736:14;1716:18;1713:38;1710:161;;1793:10;1788:3;1784:20;1781:1;1774:31;1828:4;1825:1;1818:15;1856:4;1853:1;1846:15;1710:161;;1497:380;;;:::o;2008:518::-;2110:2;2105:3;2102:11;2099:421;;;2146:5;2143:1;2136:16;2190:4;2187:1;2177:18;2260:2;2248:10;2244:19;2241:1;2237:27;2231:4;2227:38;2296:4;2284:10;2281:20;2278:47;;;-1:-1:-1;2319:4:5;2278:47;2374:2;2369:3;2365:12;2362:1;2358:20;2352:4;2348:31;2338:41;;2429:81;2447:2;2440:5;2437:13;2429:81;;;2506:1;2492:16;;2473:1;2462:13;2429:81;;;2433:3;;2008:518;;;:::o;2702:1299::-;2822:10;;-1:-1:-1;;;;;2844:30:5;;2841:56;;;2877:18;;:::i;:::-;2906:97;2996:6;2956:38;2988:4;2982:11;2956:38;:::i;:::-;2950:4;2906:97;:::i;:::-;3052:4;3083:2;3072:14;;3100:1;3095:649;;;;3788:1;3805:6;3802:89;;;-1:-1:-1;3857:19:5;;;3851:26;3802:89;-1:-1:-1;;2659:1:5;2655:11;;;2651:24;2647:29;2637:40;2683:1;2679:11;;;2634:57;3904:81;;3065:930;;3095:649;1955:1;1948:14;;;1992:4;1979:18;;-1:-1:-1;;3131:20:5;;;3249:222;3263:7;3260:1;3257:14;3249:222;;;3345:19;;;3339:26;3324:42;;3452:4;3437:20;;;;3405:1;3393:14;;;;3279:12;3249:222;;;3253:3;3499:6;3490:7;3487:19;3484:201;;;3560:19;;;3554:26;-1:-1:-1;;3643:1:5;3639:14;;;3655:3;3635:24;3631:37;3627:42;3612:58;3597:74;;3484:201;-1:-1:-1;;;;3731:1:5;3715:14;;;3711:22;3698:36;;-1:-1:-1;2702:1299:5:o;4366:222::-;4431:9;;;4452:10;;;4449:133;;;4504:10;4499:3;4495:20;4492:1;4485:31;4539:4;4536:1;4529:15;4567:4;4564:1;4557:15;4449:133;4366:222;;;;:::o;4593:177::-;1900:336:4;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_584": {
									"entryPoint": null,
									"id": 584,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_519": {
									"entryPoint": 845,
									"id": 519,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_573": {
									"entryPoint": null,
									"id": 573,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_msgSender_700": {
									"entryPoint": null,
									"id": 700,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_562": {
									"entryPoint": 1136,
									"id": 562,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_346": {
									"entryPoint": 1256,
									"id": 346,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_141": {
									"entryPoint": 803,
									"id": 141,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_166": {
									"entryPoint": 555,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_98": {
									"entryPoint": null,
									"id": 98,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_74": {
									"entryPoint": null,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@decreaseAllowance_269": {
									"entryPoint": 663,
									"id": 269,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@increaseAllowance_228": {
									"entryPoint": 615,
									"id": 228,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_54": {
									"entryPoint": 411,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_64": {
									"entryPoint": 648,
									"id": 64,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_84": {
									"entryPoint": null,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_199": {
									"entryPoint": 580,
									"id": 199,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_123": {
									"entryPoint": 790,
									"id": 123,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 1769,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1894,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 1836,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 1796,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2031,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1975,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:5716:5",
										"nodeType": "YulBlock",
										"src": "0:5716:5",
										"statements": [
											{
												"nativeSrc": "6:3:5",
												"nodeType": "YulBlock",
												"src": "6:3:5",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "135:297:5",
													"nodeType": "YulBlock",
													"src": "135:297:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "152:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "152:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "163:2:5",
																		"nodeType": "YulLiteral",
																		"src": "163:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "145:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "145:6:5"
																},
																"nativeSrc": "145:21:5",
																"nodeType": "YulFunctionCall",
																"src": "145:21:5"
															},
															"nativeSrc": "145:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "145:21:5"
														},
														{
															"nativeSrc": "175:27:5",
															"nodeType": "YulVariableDeclaration",
															"src": "175:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "195:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "195:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "189:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "189:5:5"
																},
																"nativeSrc": "189:13:5",
																"nodeType": "YulFunctionCall",
																"src": "189:13:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "179:6:5",
																	"nodeType": "YulTypedName",
																	"src": "179:6:5",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "222:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "222:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "233:2:5",
																				"nodeType": "YulLiteral",
																				"src": "233:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "218:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "218:3:5"
																		},
																		"nativeSrc": "218:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "218:18:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "238:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "238:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:5"
																},
																"nativeSrc": "211:34:5",
																"nodeType": "YulFunctionCall",
																"src": "211:34:5"
															},
															"nativeSrc": "211:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "211:34:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "264:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "264:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "275:2:5",
																				"nodeType": "YulLiteral",
																				"src": "275:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "260:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "260:3:5"
																		},
																		"nativeSrc": "260:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "260:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "284:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "284:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "292:2:5",
																				"nodeType": "YulLiteral",
																				"src": "292:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "280:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "280:3:5"
																		},
																		"nativeSrc": "280:15:5",
																		"nodeType": "YulFunctionCall",
																		"src": "280:15:5"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "297:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "297:6:5"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "254:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "254:5:5"
																},
																"nativeSrc": "254:50:5",
																"nodeType": "YulFunctionCall",
																"src": "254:50:5"
															},
															"nativeSrc": "254:50:5",
															"nodeType": "YulExpressionStatement",
															"src": "254:50:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "328:9:5",
																						"nodeType": "YulIdentifier",
																						"src": "328:9:5"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "339:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "339:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "324:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "324:3:5"
																				},
																				"nativeSrc": "324:22:5",
																				"nodeType": "YulFunctionCall",
																				"src": "324:22:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "348:2:5",
																				"nodeType": "YulLiteral",
																				"src": "348:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "320:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "320:3:5"
																		},
																		"nativeSrc": "320:31:5",
																		"nodeType": "YulFunctionCall",
																		"src": "320:31:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "353:1:5",
																		"nodeType": "YulLiteral",
																		"src": "353:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "313:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "313:6:5"
																},
																"nativeSrc": "313:42:5",
																"nodeType": "YulFunctionCall",
																"src": "313:42:5"
															},
															"nativeSrc": "313:42:5",
															"nodeType": "YulExpressionStatement",
															"src": "313:42:5"
														},
														{
															"nativeSrc": "364:62:5",
															"nodeType": "YulAssignment",
															"src": "364:62:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "380:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "380:9:5"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "399:6:5",
																								"nodeType": "YulIdentifier",
																								"src": "399:6:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "407:2:5",
																								"nodeType": "YulLiteral",
																								"src": "407:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "395:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "395:3:5"
																						},
																						"nativeSrc": "395:15:5",
																						"nodeType": "YulFunctionCall",
																						"src": "395:15:5"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "416:2:5",
																								"nodeType": "YulLiteral",
																								"src": "416:2:5",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "412:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "412:3:5"
																						},
																						"nativeSrc": "412:7:5",
																						"nodeType": "YulFunctionCall",
																						"src": "412:7:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "391:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "391:3:5"
																				},
																				"nativeSrc": "391:29:5",
																				"nodeType": "YulFunctionCall",
																				"src": "391:29:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:5"
																		},
																		"nativeSrc": "376:45:5",
																		"nodeType": "YulFunctionCall",
																		"src": "376:45:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "423:2:5",
																		"nodeType": "YulLiteral",
																		"src": "423:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "372:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "372:3:5"
																},
																"nativeSrc": "372:54:5",
																"nodeType": "YulFunctionCall",
																"src": "372:54:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "364:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "364:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14:418:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "104:9:5",
														"nodeType": "YulTypedName",
														"src": "104:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "115:6:5",
														"nodeType": "YulTypedName",
														"src": "115:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "126:4:5",
														"nodeType": "YulTypedName",
														"src": "126:4:5",
														"type": ""
													}
												],
												"src": "14:418:5"
											},
											{
												"body": {
													"nativeSrc": "486:124:5",
													"nodeType": "YulBlock",
													"src": "486:124:5",
													"statements": [
														{
															"nativeSrc": "496:29:5",
															"nodeType": "YulAssignment",
															"src": "496:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "518:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "518:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "505:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "505:12:5"
																},
																"nativeSrc": "505:20:5",
																"nodeType": "YulFunctionCall",
																"src": "505:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "496:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "588:16:5",
																"nodeType": "YulBlock",
																"src": "588:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "597:1:5",
																					"nodeType": "YulLiteral",
																					"src": "597:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "600:1:5",
																					"nodeType": "YulLiteral",
																					"src": "600:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "590:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "590:6:5"
																			},
																			"nativeSrc": "590:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "590:12:5"
																		},
																		"nativeSrc": "590:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "590:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "547:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "547:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "558:5:5",
																						"nodeType": "YulIdentifier",
																						"src": "558:5:5"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "573:3:5",
																										"nodeType": "YulLiteral",
																										"src": "573:3:5",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "578:1:5",
																										"nodeType": "YulLiteral",
																										"src": "578:1:5",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "569:3:5",
																									"nodeType": "YulIdentifier",
																									"src": "569:3:5"
																								},
																								"nativeSrc": "569:11:5",
																								"nodeType": "YulFunctionCall",
																								"src": "569:11:5"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "582:1:5",
																								"nodeType": "YulLiteral",
																								"src": "582:1:5",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "565:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "565:3:5"
																						},
																						"nativeSrc": "565:19:5",
																						"nodeType": "YulFunctionCall",
																						"src": "565:19:5"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "554:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "554:3:5"
																				},
																				"nativeSrc": "554:31:5",
																				"nodeType": "YulFunctionCall",
																				"src": "554:31:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "544:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "544:2:5"
																		},
																		"nativeSrc": "544:42:5",
																		"nodeType": "YulFunctionCall",
																		"src": "544:42:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "537:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "537:6:5"
																},
																"nativeSrc": "537:50:5",
																"nodeType": "YulFunctionCall",
																"src": "537:50:5"
															},
															"nativeSrc": "534:70:5",
															"nodeType": "YulIf",
															"src": "534:70:5"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "437:173:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "465:6:5",
														"nodeType": "YulTypedName",
														"src": "465:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "476:5:5",
														"nodeType": "YulTypedName",
														"src": "476:5:5",
														"type": ""
													}
												],
												"src": "437:173:5"
											},
											{
												"body": {
													"nativeSrc": "702:213:5",
													"nodeType": "YulBlock",
													"src": "702:213:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "748:16:5",
																"nodeType": "YulBlock",
																"src": "748:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "757:1:5",
																					"nodeType": "YulLiteral",
																					"src": "757:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "760:1:5",
																					"nodeType": "YulLiteral",
																					"src": "760:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "750:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "750:6:5"
																			},
																			"nativeSrc": "750:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "750:12:5"
																		},
																		"nativeSrc": "750:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "750:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "723:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "723:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "732:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "732:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "719:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "719:3:5"
																		},
																		"nativeSrc": "719:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "719:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "744:2:5",
																		"nodeType": "YulLiteral",
																		"src": "744:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "715:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "715:3:5"
																},
																"nativeSrc": "715:32:5",
																"nodeType": "YulFunctionCall",
																"src": "715:32:5"
															},
															"nativeSrc": "712:52:5",
															"nodeType": "YulIf",
															"src": "712:52:5"
														},
														{
															"nativeSrc": "773:39:5",
															"nodeType": "YulAssignment",
															"src": "773:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "802:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "802:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "783:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "783:18:5"
																},
																"nativeSrc": "783:29:5",
																"nodeType": "YulFunctionCall",
																"src": "783:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "773:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:5"
																}
															]
														},
														{
															"nativeSrc": "821:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "821:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "834:1:5",
																"nodeType": "YulLiteral",
																"src": "834:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "825:5:5",
																	"nodeType": "YulTypedName",
																	"src": "825:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "844:41:5",
															"nodeType": "YulAssignment",
															"src": "844:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "870:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "870:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "881:2:5",
																				"nodeType": "YulLiteral",
																				"src": "881:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "866:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "866:3:5"
																		},
																		"nativeSrc": "866:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "866:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "853:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "853:12:5"
																},
																"nativeSrc": "853:32:5",
																"nodeType": "YulFunctionCall",
																"src": "853:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "844:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "844:5:5"
																}
															]
														},
														{
															"nativeSrc": "894:15:5",
															"nodeType": "YulAssignment",
															"src": "894:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "904:5:5",
																"nodeType": "YulIdentifier",
																"src": "904:5:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "894:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "894:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "615:300:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "660:9:5",
														"nodeType": "YulTypedName",
														"src": "660:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "671:7:5",
														"nodeType": "YulTypedName",
														"src": "671:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "683:6:5",
														"nodeType": "YulTypedName",
														"src": "683:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "691:6:5",
														"nodeType": "YulTypedName",
														"src": "691:6:5",
														"type": ""
													}
												],
												"src": "615:300:5"
											},
											{
												"body": {
													"nativeSrc": "1015:92:5",
													"nodeType": "YulBlock",
													"src": "1015:92:5",
													"statements": [
														{
															"nativeSrc": "1025:26:5",
															"nodeType": "YulAssignment",
															"src": "1025:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1037:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1037:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1048:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1033:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1033:3:5"
																},
																"nativeSrc": "1033:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1033:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1025:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1025:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1067:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1067:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "1092:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "1092:6:5"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "1085:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "1085:6:5"
																				},
																				"nativeSrc": "1085:14:5",
																				"nodeType": "YulFunctionCall",
																				"src": "1085:14:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1078:6:5",
																			"nodeType": "YulIdentifier",
																			"src": "1078:6:5"
																		},
																		"nativeSrc": "1078:22:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1078:22:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1060:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1060:6:5"
																},
																"nativeSrc": "1060:41:5",
																"nodeType": "YulFunctionCall",
																"src": "1060:41:5"
															},
															"nativeSrc": "1060:41:5",
															"nodeType": "YulExpressionStatement",
															"src": "1060:41:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "920:187:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "984:9:5",
														"nodeType": "YulTypedName",
														"src": "984:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "995:6:5",
														"nodeType": "YulTypedName",
														"src": "995:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1006:4:5",
														"nodeType": "YulTypedName",
														"src": "1006:4:5",
														"type": ""
													}
												],
												"src": "920:187:5"
											},
											{
												"body": {
													"nativeSrc": "1213:76:5",
													"nodeType": "YulBlock",
													"src": "1213:76:5",
													"statements": [
														{
															"nativeSrc": "1223:26:5",
															"nodeType": "YulAssignment",
															"src": "1223:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1235:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1235:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1246:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1246:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1231:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1231:3:5"
																},
																"nativeSrc": "1231:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1231:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1223:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1223:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1265:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1265:9:5"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1276:6:5",
																		"nodeType": "YulIdentifier",
																		"src": "1276:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1258:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:5"
																},
																"nativeSrc": "1258:25:5",
																"nodeType": "YulFunctionCall",
																"src": "1258:25:5"
															},
															"nativeSrc": "1258:25:5",
															"nodeType": "YulExpressionStatement",
															"src": "1258:25:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1112:177:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1182:9:5",
														"nodeType": "YulTypedName",
														"src": "1182:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1193:6:5",
														"nodeType": "YulTypedName",
														"src": "1193:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1204:4:5",
														"nodeType": "YulTypedName",
														"src": "1204:4:5",
														"type": ""
													}
												],
												"src": "1112:177:5"
											},
											{
												"body": {
													"nativeSrc": "1398:270:5",
													"nodeType": "YulBlock",
													"src": "1398:270:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1444:16:5",
																"nodeType": "YulBlock",
																"src": "1444:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1453:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1453:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1456:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1456:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1446:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1446:6:5"
																			},
																			"nativeSrc": "1446:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1446:12:5"
																		},
																		"nativeSrc": "1446:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1446:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1419:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1419:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1428:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1428:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1415:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1415:3:5"
																		},
																		"nativeSrc": "1415:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1415:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1440:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1411:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1411:3:5"
																},
																"nativeSrc": "1411:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1411:32:5"
															},
															"nativeSrc": "1408:52:5",
															"nodeType": "YulIf",
															"src": "1408:52:5"
														},
														{
															"nativeSrc": "1469:39:5",
															"nodeType": "YulAssignment",
															"src": "1469:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1498:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1498:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1479:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1479:18:5"
																},
																"nativeSrc": "1479:29:5",
																"nodeType": "YulFunctionCall",
																"src": "1479:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1469:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1469:6:5"
																}
															]
														},
														{
															"nativeSrc": "1517:48:5",
															"nodeType": "YulAssignment",
															"src": "1517:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1550:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1550:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1561:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1561:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1546:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1546:3:5"
																		},
																		"nativeSrc": "1546:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1546:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1527:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "1527:18:5"
																},
																"nativeSrc": "1527:38:5",
																"nodeType": "YulFunctionCall",
																"src": "1527:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1517:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1517:6:5"
																}
															]
														},
														{
															"nativeSrc": "1574:14:5",
															"nodeType": "YulVariableDeclaration",
															"src": "1574:14:5",
															"value": {
																"kind": "number",
																"nativeSrc": "1587:1:5",
																"nodeType": "YulLiteral",
																"src": "1587:1:5",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1578:5:5",
																	"nodeType": "YulTypedName",
																	"src": "1578:5:5",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1597:41:5",
															"nodeType": "YulAssignment",
															"src": "1597:41:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1623:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1623:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1634:2:5",
																				"nodeType": "YulLiteral",
																				"src": "1634:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1619:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1619:3:5"
																		},
																		"nativeSrc": "1619:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1619:18:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1606:12:5",
																	"nodeType": "YulIdentifier",
																	"src": "1606:12:5"
																},
																"nativeSrc": "1606:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1606:32:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1597:5:5",
																	"nodeType": "YulIdentifier",
																	"src": "1597:5:5"
																}
															]
														},
														{
															"nativeSrc": "1647:15:5",
															"nodeType": "YulAssignment",
															"src": "1647:15:5",
															"value": {
																"name": "value",
																"nativeSrc": "1657:5:5",
																"nodeType": "YulIdentifier",
																"src": "1657:5:5"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "1647:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1647:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "1294:374:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1348:9:5",
														"nodeType": "YulTypedName",
														"src": "1348:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1359:7:5",
														"nodeType": "YulTypedName",
														"src": "1359:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1371:6:5",
														"nodeType": "YulTypedName",
														"src": "1371:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1379:6:5",
														"nodeType": "YulTypedName",
														"src": "1379:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1387:6:5",
														"nodeType": "YulTypedName",
														"src": "1387:6:5",
														"type": ""
													}
												],
												"src": "1294:374:5"
											},
											{
												"body": {
													"nativeSrc": "1770:87:5",
													"nodeType": "YulBlock",
													"src": "1770:87:5",
													"statements": [
														{
															"nativeSrc": "1780:26:5",
															"nodeType": "YulAssignment",
															"src": "1780:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1792:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1792:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1803:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1803:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1788:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1788:3:5"
																},
																"nativeSrc": "1788:18:5",
																"nodeType": "YulFunctionCall",
																"src": "1788:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1780:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "1780:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1822:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "1822:9:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1837:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1837:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1845:4:5",
																				"nodeType": "YulLiteral",
																				"src": "1845:4:5",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1833:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1833:3:5"
																		},
																		"nativeSrc": "1833:17:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1833:17:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1815:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "1815:6:5"
																},
																"nativeSrc": "1815:36:5",
																"nodeType": "YulFunctionCall",
																"src": "1815:36:5"
															},
															"nativeSrc": "1815:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "1815:36:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "1673:184:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1739:9:5",
														"nodeType": "YulTypedName",
														"src": "1739:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1750:6:5",
														"nodeType": "YulTypedName",
														"src": "1750:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1761:4:5",
														"nodeType": "YulTypedName",
														"src": "1761:4:5",
														"type": ""
													}
												],
												"src": "1673:184:5"
											},
											{
												"body": {
													"nativeSrc": "1932:116:5",
													"nodeType": "YulBlock",
													"src": "1932:116:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "1978:16:5",
																"nodeType": "YulBlock",
																"src": "1978:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1987:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1987:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1990:1:5",
																					"nodeType": "YulLiteral",
																					"src": "1990:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1980:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "1980:6:5"
																			},
																			"nativeSrc": "1980:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "1980:12:5"
																		},
																		"nativeSrc": "1980:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "1980:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1953:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "1953:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1962:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "1962:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1949:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "1949:3:5"
																		},
																		"nativeSrc": "1949:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "1949:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1974:2:5",
																		"nodeType": "YulLiteral",
																		"src": "1974:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1945:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "1945:3:5"
																},
																"nativeSrc": "1945:32:5",
																"nodeType": "YulFunctionCall",
																"src": "1945:32:5"
															},
															"nativeSrc": "1942:52:5",
															"nodeType": "YulIf",
															"src": "1942:52:5"
														},
														{
															"nativeSrc": "2003:39:5",
															"nodeType": "YulAssignment",
															"src": "2003:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2032:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2032:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2013:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2013:18:5"
																},
																"nativeSrc": "2013:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2013:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2003:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2003:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1862:186:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1898:9:5",
														"nodeType": "YulTypedName",
														"src": "1898:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1909:7:5",
														"nodeType": "YulTypedName",
														"src": "1909:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1921:6:5",
														"nodeType": "YulTypedName",
														"src": "1921:6:5",
														"type": ""
													}
												],
												"src": "1862:186:5"
											},
											{
												"body": {
													"nativeSrc": "2140:173:5",
													"nodeType": "YulBlock",
													"src": "2140:173:5",
													"statements": [
														{
															"body": {
																"nativeSrc": "2186:16:5",
																"nodeType": "YulBlock",
																"src": "2186:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2195:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2195:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2198:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2198:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2188:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2188:6:5"
																			},
																			"nativeSrc": "2188:12:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2188:12:5"
																		},
																		"nativeSrc": "2188:12:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2188:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2161:7:5",
																				"nodeType": "YulIdentifier",
																				"src": "2161:7:5"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2170:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2170:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2157:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2157:3:5"
																		},
																		"nativeSrc": "2157:23:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2157:23:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2182:2:5",
																		"nodeType": "YulLiteral",
																		"src": "2182:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2153:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2153:3:5"
																},
																"nativeSrc": "2153:32:5",
																"nodeType": "YulFunctionCall",
																"src": "2153:32:5"
															},
															"nativeSrc": "2150:52:5",
															"nodeType": "YulIf",
															"src": "2150:52:5"
														},
														{
															"nativeSrc": "2211:39:5",
															"nodeType": "YulAssignment",
															"src": "2211:39:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2240:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "2240:9:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2221:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2221:18:5"
																},
																"nativeSrc": "2221:29:5",
																"nodeType": "YulFunctionCall",
																"src": "2221:29:5"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2211:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:5"
																}
															]
														},
														{
															"nativeSrc": "2259:48:5",
															"nodeType": "YulAssignment",
															"src": "2259:48:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2292:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "2292:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2303:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2303:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2288:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "2288:3:5"
																		},
																		"nativeSrc": "2288:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2288:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2269:18:5",
																	"nodeType": "YulIdentifier",
																	"src": "2269:18:5"
																},
																"nativeSrc": "2269:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2269:38:5"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2259:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2259:6:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "2053:260:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2098:9:5",
														"nodeType": "YulTypedName",
														"src": "2098:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2109:7:5",
														"nodeType": "YulTypedName",
														"src": "2109:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2121:6:5",
														"nodeType": "YulTypedName",
														"src": "2121:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2129:6:5",
														"nodeType": "YulTypedName",
														"src": "2129:6:5",
														"type": ""
													}
												],
												"src": "2053:260:5"
											},
											{
												"body": {
													"nativeSrc": "2373:325:5",
													"nodeType": "YulBlock",
													"src": "2373:325:5",
													"statements": [
														{
															"nativeSrc": "2383:22:5",
															"nodeType": "YulAssignment",
															"src": "2383:22:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2397:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2397:1:5",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "2400:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2400:4:5"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "2393:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2393:3:5"
																},
																"nativeSrc": "2393:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2393:12:5"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2383:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2383:6:5"
																}
															]
														},
														{
															"nativeSrc": "2414:38:5",
															"nodeType": "YulVariableDeclaration",
															"src": "2414:38:5",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "2444:4:5",
																		"nodeType": "YulIdentifier",
																		"src": "2444:4:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2450:1:5",
																		"nodeType": "YulLiteral",
																		"src": "2450:1:5",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2440:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2440:3:5"
																},
																"nativeSrc": "2440:12:5",
																"nodeType": "YulFunctionCall",
																"src": "2440:12:5"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "2418:18:5",
																	"nodeType": "YulTypedName",
																	"src": "2418:18:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2491:31:5",
																"nodeType": "YulBlock",
																"src": "2491:31:5",
																"statements": [
																	{
																		"nativeSrc": "2493:27:5",
																		"nodeType": "YulAssignment",
																		"src": "2493:27:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2507:6:5",
																					"nodeType": "YulIdentifier",
																					"src": "2507:6:5"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2515:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2515:4:5",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2503:3:5",
																				"nodeType": "YulIdentifier",
																				"src": "2503:3:5"
																			},
																			"nativeSrc": "2503:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2503:17:5"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2493:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2493:6:5"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2471:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2471:18:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2464:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "2464:6:5"
																},
																"nativeSrc": "2464:26:5",
																"nodeType": "YulFunctionCall",
																"src": "2464:26:5"
															},
															"nativeSrc": "2461:61:5",
															"nodeType": "YulIf",
															"src": "2461:61:5"
														},
														{
															"body": {
																"nativeSrc": "2581:111:5",
																"nodeType": "YulBlock",
																"src": "2581:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2602:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2602:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2609:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2609:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2614:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2614:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2605:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2605:3:5"
																					},
																					"nativeSrc": "2605:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2605:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2595:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2595:6:5"
																			},
																			"nativeSrc": "2595:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2595:31:5"
																		},
																		"nativeSrc": "2595:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2595:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2646:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2646:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2649:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2649:4:5",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2639:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2639:6:5"
																			},
																			"nativeSrc": "2639:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2639:15:5"
																		},
																		"nativeSrc": "2639:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2674:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2674:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2677:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2677:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2667:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:5"
																			},
																			"nativeSrc": "2667:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2667:15:5"
																		},
																		"nativeSrc": "2667:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2667:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2537:18:5",
																		"nodeType": "YulIdentifier",
																		"src": "2537:18:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2560:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2560:6:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2568:2:5",
																				"nodeType": "YulLiteral",
																				"src": "2568:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2557:2:5",
																			"nodeType": "YulIdentifier",
																			"src": "2557:2:5"
																		},
																		"nativeSrc": "2557:14:5",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:14:5"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2534:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2534:2:5"
																},
																"nativeSrc": "2534:38:5",
																"nodeType": "YulFunctionCall",
																"src": "2534:38:5"
															},
															"nativeSrc": "2531:161:5",
															"nodeType": "YulIf",
															"src": "2531:161:5"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "2318:380:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2353:4:5",
														"nodeType": "YulTypedName",
														"src": "2353:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2362:6:5",
														"nodeType": "YulTypedName",
														"src": "2362:6:5",
														"type": ""
													}
												],
												"src": "2318:380:5"
											},
											{
												"body": {
													"nativeSrc": "2751:174:5",
													"nodeType": "YulBlock",
													"src": "2751:174:5",
													"statements": [
														{
															"nativeSrc": "2761:16:5",
															"nodeType": "YulAssignment",
															"src": "2761:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2772:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2772:1:5"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2775:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2775:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2768:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2768:3:5"
																},
																"nativeSrc": "2768:9:5",
																"nodeType": "YulFunctionCall",
																"src": "2768:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "2761:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "2761:3:5"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2808:111:5",
																"nodeType": "YulBlock",
																"src": "2808:111:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2829:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2829:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2836:3:5",
																							"nodeType": "YulLiteral",
																							"src": "2836:3:5",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "2841:10:5",
																							"nodeType": "YulLiteral",
																							"src": "2841:10:5",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "2832:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "2832:3:5"
																					},
																					"nativeSrc": "2832:20:5",
																					"nodeType": "YulFunctionCall",
																					"src": "2832:20:5"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2822:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2822:6:5"
																			},
																			"nativeSrc": "2822:31:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:31:5"
																		},
																		"nativeSrc": "2822:31:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2822:31:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2873:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2873:1:5",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2876:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2876:4:5",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2866:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2866:6:5"
																			},
																			"nativeSrc": "2866:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2866:15:5"
																		},
																		"nativeSrc": "2866:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2866:15:5"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2901:1:5",
																					"nodeType": "YulLiteral",
																					"src": "2901:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2904:4:5",
																					"nodeType": "YulLiteral",
																					"src": "2904:4:5",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2894:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "2894:6:5"
																			},
																			"nativeSrc": "2894:15:5",
																			"nodeType": "YulFunctionCall",
																			"src": "2894:15:5"
																		},
																		"nativeSrc": "2894:15:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "2894:15:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2792:1:5",
																		"nodeType": "YulIdentifier",
																		"src": "2792:1:5"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "2795:3:5",
																		"nodeType": "YulIdentifier",
																		"src": "2795:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2789:2:5",
																	"nodeType": "YulIdentifier",
																	"src": "2789:2:5"
																},
																"nativeSrc": "2789:10:5",
																"nodeType": "YulFunctionCall",
																"src": "2789:10:5"
															},
															"nativeSrc": "2786:133:5",
															"nodeType": "YulIf",
															"src": "2786:133:5"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "2703:222:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2734:1:5",
														"nodeType": "YulTypedName",
														"src": "2734:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2737:1:5",
														"nodeType": "YulTypedName",
														"src": "2737:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "2743:3:5",
														"nodeType": "YulTypedName",
														"src": "2743:3:5",
														"type": ""
													}
												],
												"src": "2703:222:5"
											},
											{
												"body": {
													"nativeSrc": "3104:227:5",
													"nodeType": "YulBlock",
													"src": "3104:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3121:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3121:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3132:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3132:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3114:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:5"
																},
																"nativeSrc": "3114:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3114:21:5"
															},
															"nativeSrc": "3114:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3114:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3155:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3155:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3166:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3166:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3151:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3151:3:5"
																		},
																		"nativeSrc": "3151:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3151:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3171:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3171:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3144:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3144:6:5"
																},
																"nativeSrc": "3144:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3144:30:5"
															},
															"nativeSrc": "3144:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3144:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3194:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3194:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3205:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3190:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3190:3:5"
																		},
																		"nativeSrc": "3190:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:18:5"
																	},
																	{
																		"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
																		"kind": "string",
																		"nativeSrc": "3210:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3210:34:5",
																		"type": "",
																		"value": "ERC20: decreased allowance below"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3183:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3183:6:5"
																},
																"nativeSrc": "3183:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3183:62:5"
															},
															"nativeSrc": "3183:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3183:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3265:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3265:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3276:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3276:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3261:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3261:3:5"
																		},
																		"nativeSrc": "3261:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3261:18:5"
																	},
																	{
																		"hexValue": "207a65726f",
																		"kind": "string",
																		"nativeSrc": "3281:7:5",
																		"nodeType": "YulLiteral",
																		"src": "3281:7:5",
																		"type": "",
																		"value": " zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3254:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3254:6:5"
																},
																"nativeSrc": "3254:35:5",
																"nodeType": "YulFunctionCall",
																"src": "3254:35:5"
															},
															"nativeSrc": "3254:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "3254:35:5"
														},
														{
															"nativeSrc": "3298:27:5",
															"nodeType": "YulAssignment",
															"src": "3298:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3310:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3310:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3321:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3321:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3306:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3306:3:5"
																},
																"nativeSrc": "3306:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3306:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3298:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3298:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2930:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3081:9:5",
														"nodeType": "YulTypedName",
														"src": "3081:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3095:4:5",
														"nodeType": "YulTypedName",
														"src": "3095:4:5",
														"type": ""
													}
												],
												"src": "2930:401:5"
											},
											{
												"body": {
													"nativeSrc": "3510:226:5",
													"nodeType": "YulBlock",
													"src": "3510:226:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3527:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3527:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3538:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3538:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3520:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3520:6:5"
																},
																"nativeSrc": "3520:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3520:21:5"
															},
															"nativeSrc": "3520:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3520:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3561:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3561:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3572:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3572:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3557:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:5"
																		},
																		"nativeSrc": "3557:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3577:2:5",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3550:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3550:6:5"
																},
																"nativeSrc": "3550:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3550:30:5"
															},
															"nativeSrc": "3550:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3550:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3600:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3600:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3611:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3611:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3596:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3596:3:5"
																		},
																		"nativeSrc": "3596:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3596:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
																		"kind": "string",
																		"nativeSrc": "3616:34:5",
																		"nodeType": "YulLiteral",
																		"src": "3616:34:5",
																		"type": "",
																		"value": "ERC20: approve from the zero add"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3589:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:5"
																},
																"nativeSrc": "3589:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3589:62:5"
															},
															"nativeSrc": "3589:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3589:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3671:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3671:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3682:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3682:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3667:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3667:3:5"
																		},
																		"nativeSrc": "3667:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3667:18:5"
																	},
																	{
																		"hexValue": "72657373",
																		"kind": "string",
																		"nativeSrc": "3687:6:5",
																		"nodeType": "YulLiteral",
																		"src": "3687:6:5",
																		"type": "",
																		"value": "ress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3660:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3660:6:5"
																},
																"nativeSrc": "3660:34:5",
																"nodeType": "YulFunctionCall",
																"src": "3660:34:5"
															},
															"nativeSrc": "3660:34:5",
															"nodeType": "YulExpressionStatement",
															"src": "3660:34:5"
														},
														{
															"nativeSrc": "3703:27:5",
															"nodeType": "YulAssignment",
															"src": "3703:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:3:5",
																		"nodeType": "YulLiteral",
																		"src": "3726:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:5"
																},
																"nativeSrc": "3711:19:5",
																"nodeType": "YulFunctionCall",
																"src": "3711:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3336:400:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3487:9:5",
														"nodeType": "YulTypedName",
														"src": "3487:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3501:4:5",
														"nodeType": "YulTypedName",
														"src": "3501:4:5",
														"type": ""
													}
												],
												"src": "3336:400:5"
											},
											{
												"body": {
													"nativeSrc": "3915:224:5",
													"nodeType": "YulBlock",
													"src": "3915:224:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3932:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "3932:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3943:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3943:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3925:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3925:6:5"
																},
																"nativeSrc": "3925:21:5",
																"nodeType": "YulFunctionCall",
																"src": "3925:21:5"
															},
															"nativeSrc": "3925:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "3925:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3966:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "3966:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3977:2:5",
																				"nodeType": "YulLiteral",
																				"src": "3977:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3962:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "3962:3:5"
																		},
																		"nativeSrc": "3962:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "3962:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:5",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:5",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3955:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3955:6:5"
																},
																"nativeSrc": "3955:30:5",
																"nodeType": "YulFunctionCall",
																"src": "3955:30:5"
															},
															"nativeSrc": "3955:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "3955:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4005:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4005:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4016:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4016:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4001:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:5"
																		},
																		"nativeSrc": "4001:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4001:18:5"
																	},
																	{
																		"hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
																		"kind": "string",
																		"nativeSrc": "4021:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4021:34:5",
																		"type": "",
																		"value": "ERC20: approve to the zero addre"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3994:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:5"
																},
																"nativeSrc": "3994:62:5",
																"nodeType": "YulFunctionCall",
																"src": "3994:62:5"
															},
															"nativeSrc": "3994:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "3994:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4076:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4076:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4087:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4087:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4072:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4072:3:5"
																		},
																		"nativeSrc": "4072:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4072:18:5"
																	},
																	{
																		"hexValue": "7373",
																		"kind": "string",
																		"nativeSrc": "4092:4:5",
																		"nodeType": "YulLiteral",
																		"src": "4092:4:5",
																		"type": "",
																		"value": "ss"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4065:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4065:6:5"
																},
																"nativeSrc": "4065:32:5",
																"nodeType": "YulFunctionCall",
																"src": "4065:32:5"
															},
															"nativeSrc": "4065:32:5",
															"nodeType": "YulExpressionStatement",
															"src": "4065:32:5"
														},
														{
															"nativeSrc": "4106:27:5",
															"nodeType": "YulAssignment",
															"src": "4106:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4118:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4118:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4129:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4129:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4114:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4114:3:5"
																},
																"nativeSrc": "4114:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4114:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4106:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4106:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3741:398:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3892:9:5",
														"nodeType": "YulTypedName",
														"src": "3892:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3906:4:5",
														"nodeType": "YulTypedName",
														"src": "3906:4:5",
														"type": ""
													}
												],
												"src": "3741:398:5"
											},
											{
												"body": {
													"nativeSrc": "4318:179:5",
													"nodeType": "YulBlock",
													"src": "4318:179:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4335:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4335:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4346:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4346:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4328:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4328:6:5"
																},
																"nativeSrc": "4328:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4328:21:5"
															},
															"nativeSrc": "4328:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4328:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4369:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4369:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4380:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4380:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4365:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4365:3:5"
																		},
																		"nativeSrc": "4365:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4365:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4385:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4385:2:5",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4358:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4358:6:5"
																},
																"nativeSrc": "4358:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4358:30:5"
															},
															"nativeSrc": "4358:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4358:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4408:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4408:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4419:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4419:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4404:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4404:3:5"
																		},
																		"nativeSrc": "4404:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4404:18:5"
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "4424:31:5",
																		"nodeType": "YulLiteral",
																		"src": "4424:31:5",
																		"type": "",
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4397:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4397:6:5"
																},
																"nativeSrc": "4397:59:5",
																"nodeType": "YulFunctionCall",
																"src": "4397:59:5"
															},
															"nativeSrc": "4397:59:5",
															"nodeType": "YulExpressionStatement",
															"src": "4397:59:5"
														},
														{
															"nativeSrc": "4465:26:5",
															"nodeType": "YulAssignment",
															"src": "4465:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4477:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4477:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4488:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4488:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4473:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4473:3:5"
																},
																"nativeSrc": "4473:18:5",
																"nodeType": "YulFunctionCall",
																"src": "4473:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4465:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4465:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4144:353:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4295:9:5",
														"nodeType": "YulTypedName",
														"src": "4295:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4309:4:5",
														"nodeType": "YulTypedName",
														"src": "4309:4:5",
														"type": ""
													}
												],
												"src": "4144:353:5"
											},
											{
												"body": {
													"nativeSrc": "4676:227:5",
													"nodeType": "YulBlock",
													"src": "4676:227:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4693:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4693:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4704:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4704:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4686:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4686:6:5"
																},
																"nativeSrc": "4686:21:5",
																"nodeType": "YulFunctionCall",
																"src": "4686:21:5"
															},
															"nativeSrc": "4686:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "4686:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4727:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4727:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4738:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4738:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4723:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4723:3:5"
																		},
																		"nativeSrc": "4723:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4723:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:5",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:5",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4716:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4716:6:5"
																},
																"nativeSrc": "4716:30:5",
																"nodeType": "YulFunctionCall",
																"src": "4716:30:5"
															},
															"nativeSrc": "4716:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "4716:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4766:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4766:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4777:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4777:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4762:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4762:3:5"
																		},
																		"nativeSrc": "4762:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4762:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
																		"kind": "string",
																		"nativeSrc": "4782:34:5",
																		"nodeType": "YulLiteral",
																		"src": "4782:34:5",
																		"type": "",
																		"value": "ERC20: transfer from the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4755:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4755:6:5"
																},
																"nativeSrc": "4755:62:5",
																"nodeType": "YulFunctionCall",
																"src": "4755:62:5"
															},
															"nativeSrc": "4755:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "4755:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4837:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "4837:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4848:2:5",
																				"nodeType": "YulLiteral",
																				"src": "4848:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4833:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "4833:3:5"
																		},
																		"nativeSrc": "4833:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "4833:18:5"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nativeSrc": "4853:7:5",
																		"nodeType": "YulLiteral",
																		"src": "4853:7:5",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4826:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "4826:6:5"
																},
																"nativeSrc": "4826:35:5",
																"nodeType": "YulFunctionCall",
																"src": "4826:35:5"
															},
															"nativeSrc": "4826:35:5",
															"nodeType": "YulExpressionStatement",
															"src": "4826:35:5"
														},
														{
															"nativeSrc": "4870:27:5",
															"nodeType": "YulAssignment",
															"src": "4870:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4882:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "4882:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4893:3:5",
																		"nodeType": "YulLiteral",
																		"src": "4893:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4878:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "4878:3:5"
																},
																"nativeSrc": "4878:19:5",
																"nodeType": "YulFunctionCall",
																"src": "4878:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4870:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "4870:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4502:401:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4653:9:5",
														"nodeType": "YulTypedName",
														"src": "4653:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4667:4:5",
														"nodeType": "YulTypedName",
														"src": "4667:4:5",
														"type": ""
													}
												],
												"src": "4502:401:5"
											},
											{
												"body": {
													"nativeSrc": "5082:225:5",
													"nodeType": "YulBlock",
													"src": "5082:225:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5099:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5099:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5110:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5110:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5092:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5092:6:5"
																},
																"nativeSrc": "5092:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5092:21:5"
															},
															"nativeSrc": "5092:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5092:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5133:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5144:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5144:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5129:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:5"
																		},
																		"nativeSrc": "5129:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5129:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5149:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5149:2:5",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5122:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5122:6:5"
																},
																"nativeSrc": "5122:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5122:30:5"
															},
															"nativeSrc": "5122:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5122:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5172:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5172:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5183:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5183:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5168:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5168:3:5"
																		},
																		"nativeSrc": "5168:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5168:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
																		"kind": "string",
																		"nativeSrc": "5188:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5188:34:5",
																		"type": "",
																		"value": "ERC20: transfer to the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5161:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5161:6:5"
																},
																"nativeSrc": "5161:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5161:62:5"
															},
															"nativeSrc": "5161:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5161:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5243:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5243:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5254:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5254:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5239:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5239:3:5"
																		},
																		"nativeSrc": "5239:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:18:5"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nativeSrc": "5259:5:5",
																		"nodeType": "YulLiteral",
																		"src": "5259:5:5",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5232:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5232:6:5"
																},
																"nativeSrc": "5232:33:5",
																"nodeType": "YulFunctionCall",
																"src": "5232:33:5"
															},
															"nativeSrc": "5232:33:5",
															"nodeType": "YulExpressionStatement",
															"src": "5232:33:5"
														},
														{
															"nativeSrc": "5274:27:5",
															"nodeType": "YulAssignment",
															"src": "5274:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5286:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5286:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5297:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5297:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5282:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5282:3:5"
																},
																"nativeSrc": "5282:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5282:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5274:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5274:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4908:399:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5059:9:5",
														"nodeType": "YulTypedName",
														"src": "5059:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5073:4:5",
														"nodeType": "YulTypedName",
														"src": "5073:4:5",
														"type": ""
													}
												],
												"src": "4908:399:5"
											},
											{
												"body": {
													"nativeSrc": "5486:228:5",
													"nodeType": "YulBlock",
													"src": "5486:228:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5503:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5503:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5514:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5514:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5496:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5496:6:5"
																},
																"nativeSrc": "5496:21:5",
																"nodeType": "YulFunctionCall",
																"src": "5496:21:5"
															},
															"nativeSrc": "5496:21:5",
															"nodeType": "YulExpressionStatement",
															"src": "5496:21:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5537:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5537:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5548:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5548:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5533:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5533:3:5"
																		},
																		"nativeSrc": "5533:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5533:18:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5553:2:5",
																		"nodeType": "YulLiteral",
																		"src": "5553:2:5",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5526:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5526:6:5"
																},
																"nativeSrc": "5526:30:5",
																"nodeType": "YulFunctionCall",
																"src": "5526:30:5"
															},
															"nativeSrc": "5526:30:5",
															"nodeType": "YulExpressionStatement",
															"src": "5526:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5576:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5576:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5587:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5587:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5572:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5572:3:5"
																		},
																		"nativeSrc": "5572:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5572:18:5"
																	},
																	{
																		"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
																		"kind": "string",
																		"nativeSrc": "5592:34:5",
																		"nodeType": "YulLiteral",
																		"src": "5592:34:5",
																		"type": "",
																		"value": "ERC20: transfer amount exceeds b"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5565:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5565:6:5"
																},
																"nativeSrc": "5565:62:5",
																"nodeType": "YulFunctionCall",
																"src": "5565:62:5"
															},
															"nativeSrc": "5565:62:5",
															"nodeType": "YulExpressionStatement",
															"src": "5565:62:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5647:9:5",
																				"nodeType": "YulIdentifier",
																				"src": "5647:9:5"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5658:2:5",
																				"nodeType": "YulLiteral",
																				"src": "5658:2:5",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5643:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "5643:3:5"
																		},
																		"nativeSrc": "5643:18:5",
																		"nodeType": "YulFunctionCall",
																		"src": "5643:18:5"
																	},
																	{
																		"hexValue": "616c616e6365",
																		"kind": "string",
																		"nativeSrc": "5663:8:5",
																		"nodeType": "YulLiteral",
																		"src": "5663:8:5",
																		"type": "",
																		"value": "alance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5636:6:5",
																	"nodeType": "YulIdentifier",
																	"src": "5636:6:5"
																},
																"nativeSrc": "5636:36:5",
																"nodeType": "YulFunctionCall",
																"src": "5636:36:5"
															},
															"nativeSrc": "5636:36:5",
															"nodeType": "YulExpressionStatement",
															"src": "5636:36:5"
														},
														{
															"nativeSrc": "5681:27:5",
															"nodeType": "YulAssignment",
															"src": "5681:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5693:9:5",
																		"nodeType": "YulIdentifier",
																		"src": "5693:9:5"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:3:5",
																		"nodeType": "YulLiteral",
																		"src": "5704:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5689:3:5",
																	"nodeType": "YulIdentifier",
																	"src": "5689:3:5"
																},
																"nativeSrc": "5689:19:5",
																"nodeType": "YulFunctionCall",
																"src": "5689:19:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5681:4:5",
																	"nodeType": "YulIdentifier",
																	"src": "5681:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5312:402:5",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5463:9:5",
														"nodeType": "YulTypedName",
														"src": "5463:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5477:4:5",
														"nodeType": "YulTypedName",
														"src": "5477:4:5",
														"type": ""
													}
												],
												"src": "5312:402:5"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c8063395093511161006e578063395093511461011f57806370a082311461013257806395d89b411461015a578063a457c2d714610162578063a9059cbb14610175578063dd62ed3e14610188575f5ffd5b806306fdde03146100aa578063095ea7b3146100c857806318160ddd146100eb57806323b872dd146100fd578063313ce56714610110575b5f5ffd5b6100b261019b565b6040516100bf91906106b4565b60405180910390f35b6100db6100d6366004610704565b61022b565b60405190151581526020016100bf565b6002545b6040519081526020016100bf565b6100db61010b36600461072c565b610244565b604051601281526020016100bf565b6100db61012d366004610704565b610267565b6100ef610140366004610766565b6001600160a01b03165f9081526020819052604090205490565b6100b2610288565b6100db610170366004610704565b610297565b6100db610183366004610704565b610316565b6100ef610196366004610786565b610323565b6060600380546101aa906107b7565b80601f01602080910402602001604051908101604052809291908181526020018280546101d6906107b7565b80156102215780601f106101f857610100808354040283529160200191610221565b820191905f5260205f20905b81548152906001019060200180831161020457829003601f168201915b5050505050905090565b5f3361023881858561034d565b60019150505b92915050565b5f33610251858285610470565b61025c8585856104e8565b506001949350505050565b5f336102388185856102798383610323565b61028391906107ef565b61034d565b6060600480546101aa906107b7565b5f33816102a48286610323565b9050838110156103095760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61025c828686840361034d565b5f336102388185856104e8565b6001600160a01b039182165f90815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103af5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610300565b6001600160a01b0382166104105760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610300565b6001600160a01b038381165f8181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b5f61047b8484610323565b90505f1981146104e257818110156104d55760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610300565b6104e2848484840361034d565b50505050565b6001600160a01b03831661054c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610300565b6001600160a01b0382166105ae5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610300565b6001600160a01b0383165f90815260208190526040902054818110156106255760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610300565b6001600160a01b038085165f9081526020819052604080822085850390559185168152908120805484929061065b9084906107ef565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106a791815260200190565b60405180910390a36104e2565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b03811681146106ff575f5ffd5b919050565b5f5f60408385031215610715575f5ffd5b61071e836106e9565b946020939093013593505050565b5f5f5f6060848603121561073e575f5ffd5b610747846106e9565b9250610755602085016106e9565b929592945050506040919091013590565b5f60208284031215610776575f5ffd5b61077f826106e9565b9392505050565b5f5f60408385031215610797575f5ffd5b6107a0836106e9565b91506107ae602084016106e9565b90509250929050565b600181811c908216806107cb57607f821691505b6020821081036107e957634e487b7160e01b5f52602260045260245ffd5b50919050565b8082018082111561023e57634e487b7160e01b5f52601160045260245ffdfea26469706673582212209b4cc0c6b4669163b306db33c53129294b4665cd97a2dd34f3885ce3f830f93864736f6c634300081d0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x132 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15A JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x162 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x188 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEB JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0xFD JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x110 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xB2 PUSH2 0x19B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP2 SWAP1 PUSH2 0x6B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDB PUSH2 0xD6 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x22B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x10B CALLDATASIZE PUSH1 0x4 PUSH2 0x72C JUMP JUMPDEST PUSH2 0x244 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xBF JUMP JUMPDEST PUSH2 0xDB PUSH2 0x12D CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x267 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x140 CALLDATASIZE PUSH1 0x4 PUSH2 0x766 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB2 PUSH2 0x288 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x170 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x297 JUMP JUMPDEST PUSH2 0xDB PUSH2 0x183 CALLDATASIZE PUSH1 0x4 PUSH2 0x704 JUMP JUMPDEST PUSH2 0x316 JUMP JUMPDEST PUSH2 0xEF PUSH2 0x196 CALLDATASIZE PUSH1 0x4 PUSH2 0x786 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1D6 SWAP1 PUSH2 0x7B7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x221 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1F8 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x221 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x204 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x251 DUP6 DUP3 DUP6 PUSH2 0x470 JUMP JUMPDEST PUSH2 0x25C DUP6 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x279 DUP4 DUP4 PUSH2 0x323 JUMP JUMPDEST PUSH2 0x283 SWAP2 SWAP1 PUSH2 0x7EF JUMP JUMPDEST PUSH2 0x34D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AA SWAP1 PUSH2 0x7B7 JUMP JUMPDEST PUSH0 CALLER DUP2 PUSH2 0x2A4 DUP3 DUP7 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x309 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x25C DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST PUSH0 CALLER PUSH2 0x238 DUP2 DUP6 DUP6 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3AF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x47B DUP5 DUP5 PUSH2 0x323 JUMP JUMPDEST SWAP1 POP PUSH0 NOT DUP2 EQ PUSH2 0x4E2 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x300 JUMP JUMPDEST PUSH2 0x4E2 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x34D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5AE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x625 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x300 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x65B SWAP1 DUP5 SWAP1 PUSH2 0x7EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6A7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4E2 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6FF JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x715 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x71E DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x73E JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x747 DUP5 PUSH2 0x6E9 JUMP JUMPDEST SWAP3 POP PUSH2 0x755 PUSH1 0x20 DUP6 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x776 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x77F DUP3 PUSH2 0x6E9 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x797 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x7A0 DUP4 PUSH2 0x6E9 JUMP JUMPDEST SWAP2 POP PUSH2 0x7AE PUSH1 0x20 DUP5 ADD PUSH2 0x6E9 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x7CB JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x7E9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x23E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0x4C 0xC0 0xC6 0xB4 PUSH7 0x9163B306DB33C5 BALANCE 0x29 0x29 0x4B CHAINID PUSH6 0xCD97A2DD34F3 DUP9 TLOAD CALLF 0xF830 EXTDELEGATECALL CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD SAR STOP CALLER ",
							"sourceMap": "1900:336:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5706:197;;;;;;:::i;:::-;;:::i;:::-;;;1085:14:5;;1078:22;1060:41;;1048:2;1033:18;5706:197:0;920:187:5;4517:106:0;4604:12;;4517:106;;;1258:25:5;;;1246:2;1231:18;4517:106:0;1112:177:5;6465:286:0;;;;;;:::i;:::-;;:::i;4366:91::-;;;4448:2;1815:36:5;;1803:2;1788:18;4366:91:0;1673:184:5;7146:234:0;;;;;;:::i;:::-;;:::i;4681:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;4781:18:0;4755:7;4781:18;;;;;;;;;;;;4681:125;3640:102;;;:::i;7867:427::-;;;;;;:::i;:::-;;:::i;5002:189::-;;;;;;:::i;:::-;;:::i;5249:149::-;;;;;;:::i;:::-;;:::i;3429:98::-;3483:13;3515:5;3508:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3429:98;:::o;5706:197::-;5789:4;1992:10:3;5843:32:0;1992:10:3;5859:7:0;5868:6;5843:8;:32::i;:::-;5892:4;5885:11;;;5706:197;;;;;:::o;6465:286::-;6592:4;1992:10:3;6648:38:0;6664:4;1992:10:3;6679:6:0;6648:15;:38::i;:::-;6696:27;6706:4;6712:2;6716:6;6696:9;:27::i;:::-;-1:-1:-1;6740:4:0;;6465:286;-1:-1:-1;;;;6465:286:0:o;7146:234::-;7234:4;1992:10:3;7288:64:0;1992:10:3;7304:7:0;7341:10;7313:25;1992:10:3;7304:7:0;7313:9;:25::i;:::-;:38;;;;:::i;:::-;7288:8;:64::i;3640:102::-;3696:13;3728:7;3721:14;;;;;:::i;7867:427::-;7960:4;1992:10:3;7960:4:0;8041:25;1992:10:3;8058:7:0;8041:9;:25::i;:::-;8014:52;;8104:15;8084:16;:35;;8076:85;;;;-1:-1:-1;;;8076:85:0;;3132:2:5;8076:85:0;;;3114:21:5;3171:2;3151:18;;;3144:30;3210:34;3190:18;;;3183:62;-1:-1:-1;;;3261:18:5;;;3254:35;3306:19;;8076:85:0;;;;;;;;;8195:60;8204:5;8211:7;8239:15;8220:16;:34;8195:8;:60::i;5002:189::-;5081:4;1992:10:3;5135:28:0;1992:10:3;5152:2:0;5156:6;5135:9;:28::i;5249:149::-;-1:-1:-1;;;;;5364:18:0;;;5338:7;5364:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5249:149::o;11383:370::-;-1:-1:-1;;;;;11514:19:0;;11506:68;;;;-1:-1:-1;;;11506:68:0;;3538:2:5;11506:68:0;;;3520:21:5;3577:2;3557:18;;;3550:30;3616:34;3596:18;;;3589:62;-1:-1:-1;;;3667:18:5;;;3660:34;3711:19;;11506:68:0;3336:400:5;11506:68:0;-1:-1:-1;;;;;11592:21:0;;11584:68;;;;-1:-1:-1;;;11584:68:0;;3943:2:5;11584:68:0;;;3925:21:5;3982:2;3962:18;;;3955:30;4021:34;4001:18;;;3994:62;-1:-1:-1;;;4072:18:5;;;4065:32;4114:19;;11584:68:0;3741:398:5;11584:68:0;-1:-1:-1;;;;;11663:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11714:32;;1258:25:5;;;11714:32:0;;1231:18:5;11714:32:0;;;;;;;11383:370;;;:::o;12034:441::-;12164:24;12191:25;12201:5;12208:7;12191:9;:25::i;:::-;12164:52;;-1:-1:-1;;12230:16:0;:37;12226:243;;12311:6;12291:16;:26;;12283:68;;;;-1:-1:-1;;;12283:68:0;;4346:2:5;12283:68:0;;;4328:21:5;4385:2;4365:18;;;4358:30;4424:31;4404:18;;;4397:59;4473:18;;12283:68:0;4144:353:5;12283:68:0;12393:51;12402:5;12409:7;12437:6;12418:16;:25;12393:8;:51::i;:::-;12154:321;12034:441;;;:::o;8748:651::-;-1:-1:-1;;;;;8874:18:0;;8866:68;;;;-1:-1:-1;;;8866:68:0;;4704:2:5;8866:68:0;;;4686:21:5;4743:2;4723:18;;;4716:30;4782:34;4762:18;;;4755:62;-1:-1:-1;;;4833:18:5;;;4826:35;4878:19;;8866:68:0;4502:401:5;8866:68:0;-1:-1:-1;;;;;8952:16:0;;8944:64;;;;-1:-1:-1;;;8944:64:0;;5110:2:5;8944:64:0;;;5092:21:5;5149:2;5129:18;;;5122:30;5188:34;5168:18;;;5161:62;-1:-1:-1;;;5239:18:5;;;5232:33;5282:19;;8944:64:0;4908:399:5;8944:64:0;-1:-1:-1;;;;;9090:15:0;;9068:19;9090:15;;;;;;;;;;;9123:21;;;;9115:72;;;;-1:-1:-1;;;9115:72:0;;5514:2:5;9115:72:0;;;5496:21:5;5553:2;5533:18;;;5526:30;5592:34;5572:18;;;5565:62;-1:-1:-1;;;5643:18:5;;;5636:36;5689:19;;9115:72:0;5312:402:5;9115:72:0;-1:-1:-1;;;;;9221:15:0;;;:9;:15;;;;;;;;;;;9239:20;;;9221:38;;9279:13;;;;;;;;:23;;9253:6;;9221:9;9279:23;;9253:6;;9279:23;:::i;:::-;;;;;;;;9333:2;-1:-1:-1;;;;;9318:26:0;9327:4;-1:-1:-1;;;;;9318:26:0;;9337:6;9318:26;;;;1258:25:5;;1246:2;1231:18;;1112:177;9318:26:0;;;;;;;;9355:37;13059:121;14:418:5;163:2;152:9;145:21;126:4;195:6;189:13;238:6;233:2;222:9;218:18;211:34;297:6;292:2;284:6;280:15;275:2;264:9;260:18;254:50;353:1;348:2;339:6;328:9;324:22;320:31;313:42;423:2;416;412:7;407:2;399:6;395:15;391:29;380:9;376:45;372:54;364:62;;;14:418;;;;:::o;437:173::-;505:20;;-1:-1:-1;;;;;554:31:5;;544:42;;534:70;;600:1;597;590:12;534:70;437:173;;;:::o;615:300::-;683:6;691;744:2;732:9;723:7;719:23;715:32;712:52;;;760:1;757;750:12;712:52;783:29;802:9;783:29;:::i;:::-;773:39;881:2;866:18;;;;853:32;;-1:-1:-1;;;615:300:5:o;1294:374::-;1371:6;1379;1387;1440:2;1428:9;1419:7;1415:23;1411:32;1408:52;;;1456:1;1453;1446:12;1408:52;1479:29;1498:9;1479:29;:::i;:::-;1469:39;;1527:38;1561:2;1550:9;1546:18;1527:38;:::i;:::-;1294:374;;1517:48;;-1:-1:-1;;;1634:2:5;1619:18;;;;1606:32;;1294:374::o;1862:186::-;1921:6;1974:2;1962:9;1953:7;1949:23;1945:32;1942:52;;;1990:1;1987;1980:12;1942:52;2013:29;2032:9;2013:29;:::i;:::-;2003:39;1862:186;-1:-1:-1;;;1862:186:5:o;2053:260::-;2121:6;2129;2182:2;2170:9;2161:7;2157:23;2153:32;2150:52;;;2198:1;2195;2188:12;2150:52;2221:29;2240:9;2221:29;:::i;:::-;2211:39;;2269:38;2303:2;2292:9;2288:18;2269:38;:::i;:::-;2259:48;;2053:260;;;;;:::o;2318:380::-;2397:1;2393:12;;;;2440;;;2461:61;;2515:4;2507:6;2503:17;2493:27;;2461:61;2568:2;2560:6;2557:14;2537:18;2534:38;2531:161;;2614:10;2609:3;2605:20;2602:1;2595:31;2649:4;2646:1;2639:15;2677:4;2674:1;2667:15;2531:161;;2318:380;;;:::o;2703:222::-;2768:9;;;2789:10;;;2786:133;;;2841:10;2836:3;2832:20;2829:1;2822:31;2876:4;2873:1;2866:15;2904:4;2901:1;2894:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "423200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "24623",
								"balanceOf(address)": "2559",
								"decimals()": "265",
								"decreaseAllowance(address,uint256)": "27010",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2325",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 2054,
									"end": 2234,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2179,
									"end": 2185,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 2173,
									"end": 2177,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3317,
									"end": 3322,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3317,
									"end": 3330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 3317,
									"end": 3330,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3350,
									"end": 3357,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3347,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 3340,
									"end": 3357,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3340,
									"end": 3357,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3251,
									"end": 3364,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2203,
									"end": 2213,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 2215,
									"end": 2226,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2197,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 2197,
									"end": 2202,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2197,
									"end": 2202,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2197,
									"end": 2227,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 2197,
									"end": 2227,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2054,
									"end": 2234,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9758,
									"end": 9779,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9758,
									"end": 9779,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 4208,
									"end": 4210,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 4190,
									"end": 4211,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4247,
									"end": 4249,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 4227,
									"end": 4245,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4227,
									"end": 4245,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4227,
									"end": 4245,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4220,
									"end": 4250,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4286,
									"end": 4319,
									"name": "PUSH",
									"source": 5,
									"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
								},
								{
									"begin": 4266,
									"end": 4284,
									"name": "PUSH",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 4266,
									"end": 4284,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4266,
									"end": 4284,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4259,
									"end": 4320,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4337,
									"end": 4355,
									"name": "PUSH",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 4337,
									"end": 4355,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 9750,
									"end": 9815,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9902,
									"end": 9908,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 9886,
									"end": 9898,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9886,
									"end": 9908,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9886,
									"end": 9908,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9927,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9936,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9927,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 9940,
									"end": 9946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 9918,
									"end": 9946,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9918,
									"end": 9946,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 4739,
									"end": 4764,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4739,
									"end": 4764,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 4739,
									"end": 4764,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 9978,
									"end": 9979,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4727,
									"end": 4729,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4712,
									"end": 4730,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 9961,
									"end": 9998,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9675,
									"end": 10064,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9675,
									"end": 10064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13059,
									"end": 13180,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13059,
									"end": 13180,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 146,
									"end": 869,
									"name": "tag",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 146,
									"end": 869,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 5,
									"value": "37"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 5,
									"value": "39"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 5,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 5,
									"value": "41"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 5,
									"value": "42"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 782,
									"end": 788,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 775,
									"end": 779,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 767,
									"end": 773,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 763,
									"end": 780,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 756,
									"end": 760,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 748,
									"end": 754,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 744,
									"end": 761,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 738,
									"end": 789,
									"name": "MCOPY",
									"source": 5
								},
								{
									"begin": 837,
									"end": 838,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 809,
									"end": 828,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 809,
									"end": 828,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 809,
									"end": 828,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 830,
									"end": 834,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 805,
									"end": 835,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 798,
									"end": 839,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 813,
									"end": 819,
									"name": "SWAP4",
									"source": 5
								},
								{
									"begin": 146,
									"end": 869,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 869,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "tag",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 982,
									"end": 988,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 990,
									"end": 996,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1004,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1051,
									"end": 1053,
									"name": "PUSH",
									"source": 5,
									"value": "60"
								},
								{
									"begin": 1039,
									"end": 1048,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1030,
									"end": 1037,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1026,
									"end": 1049,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1022,
									"end": 1054,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1067,
									"end": 1068,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1064,
									"end": 1065,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1057,
									"end": 1069,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "tag",
									"source": 5,
									"value": "44"
								},
								{
									"begin": 1019,
									"end": 1071,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1094,
									"end": 1110,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 1094,
									"end": 1110,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1122,
									"end": 1152,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1165,
									"end": 1166,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1163,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1155,
									"end": 1167,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "tag",
									"source": 5,
									"value": "45"
								},
								{
									"begin": 1119,
									"end": 1169,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1241,
									"end": 1248,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1232,
									"end": 1238,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1221,
									"end": 1230,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1217,
									"end": 1239,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1188,
									"end": 1249,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "tag",
									"source": 5,
									"value": "46"
								},
								{
									"begin": 1188,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1295,
									"end": 1297,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1280,
									"end": 1298,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1280,
									"end": 1298,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1274,
									"end": 1299,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1178,
									"end": 1249,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1178,
									"end": 1249,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1274,
									"end": 1299,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1311,
									"end": 1343,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1311,
									"end": 1343,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1356,
									"end": 1357,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1353,
									"end": 1354,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1346,
									"end": 1358,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "tag",
									"source": 5,
									"value": "47"
								},
								{
									"begin": 1308,
									"end": 1360,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1434,
									"end": 1441,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 1423,
									"end": 1431,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1412,
									"end": 1421,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 1408,
									"end": 1432,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "29"
								},
								{
									"begin": 1379,
									"end": 1442,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "tag",
									"source": 5,
									"value": "48"
								},
								{
									"begin": 1379,
									"end": 1442,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1442,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1442,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1369,
									"end": 1442,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1482,
									"end": 1484,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 1471,
									"end": 1480,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1467,
									"end": 1485,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 1461,
									"end": 1486,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1486,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1451,
									"end": 1486,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 874,
									"end": 1492,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "tag",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1576,
									"end": 1577,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 1572,
									"end": 1584,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1631,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1631,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1619,
									"end": 1631,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1694,
									"end": 1698,
									"name": "PUSH",
									"source": 5,
									"value": "7F"
								},
								{
									"begin": 1686,
									"end": 1692,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1682,
									"end": 1699,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 1672,
									"end": 1699,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1672,
									"end": 1699,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "tag",
									"source": 5,
									"value": "50"
								},
								{
									"begin": 1640,
									"end": 1701,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1747,
									"end": 1749,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1739,
									"end": 1745,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 1736,
									"end": 1750,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 1716,
									"end": 1734,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1713,
									"end": 1751,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1793,
									"end": 1803,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 1788,
									"end": 1791,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 1784,
									"end": 1804,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1774,
									"end": 1805,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1828,
									"end": 1832,
									"name": "PUSH",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1825,
									"end": 1826,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 1818,
									"end": 1833,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1856,
									"end": 1860,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 1853,
									"end": 1854,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1846,
									"end": 1861,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "tag",
									"source": 5,
									"value": "51"
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1710,
									"end": 1871,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1877,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1497,
									"end": 1877,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2110,
									"end": 2112,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2105,
									"end": 2108,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2102,
									"end": 2113,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 2099,
									"end": 2520,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2146,
									"end": 2151,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2143,
									"end": 2144,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2136,
									"end": 2152,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 2190,
									"end": 2194,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2187,
									"end": 2188,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2177,
									"end": 2195,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": 2260,
									"end": 2262,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2248,
									"end": 2258,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2244,
									"end": 2263,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2241,
									"end": 2242,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2237,
									"end": 2264,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2231,
									"end": 2235,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2227,
									"end": 2265,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2296,
									"end": 2300,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 2284,
									"end": 2294,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2281,
									"end": 2301,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2319,
									"end": 2323,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "tag",
									"source": 5,
									"value": "55"
								},
								{
									"begin": 2278,
									"end": 2325,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2374,
									"end": 2376,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 2369,
									"end": 2372,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2365,
									"end": 2377,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2362,
									"end": 2363,
									"name": "PUSH",
									"source": 5,
									"value": "5"
								},
								{
									"begin": 2358,
									"end": 2378,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2352,
									"end": 2356,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 2348,
									"end": 2379,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2338,
									"end": 2379,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 2338,
									"end": 2379,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "tag",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2447,
									"end": 2449,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2440,
									"end": 2445,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2506,
									"end": 2507,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2492,
									"end": 2508,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 2473,
									"end": 2474,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2462,
									"end": 2475,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "56"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "tag",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 2429,
									"end": 2510,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2436,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2433,
									"end": 2436,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2526,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2008,
									"end": 2526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2702,
									"end": 4001,
									"name": "tag",
									"source": 5,
									"value": "7"
								},
								{
									"begin": 2702,
									"end": 4001,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2832,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2822,
									"end": 2832,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2844,
									"end": 2874,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2844,
									"end": 2874,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 2841,
									"end": 2897,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 2841,
									"end": 2897,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2841,
									"end": 2897,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "28"
								},
								{
									"begin": 2877,
									"end": 2895,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "tag",
									"source": 5,
									"value": "62"
								},
								{
									"begin": 2877,
									"end": 2895,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2996,
									"end": 3002,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2988,
									"end": 2992,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2982,
									"end": 2993,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "30"
								},
								{
									"begin": 2956,
									"end": 2994,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "tag",
									"source": 5,
									"value": "64"
								},
								{
									"begin": 2956,
									"end": 2994,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 2950,
									"end": 2954,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 2906,
									"end": 3003,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "tag",
									"source": 5,
									"value": "63"
								},
								{
									"begin": 2906,
									"end": 3003,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3052,
									"end": 3056,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3083,
									"end": 3085,
									"name": "PUSH",
									"source": 5,
									"value": "1F"
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3072,
									"end": 3086,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 3100,
									"end": 3101,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3788,
									"end": 3789,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 3805,
									"end": 3811,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3857,
									"end": 3876,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3851,
									"end": 3877,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "tag",
									"source": 5,
									"value": "67"
								},
								{
									"begin": 3802,
									"end": 3891,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2659,
									"end": 2660,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 2655,
									"end": 2666,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 2655,
									"end": 2666,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2655,
									"end": 2666,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2651,
									"end": 2675,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 2647,
									"end": 2676,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 2637,
									"end": 2677,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 2683,
									"end": 2684,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 2679,
									"end": 2690,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 2679,
									"end": 2690,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 2679,
									"end": 2690,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 2634,
									"end": 2691,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 3904,
									"end": 3985,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3904,
									"end": 3985,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3065,
									"end": 3995,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "58"
								},
								{
									"begin": 3065,
									"end": 3995,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "tag",
									"source": 5,
									"value": "66"
								},
								{
									"begin": 3095,
									"end": 3744,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1955,
									"end": 1956,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1948,
									"end": 1962,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 1948,
									"end": 1962,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1948,
									"end": 1962,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 1992,
									"end": 1996,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 1979,
									"end": 1997,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1979,
									"end": 1997,
									"name": "KECCAK256",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3131,
									"end": 3151,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3131,
									"end": 3151,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3131,
									"end": 3151,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "tag",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3263,
									"end": 3270,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3260,
									"end": 3261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3257,
									"end": 3271,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3345,
									"end": 3364,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3345,
									"end": 3364,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3345,
									"end": 3364,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3339,
									"end": 3365,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 3324,
									"end": 3366,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3324,
									"end": 3366,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3452,
									"end": 3456,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3437,
									"end": 3457,
									"name": "SWAP5",
									"source": 5
								},
								{
									"begin": 3405,
									"end": 3406,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3393,
									"end": 3407,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 3279,
									"end": 3291,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "70"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "tag",
									"source": 5,
									"value": "72"
								},
								{
									"begin": 3249,
									"end": 3471,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 3253,
									"end": 3256,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3499,
									"end": 3505,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3490,
									"end": 3497,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 3487,
									"end": 3506,
									"name": "LT",
									"source": 5
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "DUP5",
									"source": 5
								},
								{
									"begin": 3560,
									"end": 3579,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3554,
									"end": 3580,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3643,
									"end": 3644,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 3639,
									"end": 3653,
									"name": "DUP8",
									"source": 5
								},
								{
									"begin": 3639,
									"end": 3653,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3639,
									"end": 3653,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3655,
									"end": 3658,
									"name": "PUSH",
									"source": 5,
									"value": "F8"
								},
								{
									"begin": 3635,
									"end": 3659,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3631,
									"end": 3668,
									"name": "SHR",
									"source": 5
								},
								{
									"begin": 3627,
									"end": 3669,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 3612,
									"end": 3670,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 3597,
									"end": 3671,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3597,
									"end": 3671,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "tag",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 3484,
									"end": 3685,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3731,
									"end": 3732,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 3715,
									"end": 3729,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3715,
									"end": 3729,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 3715,
									"end": 3729,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 3711,
									"end": 3733,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 3698,
									"end": 3734,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 3698,
									"end": 3734,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2702,
									"end": 4001,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4366,
									"end": 4588,
									"name": "tag",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 4366,
									"end": 4588,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4440,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4440,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4431,
									"end": 4440,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 4452,
									"end": 4462,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 4452,
									"end": 4462,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 4452,
									"end": 4462,
									"name": "GT",
									"source": 5
								},
								{
									"begin": 4449,
									"end": 4582,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 4449,
									"end": 4582,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4449,
									"end": 4582,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 4504,
									"end": 4514,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B71"
								},
								{
									"begin": 4499,
									"end": 4502,
									"name": "PUSH",
									"source": 5,
									"value": "E0"
								},
								{
									"begin": 4495,
									"end": 4515,
									"name": "SHL",
									"source": 5
								},
								{
									"begin": 4492,
									"end": 4493,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4485,
									"end": 4516,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4539,
									"end": 4543,
									"name": "PUSH",
									"source": 5,
									"value": "11"
								},
								{
									"begin": 4536,
									"end": 4537,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 4529,
									"end": 4544,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 4567,
									"end": 4571,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 4564,
									"end": 4565,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 4557,
									"end": 4572,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 4449,
									"end": 4582,
									"name": "tag",
									"source": 5,
									"value": "76"
								},
								{
									"begin": 4449,
									"end": 4582,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 4366,
									"end": 4588,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 4366,
									"end": 4588,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 4366,
									"end": 4588,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4366,
									"end": 4588,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 4366,
									"end": 4588,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 5
								},
								{
									"begin": 4593,
									"end": 4770,
									"name": "tag",
									"source": 5,
									"value": "34"
								},
								{
									"begin": 4593,
									"end": 4770,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1900,
									"end": 2236,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209b4cc0c6b4669163b306db33c53129294b4665cd97a2dd34f3885ce3f830f93864736f6c634300081d0033",
									".code": [
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1900,
											"end": 2236,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1085,
											"end": 1099,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1078,
											"end": 1100,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1060,
											"end": 1101,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1048,
											"end": 1050,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1033,
											"end": 1051,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 920,
											"end": 1107,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4517,
											"end": 4623,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4448,
											"end": 4450,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1815,
											"end": 1851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1803,
											"end": 1805,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1788,
											"end": 1806,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4366,
											"end": 4457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1673,
											"end": 1857,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4681,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4781,
											"end": 4799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4681,
											"end": 4806,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3483,
											"end": 3496,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3515,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3508,
											"end": 3520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3508,
											"end": 3520,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3429,
											"end": 3527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5789,
											"end": 5793,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5859,
											"end": 5866,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5868,
											"end": 5874,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 5851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 5843,
											"end": 5875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5843,
											"end": 5875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5892,
											"end": 5896,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5885,
											"end": 5896,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5706,
											"end": 5903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6664,
											"end": 6668,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6679,
											"end": 6685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 6648,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 6648,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6706,
											"end": 6710,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6712,
											"end": 6714,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6716,
											"end": 6722,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 6696,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6696,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6740,
											"end": 6744,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 6465,
											"end": 6751,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6465,
											"end": 6751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7146,
											"end": 7380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7234,
											"end": 7238,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7288,
											"end": 7352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7341,
											"end": 7351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 7304,
											"end": 7311,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 7313,
											"end": 7338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 7313,
											"end": 7338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 7313,
											"end": 7351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7313,
											"end": 7351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7288,
											"end": 7296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 7288,
											"end": 7352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 3640,
											"end": 3742,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3696,
											"end": 3709,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3728,
											"end": 3735,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3721,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 3721,
											"end": 3735,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 7867,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 7960,
											"end": 7964,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 8058,
											"end": 8065,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8050,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 8041,
											"end": 8066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 8041,
											"end": 8066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8066,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8104,
											"end": 8119,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8084,
											"end": 8119,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3132,
											"end": 3134,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3114,
											"end": 3135,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3171,
											"end": 3173,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3151,
											"end": 3169,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3144,
											"end": 3174,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3210,
											"end": 3244,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3190,
											"end": 3208,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3183,
											"end": 3245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3261,
											"end": 3279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3254,
											"end": 3289,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3306,
											"end": 3325,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 8076,
											"end": 8161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8255,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8204,
											"end": 8209,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8211,
											"end": 8218,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8239,
											"end": 8254,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8220,
											"end": 8254,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 8195,
											"end": 8255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 5002,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5081,
											"end": 5085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 5135,
											"end": 5163,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1992,
											"end": 2002,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 5152,
											"end": 5154,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5156,
											"end": 5162,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5135,
											"end": 5163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5249,
											"end": 5398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5338,
											"end": 5345,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5375,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5382,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5364,
											"end": 5391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5249,
											"end": 5398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11514,
											"end": 11533,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3538,
											"end": 3540,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3520,
											"end": 3541,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3577,
											"end": 3579,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3557,
											"end": 3575,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3550,
											"end": 3580,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3616,
											"end": 3650,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F76652066726F6D20746865207A65726F20616464"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3589,
											"end": 3651,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3667,
											"end": 3685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3660,
											"end": 3694,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 3711,
											"end": 3730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3336,
											"end": 3736,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 11506,
											"end": 11574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11592,
											"end": 11613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3943,
											"end": 3945,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3925,
											"end": 3946,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3962,
											"end": 3980,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3955,
											"end": 3985,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4021,
											"end": 4055,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20617070726F766520746F20746865207A65726F206164647265"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4001,
											"end": 4019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3994,
											"end": 4056,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4072,
											"end": 4090,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4065,
											"end": 4097,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4114,
											"end": 4133,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3741,
											"end": 4139,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 11584,
											"end": 11652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11674,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11681,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11690,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11663,
											"end": 11699,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11714,
											"end": 11746,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11383,
											"end": 11753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12201,
											"end": 12206,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12208,
											"end": 12215,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 12191,
											"end": 12216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 12191,
											"end": 12216,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12164,
											"end": 12216,
											"name": "POP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12230,
											"end": 12246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12230,
											"end": 12267,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12226,
											"end": 12469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12311,
											"end": 12317,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12307,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12291,
											"end": 12317,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4346,
											"end": 4348,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4328,
											"end": 4349,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4387,
											"name": "PUSH",
											"source": 5,
											"value": "1D"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4365,
											"end": 4383,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4358,
											"end": 4388,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4424,
											"end": 4455,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4397,
											"end": 4456,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4473,
											"end": 4491,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4144,
											"end": 4497,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 12283,
											"end": 12351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12402,
											"end": 12407,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12409,
											"end": 12416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12437,
											"end": 12443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12418,
											"end": 12434,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 12418,
											"end": 12443,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 12393,
											"end": 12444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 12393,
											"end": 12444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12154,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12034,
											"end": 12475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 8748,
											"end": 9399,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8874,
											"end": 8892,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4704,
											"end": 4706,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4723,
											"end": 4741,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4716,
											"end": 4746,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4782,
											"end": 4816,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E736665722066726F6D20746865207A65726F206164"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4762,
											"end": 4780,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4755,
											"end": 4817,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4833,
											"end": 4851,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4826,
											"end": 4861,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 4897,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4502,
											"end": 4903,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8866,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8952,
											"end": 8968,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5092,
											"end": 5113,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5149,
											"end": 5151,
											"name": "PUSH",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5122,
											"end": 5152,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5188,
											"end": 5222,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220746F20746865207A65726F2061646472"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5168,
											"end": 5186,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5161,
											"end": 5223,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5239,
											"end": 5257,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5232,
											"end": 5265,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5282,
											"end": 5301,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4908,
											"end": 5307,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 8944,
											"end": 9008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9068,
											"end": 9087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9090,
											"end": 9105,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5514,
											"end": 5516,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5496,
											"end": 5517,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5553,
											"end": 5555,
											"name": "PUSH",
											"source": 5,
											"value": "26"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5533,
											"end": 5551,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5526,
											"end": 5556,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5592,
											"end": 5626,
											"name": "PUSH",
											"source": 5,
											"value": "45524332303A207472616E7366657220616D6F756E7420657863656564732062"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "PUSH",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5572,
											"end": 5590,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5627,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "PUSH",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5643,
											"end": 5661,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5636,
											"end": 5672,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "PUSH",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 5689,
											"end": 5708,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 5312,
											"end": 5714,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9115,
											"end": 9187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9259,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9259,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9292,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9253,
											"end": 9259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 9279,
											"end": 9302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 9279,
											"end": 9302,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9333,
											"end": 9335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9327,
											"end": 9331,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9337,
											"end": 9343,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1258,
											"end": 1283,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1248,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1231,
											"end": 1249,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1112,
											"end": 1289,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9318,
											"end": 9344,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 9355,
											"end": 9392,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 13059,
											"end": 13180,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 432,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 14,
											"end": 432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 163,
											"end": 165,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 152,
											"end": 161,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 145,
											"end": 166,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 126,
											"end": 130,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 201,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 189,
											"end": 202,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 238,
											"end": 244,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 233,
											"end": 235,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 222,
											"end": 231,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 218,
											"end": 236,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 211,
											"end": 245,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 297,
											"end": 303,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 292,
											"end": 294,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 280,
											"end": 295,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 275,
											"end": 277,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 264,
											"end": 273,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 260,
											"end": 278,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 254,
											"end": 304,
											"name": "MCOPY",
											"source": 5
										},
										{
											"begin": 353,
											"end": 354,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 348,
											"end": 350,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 328,
											"end": 337,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 324,
											"end": 346,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 320,
											"end": 351,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 313,
											"end": 355,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 423,
											"end": 425,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 418,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 412,
											"end": 419,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 395,
											"end": 410,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 391,
											"end": 420,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 380,
											"end": 389,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 376,
											"end": 421,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 372,
											"end": 426,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 364,
											"end": 426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 364,
											"end": 426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 14,
											"end": 432,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 437,
											"end": 610,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 505,
											"end": 525,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 505,
											"end": 525,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 554,
											"end": 585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 554,
											"end": 585,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 544,
											"end": 586,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 544,
											"end": 586,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 534,
											"end": 604,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 600,
											"end": 601,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 597,
											"end": 598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 590,
											"end": 602,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 534,
											"end": 604,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 534,
											"end": 604,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 437,
											"end": 610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 615,
											"end": 915,
											"name": "tag",
											"source": 5,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 915,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 683,
											"end": 689,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 732,
											"end": 741,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 723,
											"end": 730,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 719,
											"end": 742,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 715,
											"end": 747,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 712,
											"end": 764,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 712,
											"end": 764,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 760,
											"end": 761,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 757,
											"end": 758,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 762,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 712,
											"end": 764,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 712,
											"end": 764,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 802,
											"end": 811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 783,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 783,
											"end": 812,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 783,
											"end": 812,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 783,
											"end": 812,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 773,
											"end": 812,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 881,
											"end": 883,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 866,
											"end": 884,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 866,
											"end": 884,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 853,
											"end": 885,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 853,
											"end": 885,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 615,
											"end": 915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1371,
											"end": 1377,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1379,
											"end": 1385,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1387,
											"end": 1393,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1440,
											"end": 1442,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1428,
											"end": 1437,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1419,
											"end": 1426,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1438,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1443,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1456,
											"end": 1457,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1446,
											"end": 1458,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 1408,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1498,
											"end": 1507,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1479,
											"end": 1508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 1479,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1469,
											"end": 1508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1561,
											"end": 1563,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1550,
											"end": 1559,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1546,
											"end": 1564,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 1527,
											"end": 1565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1527,
											"end": 1565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1517,
											"end": 1565,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1634,
											"end": 1636,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1619,
											"end": 1637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1606,
											"end": 1638,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1294,
											"end": 1668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "tag",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1927,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1974,
											"end": 1976,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1960,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1949,
											"end": 1972,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 1977,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1990,
											"end": 1991,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1980,
											"end": 1992,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 1942,
											"end": 1994,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2032,
											"end": 2041,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2013,
											"end": 2042,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 2013,
											"end": 2042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2042,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1862,
											"end": 2048,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1862,
											"end": 2048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2184,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2170,
											"end": 2179,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2161,
											"end": 2168,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2157,
											"end": 2180,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2153,
											"end": 2185,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2198,
											"end": 2199,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2195,
											"end": 2196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2188,
											"end": 2200,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 2150,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2240,
											"end": 2249,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2221,
											"end": 2250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 2221,
											"end": 2250,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2211,
											"end": 2250,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2303,
											"end": 2305,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2292,
											"end": 2301,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2288,
											"end": 2306,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 2269,
											"end": 2307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 2269,
											"end": 2307,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2259,
											"end": 2307,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2397,
											"end": 2398,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2393,
											"end": 2405,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2452,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2515,
											"end": 2519,
											"name": "PUSH",
											"source": 5,
											"value": "7F"
										},
										{
											"begin": 2507,
											"end": 2513,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2503,
											"end": 2520,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2493,
											"end": 2520,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 2461,
											"end": 2522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2568,
											"end": 2570,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2557,
											"end": 2571,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2537,
											"end": 2555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2534,
											"end": 2572,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2614,
											"end": 2624,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2609,
											"end": 2612,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2605,
											"end": 2625,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2602,
											"end": 2603,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2595,
											"end": 2626,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2649,
											"end": 2653,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 2646,
											"end": 2647,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2639,
											"end": 2654,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2677,
											"end": 2681,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2674,
											"end": 2675,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2667,
											"end": 2682,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2531,
											"end": 2692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2318,
											"end": 2698,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2703,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2768,
											"end": 2777,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2789,
											"end": 2799,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2786,
											"end": 2919,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2851,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B71"
										},
										{
											"begin": 2836,
											"end": 2839,
											"name": "PUSH",
											"source": 5,
											"value": "E0"
										},
										{
											"begin": 2832,
											"end": 2852,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2829,
											"end": 2830,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2853,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2876,
											"end": 2880,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 2873,
											"end": 2874,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2866,
											"end": 2881,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2904,
											"end": 2908,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 2901,
											"end": 2902,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2894,
											"end": 2909,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"simple-token/@openzeppelin/contracts/utils/Context.sol",
								"simple-token/simple-token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.29+commit.ab55807c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"custom:address\":\"4\",\"custom:default-precision\":\"18\",\"custom:simple-description\":\"Simple Token. A fixed supply is minted on deployment, and new tokens can never be created.\",\"custom:version\":\"1.0.7\",\"details\":\"ERC20 token with the following features:  - Premint your total supply.  - No minting function. This allows users to comfortably know the future supply of the token.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"params\":{\"name\":\"Token Name\",\"symbol\":\"Token Symbol\",\"totalSupply\":\"Token Supply\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"Simple Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Token, ERC20, Fixed Supply\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"simple-token/simple-token.sol\":\"FixedToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd313527bf68e0ee9c175a30d7e8cd5fd7def33e6e8e496468f9df112c2c76514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c341254272e3693e1c255983dede9908224d58b42b573ffdf3a6bcd646553bec\",\"dweb:/ipfs/QmbE7JTjZCvazLeVYJPjY2FKs6b27YGMkYKaSTsNBPbdBk\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc61f8ffb10277281595872a49be00f4c58f55080c5a2ed9c2eb57a99a4c43d86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://686de33d3059962bf83f3480b635402d68369297837b98733ecb7f6603e00dcd\",\"dweb:/ipfs/QmbdGx98jVXUSxwzbLpV3cQRzS7Pxbm4esxYP8kvtPfEc8\"]},\"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x2016abf3d4656313ca73fc34f567844028899002129a23941fb59e05f79520c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://109c16cd3ad0c3ff47c9d4f094d63072d45d34c6e40bb24936441ba7b2724d70\",\"dweb:/ipfs/QmYwbc5Kno1zWwDWVppDNgFgJeUavSF8H3zaHXr2hyahJs\"]},\"simple-token/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x9fbdf4b7a61bf731d34121173466348ea5448932facf54b0ffa3cbcb171e7f40\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9efc8dd1bf3d406de0485d3eb249263c8d87b7c74f6eef13d0fb0889808792e\",\"dweb:/ipfs/QmaonHVxmrnDSkBQayhNS2A6XeX32pG8fHVEPLQZYwTh8U\"]},\"simple-token/simple-token.sol\":{\"keccak256\":\"0x2c6c431911f479d017a69e2d01cab0c6ae930e246ed33db40a2940a35006dc09\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://77d9ab54ff9dcafdbc33f31def4fa31e0e3ba972e85e501261a8e5ae926b1703\",\"dweb:/ipfs/QmYck78tGgQdee1CcdY7P6tFnJEks3cxZXts9dM1KzBxrx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 15,
								"contract": "simple-token/simple-token.sol:FixedToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 21,
								"contract": "simple-token/simple-token.sol:FixedToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 23,
								"contract": "simple-token/simple-token.sol:FixedToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "simple-token/simple-token.sol:FixedToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 27,
								"contract": "simple-token/simple-token.sol:FixedToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Token, ERC20, Fixed Supply",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 586,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1378:23:0"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 664,
							"src": "1403:22:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 689,
							"src": "1426:41:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 586,
							"sourceUnit": 711,
							"src": "1468:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 6,
										"name": "Context",
										"nameLocations": [
											"2694:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 710,
										"src": "2694:7:0"
									},
									"id": 7,
									"nodeType": "InheritanceSpecifier",
									"src": "2694:7:0"
								},
								{
									"baseName": {
										"id": 8,
										"name": "IERC20",
										"nameLocations": [
											"2703:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "2703:6:0"
									},
									"id": 9,
									"nodeType": "InheritanceSpecifier",
									"src": "2703:6:0"
								},
								{
									"baseName": {
										"id": 10,
										"name": "IERC20Metadata",
										"nameLocations": [
											"2711:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 688,
										"src": "2711:14:0"
									},
									"id": 11,
									"nodeType": "InheritanceSpecifier",
									"src": "2711:14:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 5,
								"nodeType": "StructuredDocumentation",
								"src": "1503:1172:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 585,
							"linearizedBaseContracts": [
								585,
								688,
								663,
								710
							],
							"name": "ERC20",
							"nameLocation": "2685:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 15,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "2768:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "2732:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 14,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 12,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2740:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2732:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 13,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2751:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 21,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "2840:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "2784:67:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 20,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 16,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2792:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2784:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 19,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 17,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2811:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2803:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 18,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2822:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 23,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "2874:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "2858:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 22,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2858:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "2908:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "2893:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 24,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2893:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "2934:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 585,
									"src": "2919:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 26,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2919:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 43,
										"nodeType": "Block",
										"src": "3307:57:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 35,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3317:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 36,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 30,
														"src": "3325:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3317:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 38,
												"nodeType": "ExpressionStatement",
												"src": "3317:13:0"
											},
											{
												"expression": {
													"id": 41,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 39,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3340:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 40,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "3350:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3340:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 42,
												"nodeType": "ExpressionStatement",
												"src": "3340:17:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2948:298:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 44,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "3277:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "3263:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 29,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "3298:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "3284:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 31,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3284:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:44:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3307:0:0"
									},
									"scope": 585,
									"src": "3251:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										675
									],
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "3498:29:0",
										"statements": [
											{
												"expression": {
													"id": 51,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 25,
													"src": "3515:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 50,
												"id": 52,
												"nodeType": "Return",
												"src": "3508:12:0"
											}
										]
									},
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "3370:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3438:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 47,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3465:8:0"
									},
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3442:2:0"
									},
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "3483:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 48,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3483:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:15:0"
									},
									"scope": 585,
									"src": "3429:98:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										681
									],
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "3711:31:0",
										"statements": [
											{
												"expression": {
													"id": 61,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 60,
												"id": 62,
												"nodeType": "Return",
												"src": "3721:14:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "3533:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 64,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3649:6:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 57,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3678:8:0"
									},
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3655:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "3696:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 58,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3696:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3695:15:0"
									},
									"scope": 585,
									"src": "3640:102:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										687
									],
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "4431:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4448:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 70,
												"id": 72,
												"nodeType": "Return",
												"src": "4441:9:0"
											}
										]
									},
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "3748:613:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "4375:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4406:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4383:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "4424:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 68,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4424:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4423:7:0"
									},
									"scope": 585,
									"src": "4366:91:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										612
									],
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "4587:36:0",
										"statements": [
											{
												"expression": {
													"id": 81,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 23,
													"src": "4604:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 80,
												"id": 82,
												"nodeType": "Return",
												"src": "4597:19:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "4463:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4526:11:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 77,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:0"
									},
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4537:2:0"
									},
									"returnParameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "4578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:0"
									},
									"scope": 585,
									"src": "4517:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										620
									],
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "4764:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 93,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "4781:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 95,
													"indexExpression": {
														"id": 94,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 87,
														"src": "4791:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4781:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 96,
												"nodeType": "Return",
												"src": "4774:25:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "4629:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4690:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 89,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4737:8:0"
									},
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4708:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4700:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4699:17:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "4755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4754:9:0"
									},
									"scope": 585,
									"src": "4681:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										630
									],
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "5087:104:0",
										"statements": [
											{
												"assignments": [
													110
												],
												"declarations": [
													{
														"constant": false,
														"id": 110,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5105:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "5097:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5097:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 113,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 111,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5113:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5113:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5097:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 115,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 110,
															"src": "5145:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 116,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "5152:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 117,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 103,
															"src": "5156:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 114,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "5135:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5135:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 119,
												"nodeType": "ExpressionStatement",
												"src": "5135:28:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5180:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 108,
												"id": 121,
												"nodeType": "Return",
												"src": "5173:11:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "4812:185:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "5011:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 105,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5063:8:0"
									},
									"parameters": {
										"id": 104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5028:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5020:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 103,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5040:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5032:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5019:28:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5081:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 106,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5081:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5080:6:0"
									},
									"scope": 585,
									"src": "5002:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										640
									],
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "5347:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 134,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 21,
															"src": "5364:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 136,
														"indexExpression": {
															"id": 135,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "5376:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5364:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 138,
													"indexExpression": {
														"id": 137,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 128,
														"src": "5383:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5364:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 133,
												"id": 139,
												"nodeType": "Return",
												"src": "5357:34:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5197:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5258:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 130,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5320:8:0"
									},
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5276:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "5268:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5291:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "5283:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5283:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5267:32:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "5338:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5337:9:0"
									},
									"scope": 585,
									"src": "5249:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										650
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5795:108:0",
										"statements": [
											{
												"assignments": [
													153
												],
												"declarations": [
													{
														"constant": false,
														"id": 153,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5813:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 165,
														"src": "5805:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 152,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5805:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 156,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 154,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "5821:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 155,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5821:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5805:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 158,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "5852:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 159,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 144,
															"src": "5859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 160,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "5868:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 157,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "5843:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5843:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "5843:32:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5892:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 151,
												"id": 164,
												"nodeType": "Return",
												"src": "5885:11:0"
											}
										]
									},
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "5404:297:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5715:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 148,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5771:8:0"
									},
									"parameters": {
										"id": 147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5731:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5723:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5748:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5740:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5722:33:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "5789:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5788:6:0"
									},
									"scope": 585,
									"src": "5706:197:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										662
									],
									"body": {
										"id": 198,
										"nodeType": "Block",
										"src": "6598:153:0",
										"statements": [
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6616:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 198,
														"src": "6608:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 179,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6608:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 183,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 181,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "6626:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6626:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6608:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "6664:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 186,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "6670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6679:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 184,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 562,
														"src": "6648:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6648:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "6648:38:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 191,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "6706:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 192,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "6712:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 193,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "6716:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 190,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 346,
														"src": "6696:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6696:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 195,
												"nodeType": "ExpressionStatement",
												"src": "6696:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 178,
												"id": 197,
												"nodeType": "Return",
												"src": "6733:11:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5909:551:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6474:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 175,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6574:8:0"
									},
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6504:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6496:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6496:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6526:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6518:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6546:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6538:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6486:72:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 199,
												"src": "6592:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6592:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6591:6:0"
									},
									"scope": 585,
									"src": "6465:286:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 227,
										"nodeType": "Block",
										"src": "7240:140:0",
										"statements": [
											{
												"assignments": [
													210
												],
												"declarations": [
													{
														"constant": false,
														"id": 210,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7258:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 227,
														"src": "7250:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 209,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7250:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 213,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 211,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7266:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7266:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7250:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 210,
															"src": "7297:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 202,
															"src": "7304:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 218,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 210,
																		"src": "7323:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 219,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 202,
																		"src": "7330:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 217,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "7313:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7313:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 221,
																"name": "addedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "7341:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7313:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 519,
														"src": "7288:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7288:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "7288:64:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 225,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7369:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 208,
												"id": 226,
												"nodeType": "Return",
												"src": "7362:11:0"
											}
										]
									},
									"documentation": {
										"id": 200,
										"nodeType": "StructuredDocumentation",
										"src": "6757:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nameLocation": "7155:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 202,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7181:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "7173:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "addedValue",
												"nameLocation": "7198:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "7190:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7190:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7172:37:0"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "7234:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 206,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7234:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7233:6:0"
									},
									"scope": 585,
									"src": "7146:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "7966:328:0",
										"statements": [
											{
												"assignments": [
													239
												],
												"declarations": [
													{
														"constant": false,
														"id": 239,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "7984:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "7976:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 238,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7976:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 242,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 240,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 700,
														"src": "7992:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7992:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7976:28:0"
											},
											{
												"assignments": [
													244
												],
												"declarations": [
													{
														"constant": false,
														"id": 244,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "8022:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 268,
														"src": "8014:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 243,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8014:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 249,
												"initialValue": {
													"arguments": [
														{
															"id": 246,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 239,
															"src": "8051:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 247,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 231,
															"src": "8058:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 245,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "8041:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8041:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8014:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 251,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 244,
																"src": "8084:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 252,
																"name": "subtractedValue",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 233,
																"src": "8104:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8084:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8121:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															},
															"value": "ERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																"typeString": "literal_string \"ERC20: decreased allowance below zero\""
															}
														],
														"id": 250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8076:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "8076:85:0"
											},
											{
												"id": 265,
												"nodeType": "UncheckedBlock",
												"src": "8171:95:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 258,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 239,
																	"src": "8204:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 259,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 231,
																	"src": "8211:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 260,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 244,
																		"src": "8220:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 261,
																		"name": "subtractedValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 233,
																		"src": "8239:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8220:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 257,
																"name": "_approve",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "8195:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (address,address,uint256)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8195:60:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 264,
														"nodeType": "ExpressionStatement",
														"src": "8195:60:0"
													}
												]
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8283:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 237,
												"id": 267,
												"nodeType": "Return",
												"src": "8276:11:0"
											}
										]
									},
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "7386:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nameLocation": "7876:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 231,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7902:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "7894:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nameLocation": "7919:15:0",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "7911:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7893:42:0"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "7960:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7960:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7959:6:0"
									},
									"scope": 585,
									"src": "7867:427:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 345,
										"nodeType": "Block",
										"src": "8856:543:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 280,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 272,
																"src": "8874:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8890:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8882:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 281,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8882:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8882:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8874:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8894:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 279,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8866:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "8866:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 290,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "8952:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8966:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8958:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8958:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8958:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8952:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8970:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8944:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8944:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 298,
												"nodeType": "ExpressionStatement",
												"src": "8944:64:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "9040:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "9046:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 302,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "9050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 299,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9019:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9019:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "9019:38:0"
											},
											{
												"assignments": [
													306
												],
												"declarations": [
													{
														"constant": false,
														"id": 306,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "9076:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 345,
														"src": "9068:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 305,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9068:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 310,
												"initialValue": {
													"baseExpression": {
														"id": 307,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "9090:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 309,
													"indexExpression": {
														"id": 308,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "9100:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9090:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9068:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 312,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 306,
																"src": "9123:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 313,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 276,
																"src": "9138:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9123:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9146:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															},
															"value": "ERC20: transfer amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
															}
														],
														"id": 311,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9115:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9115:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 317,
												"nodeType": "ExpressionStatement",
												"src": "9115:72:0"
											},
											{
												"id": 326,
												"nodeType": "UncheckedBlock",
												"src": "9197:73:0",
												"statements": [
													{
														"expression": {
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 318,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "9221:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 320,
																"indexExpression": {
																	"id": 319,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 272,
																	"src": "9231:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "9221:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 321,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 306,
																	"src": "9239:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 322,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 276,
																	"src": "9253:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9239:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9221:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 325,
														"nodeType": "ExpressionStatement",
														"src": "9221:38:0"
													}
												]
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 327,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "9279:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 329,
														"indexExpression": {
															"id": 328,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "9289:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9279:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 276,
														"src": "9296:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9279:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "9279:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 334,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "9327:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 335,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "9333:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 336,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "9337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 333,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9318:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9318:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 338,
												"nodeType": "EmitStatement",
												"src": "9313:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 272,
															"src": "9375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 274,
															"src": "9381:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 276,
															"src": "9385:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 339,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "9355:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9355:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 344,
												"nodeType": "ExpressionStatement",
												"src": "9355:37:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "8300:443:0",
										"text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
									},
									"id": 346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "8757:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "8784:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "8776:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8806:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "8798:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8826:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 346,
												"src": "8818:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 275,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8766:72:0"
									},
									"returnParameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8856:0:0"
									},
									"scope": 585,
									"src": "8748:651:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 401,
										"nodeType": "Block",
										"src": "9740:324:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 355,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 349,
																"src": "9758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 358,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9777:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9769:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 356,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9769:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 359,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9769:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9758:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9781:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 354,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9750:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9750:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "9750:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 367,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9855:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9847:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 365,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9847:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9847:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 369,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 370,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9868:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 364,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "9826:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 371,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9826:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 372,
												"nodeType": "ExpressionStatement",
												"src": "9826:49:0"
											},
											{
												"expression": {
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 373,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "9886:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 374,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "9902:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9886:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 376,
												"nodeType": "ExpressionStatement",
												"src": "9886:22:0"
											},
											{
												"expression": {
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 377,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "9918:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 379,
														"indexExpression": {
															"id": 378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9928:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9918:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 380,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 351,
														"src": "9940:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9918:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 382,
												"nodeType": "ExpressionStatement",
												"src": "9918:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 386,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9978:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9970:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9970:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9970:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 388,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "9982:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 389,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "9991:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 383,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "9961:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9961:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 391,
												"nodeType": "EmitStatement",
												"src": "9956:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 395,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10037:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 394,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10029:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 393,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10029:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 396,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10029:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 397,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 349,
															"src": "10041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 398,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "10050:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 392,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "10009:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10009:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "10009:48:0"
											}
										]
									},
									"documentation": {
										"id": 347,
										"nodeType": "StructuredDocumentation",
										"src": "9405:265:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
									},
									"id": 402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9684:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9698:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "9690:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 348,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9690:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "9715:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "9707:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9689:33:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9740:0:0"
									},
									"scope": 585,
									"src": "9675:389:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 473,
										"nodeType": "Block",
										"src": "10449:511:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 411,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 405,
																"src": "10467:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10486:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10478:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 412,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10478:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10478:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10467:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10490:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 410,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10459:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10459:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 419,
												"nodeType": "ExpressionStatement",
												"src": "10459:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 421,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "10558:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10575:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10567:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 422,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10567:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10567:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "10579:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 420,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 573,
														"src": "10537:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10537:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "ExpressionStatement",
												"src": "10537:49:0"
											},
											{
												"assignments": [
													430
												],
												"declarations": [
													{
														"constant": false,
														"id": 430,
														"mutability": "mutable",
														"name": "accountBalance",
														"nameLocation": "10605:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 473,
														"src": "10597:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 429,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10597:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 434,
												"initialValue": {
													"baseExpression": {
														"id": 431,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "10622:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 433,
													"indexExpression": {
														"id": 432,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 405,
														"src": "10632:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10622:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10597:43:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 436,
																"name": "accountBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 430,
																"src": "10658:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 437,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "10676:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10658:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10684:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															},
															"value": "ERC20: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
															}
														],
														"id": 435,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10650:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10650:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "10650:71:0"
											},
											{
												"id": 450,
												"nodeType": "UncheckedBlock",
												"src": "10731:79:0",
												"statements": [
													{
														"expression": {
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 442,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "10755:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 444,
																"indexExpression": {
																	"id": 443,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 405,
																	"src": "10765:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "10755:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 447,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 445,
																	"name": "accountBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 430,
																	"src": "10776:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 446,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 407,
																	"src": "10793:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10776:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10755:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 449,
														"nodeType": "ExpressionStatement",
														"src": "10755:44:0"
													}
												]
											},
											{
												"expression": {
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 451,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "10819:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 452,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "10835:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10819:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 454,
												"nodeType": "ExpressionStatement",
												"src": "10819:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 456,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "10866:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10883:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 458,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 457,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10875:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10875:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 461,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "10887:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 455,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 597,
														"src": "10857:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10857:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 463,
												"nodeType": "EmitStatement",
												"src": "10852:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 465,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "10925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10942:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10934:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 466,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10934:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 469,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10934:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 470,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 407,
															"src": "10946:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 464,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "10905:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10905:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 472,
												"nodeType": "ExpressionStatement",
												"src": "10905:48:0"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "10070:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "10393:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10407:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10399:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10424:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "10416:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10416:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10398:33:0"
									},
									"returnParameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10449:0:0"
									},
									"scope": 585,
									"src": "10384:576:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "11496:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 490,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 485,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "11514:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 488,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11531:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 487,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11523:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 486,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11523:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11523:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11514:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11535:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11506:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11506:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "11506:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 500,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 495,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 479,
																"src": "11592:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11611:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11603:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 496,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "11603:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11603:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "11592:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11615:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11584:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "11584:68:0"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 504,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 21,
																"src": "11663:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 507,
															"indexExpression": {
																"id": 505,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "11675:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11663:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 508,
														"indexExpression": {
															"id": 506,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "11682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11663:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 509,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 481,
														"src": "11693:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11663:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "11663:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "11723:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 514,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 479,
															"src": "11730:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 515,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "11739:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 512,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 606,
														"src": "11714:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11714:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 517,
												"nodeType": "EmitStatement",
												"src": "11709:37:0"
											}
										]
									},
									"documentation": {
										"id": 475,
										"nodeType": "StructuredDocumentation",
										"src": "10966:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "11392:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11418:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "11410:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11410:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11441:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "11433:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11433:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11466:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "11458:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 480,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11400:78:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11496:0:0"
									},
									"scope": 585,
									"src": "11383:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 561,
										"nodeType": "Block",
										"src": "12154:321:0",
										"statements": [
											{
												"assignments": [
													530
												],
												"declarations": [
													{
														"constant": false,
														"id": 530,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "12172:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 561,
														"src": "12164:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 529,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 535,
												"initialValue": {
													"arguments": [
														{
															"id": 532,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "12201:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "12208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 531,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "12191:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12191:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12164:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 536,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "12230:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12255:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "12255:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 537,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12250:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12250:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12264:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12250:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12230:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 560,
												"nodeType": "IfStatement",
												"src": "12226:243:0",
												"trueBody": {
													"id": 559,
													"nodeType": "Block",
													"src": "12269:200:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 544,
																			"name": "currentAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 530,
																			"src": "12291:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 545,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 526,
																			"src": "12311:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "12291:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
																		"id": 547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12319:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		},
																		"value": "ERC20: insufficient allowance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
																			"typeString": "literal_string \"ERC20: insufficient allowance\""
																		}
																	],
																	"id": 543,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "12283:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12283:68:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 549,
															"nodeType": "ExpressionStatement",
															"src": "12283:68:0"
														},
														{
															"id": 558,
															"nodeType": "UncheckedBlock",
															"src": "12365:94:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 551,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 522,
																				"src": "12402:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 552,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 524,
																				"src": "12409:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 555,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 553,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 530,
																					"src": "12418:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 554,
																					"name": "amount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 526,
																					"src": "12437:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12418:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 550,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "12393:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																				"typeString": "function (address,address,uint256)"
																			}
																		},
																		"id": 556,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12393:51:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 557,
																	"nodeType": "ExpressionStatement",
																	"src": "12393:51:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "11759:270:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
									},
									"id": 562,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "12043:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "12076:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "12068:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12068:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "12099:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "12091:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12124:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "12116:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12116:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12058:78:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12154:0:0"
									},
									"scope": 585,
									"src": "12034:441:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "13178:2:0",
										"statements": []
									},
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "12481:573:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "13068:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13106:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "13098:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13098:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13128:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "13120:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 566,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13148:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "13140:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13140:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13088:72:0"
									},
									"returnParameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13178:0:0"
									},
									"scope": 585,
									"src": "13059:121:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "13886:2:0",
										"statements": []
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "13186:577:0",
										"text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "13777:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13814:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13806:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13836:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13828:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13856:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 584,
												"src": "13848:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13796:72:0"
									},
									"returnParameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13886:0:0"
									},
									"scope": 585,
									"src": "13768:120:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 586,
							"src": "2676:11214:0",
							"usedErrors": [],
							"usedEvents": [
								597,
								606
							]
						}
					],
					"src": "1378:12513:0"
				},
				"id": 0
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						]
					},
					"id": 664,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1379:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 588,
								"nodeType": "StructuredDocumentation",
								"src": "1404:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "IERC20",
							"nameLocation": "1485:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 589,
										"nodeType": "StructuredDocumentation",
										"src": "1498:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 597,
									"name": "Transfer",
									"nameLocation": "1667:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1692:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1676:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 590,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1714:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1698:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 592,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1698:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 595,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1726:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 597,
												"src": "1718:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 594,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1718:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:57:1"
									},
									"src": "1661:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 598,
										"nodeType": "StructuredDocumentation",
										"src": "1739:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 606,
									"name": "Approval",
									"nameLocation": "1898:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1923:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1907:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1907:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1946:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1930:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1963:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "1955:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1955:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1906:63:1"
									},
									"src": "1892:78:1"
								},
								{
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "1976:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 612,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2056:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2067:2:1"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "2093:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2092:9:1"
									},
									"scope": 663,
									"src": "2047:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "2108:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2194:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2212:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2204:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2204:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2203:17:1"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "2244:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2243:9:1"
									},
									"scope": 663,
									"src": "2185:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "2259:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 630,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2475:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 626,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2492:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2484:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2484:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2504:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2496:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 624,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2483:28:1"
									},
									"returnParameters": {
										"id": 629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 630,
												"src": "2530:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 627,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2530:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2529:6:1"
									},
									"scope": 663,
									"src": "2466:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 631,
										"nodeType": "StructuredDocumentation",
										"src": "2542:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2820:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2838:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2830:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2830:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2853:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2845:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2829:32:1"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "2885:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2885:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2884:9:1"
									},
									"scope": 663,
									"src": "2811:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "2900:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 650,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3556:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3572:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3564:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3589:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3581:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3581:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:33:1"
									},
									"returnParameters": {
										"id": 649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "3615:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 647,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3615:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3614:6:1"
									},
									"scope": 663,
									"src": "3547:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "3627:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 662,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3928:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3958:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3950:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3950:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3980:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3972:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4000:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "3992:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3992:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3940:72:1"
									},
									"returnParameters": {
										"id": 661,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "4031:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 659,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4031:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4030:6:1"
									},
									"scope": 663,
									"src": "3919:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 664,
							"src": "1475:2564:1",
							"usedErrors": [],
							"usedEvents": [
								597,
								606
							]
						}
					],
					"src": "1379:2661:1"
				},
				"id": 1
			},
			"simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 689,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 665,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1383:23:2"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 666,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 689,
							"sourceUnit": 664,
							"src": "1408:23:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 668,
										"name": "IERC20",
										"nameLocations": [
											"1578:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "1578:6:2"
									},
									"id": 669,
									"nodeType": "InheritanceSpecifier",
									"src": "1578:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 667,
								"nodeType": "StructuredDocumentation",
								"src": "1433:116:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
							},
							"fullyImplemented": false,
							"id": 688,
							"linearizedBaseContracts": [
								688,
								663
							],
							"name": "IERC20Metadata",
							"nameLocation": "1560:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 670,
										"nodeType": "StructuredDocumentation",
										"src": "1591:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 675,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1659:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1663:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "1689:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 672,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1689:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1688:15:2"
									},
									"scope": 688,
									"src": "1650:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "1710:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 681,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1780:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1786:2:2"
									},
									"returnParameters": {
										"id": 680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 681,
												"src": "1812:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 678,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1812:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1811:15:2"
									},
									"scope": 688,
									"src": "1771:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "1833:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 687,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "1912:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:2"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "1946:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 684,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1946:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:7:2"
									},
									"scope": 688,
									"src": "1903:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 689,
							"src": "1550:405:2",
							"usedErrors": [],
							"usedEvents": [
								597,
								606
							]
						}
					],
					"src": "1383:573:2"
				},
				"id": 2
			},
			"simple-token/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "simple-token/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							710
						]
					},
					"id": 711,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 690,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1359:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 691,
								"nodeType": "StructuredDocumentation",
								"src": "1384:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 710,
							"linearizedBaseContracts": [
								710
							],
							"name": "Context",
							"nameLocation": "1899:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "1975:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 696,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1992:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1996:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1992:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 695,
												"id": 698,
												"nodeType": "Return",
												"src": "1985:17:3"
											}
										]
									},
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1922:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:2:3"
									},
									"returnParameters": {
										"id": 695,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "1966:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 693,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1965:9:3"
									},
									"scope": 710,
									"src": "1913:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "2082:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 705,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2099:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2103:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2099:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 704,
												"id": 707,
												"nodeType": "Return",
												"src": "2092:15:3"
											}
										]
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2024:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2032:2:3"
									},
									"returnParameters": {
										"id": 704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "2066:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2066:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:16:3"
									},
									"scope": 710,
									"src": "2015:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 711,
							"src": "1881:235:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1359:758:3"
				},
				"id": 3
			},
			"simple-token/simple-token.sol": {
				"ast": {
					"absolutePath": "simple-token/simple-token.sol",
					"exportedSymbols": {
						"Context": [
							710
						],
						"ERC20": [
							585
						],
						"FixedToken": [
							738
						],
						"IERC20": [
							663
						],
						"IERC20Metadata": [
							688
						]
					},
					"id": 739,
					"license": "UNLICENSED",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 712,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "1313:24:4"
						},
						{
							"absolutePath": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "simple-token/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 713,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 739,
							"sourceUnit": 586,
							"src": "1339:68:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 715,
										"name": "ERC20",
										"nameLocations": [
											"1923:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 585,
										"src": "1923:5:4"
									},
									"id": 716,
									"nodeType": "InheritanceSpecifier",
									"src": "1923:5:4"
								}
							],
							"canonicalName": "FixedToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 714,
								"nodeType": "StructuredDocumentation",
								"src": "1409:489:4",
								"text": " @title Simple Token\n @author Breakthrough Labs Inc.\n @notice Token, ERC20, Fixed Supply\n @custom:version 1.0.7\n @custom:address 4\n @custom:default-precision 18\n @custom:simple-description Simple Token. A fixed supply is minted on deployment, and\n new tokens can never be created.\n @dev ERC20 token with the following features:\n  - Premint your total supply.\n  - No minting function. This allows users to comfortably know the future supply of the token."
							},
							"fullyImplemented": true,
							"id": 738,
							"linearizedBaseContracts": [
								738,
								585,
								688,
								663,
								710
							],
							"name": "FixedToken",
							"nameLocation": "1909:10:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "2187:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 731,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2203:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2207:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2203:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 723,
															"src": "2215:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2197:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2197:30:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "2197:30:4"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1935:114:4",
										"text": " @param name Token Name\n @param symbol Token Symbol\n @param totalSupply Token Supply"
									},
									"id": 737,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 726,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 719,
													"src": "2173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 727,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 721,
													"src": "2179:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 728,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 725,
												"name": "ERC20",
												"nameLocations": [
													"2167:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 585,
												"src": "2167:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "2167:19:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2089:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2075:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 718,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2075:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "2117:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2103:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 720,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2103:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "totalSupply",
												"nameLocation": "2141:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "2133:19:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2133:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:93:4"
									},
									"returnParameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2187:0:4"
									},
									"scope": 738,
									"src": "2054:180:4",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 739,
							"src": "1900:336:4",
							"usedErrors": [],
							"usedEvents": [
								597,
								606
							]
						}
					],
					"src": "1313:925:4"
				},
				"id": 4
			}
		}
	}
}